// Implementation file for parser generated by fsyacc
module internal Microsoft.FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 3 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open Internal.Utilities

open Microsoft.FSharp.Compiler.AbstractIL
open Microsoft.FSharp.Compiler.AbstractIL.Internal
open Microsoft.FSharp.Compiler.AbstractIL.Internal.Library
open Microsoft.FSharp.Compiler
open Internal.Utilities.Text.Parsing

open System
open Microsoft.FSharp.Compiler.Range
open Microsoft.FSharp.Compiler.Ast
open Microsoft.FSharp.Compiler.Lib
open Microsoft.FSharp.Compiler.PrettyNaming
open Microsoft.FSharp.Compiler.ErrorLogger

#if DEBUG
let debugPrint(s) =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint(s) = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError(e,e.Range)
let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr (m: range) xopt = 
    let m = m.MakeSynthetic()
    match xopt with 
    | None -> mkSynLidGet m Ast.FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App(ExprAtomicFlag.NonAtomic, false, mkSynLidGet m Ast.FSharpLib.CorePath "Some",x,m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep)::acc)
        | (f, m)::xs -> run f xs ((name, value, m)::acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false
let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis,strict,expr,m) = 
    match vis with
    | Some vis -> errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations (vis.ToString()),m))
    | None -> ()
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false,false,[],PreXmlDoc.Empty,SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit,m) else SynPat.Wild m),
             None,expr,m,NoSequencePointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoSequencePointAtDoBinding else SequencePointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p,attrs,p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s,m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_,_,m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_,m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_,_,m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_,_,m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_,_,m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_,_,m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_,_,m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_,m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_,_,m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_,m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

//                BindingSetPreAttrs(letRange, isRec, isUse, builderFunction, wholeRange)
type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic,initialRangeOpt,attrs,vis,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,bindingSetRange)) = 
   let ignoredFreeAttrs,decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(),wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(),wholeRange))
   SynMemberDefn.LetBindings (decls,isStatic,isRec,wholeRange)

let mkLocalBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_),body) = 
   let ignoredFreeAttrs,decls = declsPreAttrs [] None 
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(),mWhole))
   SynExpr.LetOrUse (isRec,isUse,decls,body,mWhole) 

let mkDefnBindings (mWhole,BindingSetPreAttrs(_,isRec,isUse,declsPreAttrs,_bindingSetRange),attrs,vis,attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(),mWhole))
    let freeAttrs,decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec,decls,mWhole) ] 
    let attrDecls = if not (isNil freeAttrs) then [ SynModuleDecl.Attributes (freeAttrs,attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat m p = 
    match p with 
    | SynPat.Named (SynPat.Wild _,id,false,_,_) -> id 
    | SynPat.LongIdent(LongIdentWithDots([id],_),_,_,_,_,_) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if not (isNil a1) && not (isNil a2) then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed())
    a1 @ a2

let grabXmlDoc(parseState:IParseState,elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer,rhs parseState elemIdx)

let unionRangeWithListBy projectRangeFromThing m listOfThing = 
    (m, listOfThing) ||> List.fold (fun m thing -> unionRanges m (projectRangeFromThing thing))

let rangeOfNonNilAttrs(attrs:SynAttributes) =
    (attrs.Head.Range,attrs.Tail) ||> unionRangeWithListBy (fun a -> a.Range)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange,lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 161 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * Ast.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * Ast.LexerWhitespaceContinuation)
  | COMMENT of (Ast.LexerWhitespaceContinuation)
  | WHITESPACE of (Ast.LexerWhitespaceContinuation)
  | HASH_LINE of (Ast.LexerWhitespaceContinuation)
  | HASH_LIGHT of (Ast.LexerWhitespaceContinuation)
  | INACTIVECODE of (Ast.LexerWhitespaceContinuation)
  | LINE_COMMENT of (Ast.LexerWhitespaceContinuation)
  | STRING_TEXT of (Ast.LexerWhitespaceContinuation)
  | EOF of (Ast.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | FIXED
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | LBRACE_LESS
  | BAR_RBRACK
  | GREATER_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_FIXED
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_LBRACE_LESS
    | TOKEN_BAR_RBRACK
    | TOKEN_GREATER_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSeqExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_typedSeqExprEOF
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_inlineAssemblyExpr
    | NONTERM_opt_curriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_opt_inlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_forLoopDirection
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_tupleTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_appTypeNonAtomicDeprecated
    | NONTERM_powerTypeNonAtomicDeprecated
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_stringOrKeywordString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | FIXED  -> 13 
  | OINTERFACE_MEMBER  -> 14 
  | OBLOCKEND  -> 15 
  | OBLOCKEND_COMING_SOON  -> 16 
  | OBLOCKEND_IS_HERE  -> 17 
  | ORIGHT_BLOCK_END  -> 18 
  | ODECLEND  -> 19 
  | OEND  -> 20 
  | OBLOCKSEP  -> 21 
  | OBLOCKBEGIN  -> 22 
  | ORESET  -> 23 
  | OFUN  -> 24 
  | OFUNCTION  -> 25 
  | OWITH  -> 26 
  | OELSE  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OBINDER _ -> 31 
  | OLET _ -> 32 
  | HIGH_PRECEDENCE_TYAPP  -> 33 
  | HIGH_PRECEDENCE_PAREN_APP  -> 34 
  | HIGH_PRECEDENCE_BRACK_APP  -> 35 
  | TYPE_COMING_SOON  -> 36 
  | TYPE_IS_HERE  -> 37 
  | MODULE_COMING_SOON  -> 38 
  | MODULE_IS_HERE  -> 39 
  | EXTERN  -> 40 
  | VOID  -> 41 
  | PUBLIC  -> 42 
  | PRIVATE  -> 43 
  | INTERNAL  -> 44 
  | GLOBAL  -> 45 
  | STATIC  -> 46 
  | MEMBER  -> 47 
  | CLASS  -> 48 
  | ABSTRACT  -> 49 
  | OVERRIDE  -> 50 
  | DEFAULT  -> 51 
  | CONSTRUCTOR  -> 52 
  | INHERIT  -> 53 
  | GREATER_RBRACK  -> 54 
  | STRUCT  -> 55 
  | SIG  -> 56 
  | BAR  -> 57 
  | RBRACK  -> 58 
  | RBRACE  -> 59 
  | RBRACE_COMING_SOON  -> 60 
  | RBRACE_IS_HERE  -> 61 
  | MINUS  -> 62 
  | DOLLAR  -> 63 
  | LBRACE_LESS  -> 64 
  | BAR_RBRACK  -> 65 
  | GREATER_RBRACE  -> 66 
  | UNDERSCORE  -> 67 
  | SEMICOLON_SEMICOLON  -> 68 
  | LARROW  -> 69 
  | EQUALS  -> 70 
  | LBRACK  -> 71 
  | LBRACK_BAR  -> 72 
  | LBRACK_LESS  -> 73 
  | LBRACE  -> 74 
  | QMARK  -> 75 
  | QMARK_QMARK  -> 76 
  | DOT  -> 77 
  | COLON  -> 78 
  | COLON_COLON  -> 79 
  | COLON_GREATER  -> 80 
  | COLON_QMARK_GREATER  -> 81 
  | COLON_QMARK  -> 82 
  | COLON_EQUALS  -> 83 
  | SEMICOLON  -> 84 
  | WHEN  -> 85 
  | WHILE  -> 86 
  | WITH  -> 87 
  | HASH  -> 88 
  | AMP  -> 89 
  | AMP_AMP  -> 90 
  | QUOTE  -> 91 
  | LPAREN  -> 92 
  | RPAREN  -> 93 
  | RPAREN_COMING_SOON  -> 94 
  | RPAREN_IS_HERE  -> 95 
  | STAR  -> 96 
  | COMMA  -> 97 
  | RARROW  -> 98 
  | GREATER_BAR_RBRACK  -> 99 
  | LPAREN_STAR_RPAREN  -> 100 
  | OPEN  -> 101 
  | OR  -> 102 
  | REC  -> 103 
  | THEN  -> 104 
  | TO  -> 105 
  | TRUE  -> 106 
  | TRY  -> 107 
  | TYPE  -> 108 
  | VAL  -> 109 
  | INLINE  -> 110 
  | INTERFACE  -> 111 
  | INSTANCE  -> 112 
  | CONST  -> 113 
  | LAZY  -> 114 
  | OLAZY  -> 115 
  | MATCH  -> 116 
  | MUTABLE  -> 117 
  | NEW  -> 118 
  | OF  -> 119 
  | EXCEPTION  -> 120 
  | FALSE  -> 121 
  | FOR  -> 122 
  | FUN  -> 123 
  | FUNCTION  -> 124 
  | IF  -> 125 
  | IN  -> 126 
  | JOIN_IN  -> 127 
  | FINALLY  -> 128 
  | DO_BANG  -> 129 
  | AND  -> 130 
  | AS  -> 131 
  | ASSERT  -> 132 
  | OASSERT  -> 133 
  | ASR  -> 134 
  | BEGIN  -> 135 
  | DO  -> 136 
  | DONE  -> 137 
  | DOWNTO  -> 138 
  | ELSE  -> 139 
  | ELIF  -> 140 
  | END  -> 141 
  | DOT_DOT  -> 142 
  | BAR_BAR  -> 143 
  | UPCAST  -> 144 
  | DOWNCAST  -> 145 
  | NULL  -> 146 
  | RESERVED  -> 147 
  | MODULE  -> 148 
  | NAMESPACE  -> 149 
  | DELEGATE  -> 150 
  | CONSTRAINT  -> 151 
  | BASE  -> 152 
  | LQUOTE _ -> 153 
  | RQUOTE _ -> 154 
  | RQUOTE_DOT _ -> 155 
  | PERCENT_OP _ -> 156 
  | BINDER _ -> 157 
  | LESS _ -> 158 
  | GREATER _ -> 159 
  | LET _ -> 160 
  | YIELD _ -> 161 
  | YIELD_BANG _ -> 162 
  | BIGNUM _ -> 163 
  | DECIMAL _ -> 164 
  | CHAR _ -> 165 
  | IEEE64 _ -> 166 
  | IEEE32 _ -> 167 
  | NATIVEINT _ -> 168 
  | UNATIVEINT _ -> 169 
  | UINT64 _ -> 170 
  | UINT32 _ -> 171 
  | UINT16 _ -> 172 
  | UINT8 _ -> 173 
  | INT64 _ -> 174 
  | INT32 _ -> 175 
  | INT32_DOT_DOT _ -> 176 
  | INT16 _ -> 177 
  | INT8 _ -> 178 
  | FUNKY_OPERATOR_NAME _ -> 179 
  | ADJACENT_PREFIX_OP _ -> 180 
  | PLUS_MINUS_OP _ -> 181 
  | INFIX_AMP_OP _ -> 182 
  | INFIX_STAR_DIV_MOD_OP _ -> 183 
  | PREFIX_OP _ -> 184 
  | INFIX_BAR_OP _ -> 185 
  | INFIX_AT_HAT_OP _ -> 186 
  | INFIX_COMPARE_OP _ -> 187 
  | INFIX_STAR_STAR_OP _ -> 188 
  | IDENT _ -> 189 
  | KEYWORD_STRING _ -> 190 
  | STRING _ -> 191 
  | BYTEARRAY _ -> 192 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_FIXED 
  | 14 -> TOKEN_OINTERFACE_MEMBER 
  | 15 -> TOKEN_OBLOCKEND 
  | 16 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 17 -> TOKEN_OBLOCKEND_IS_HERE 
  | 18 -> TOKEN_ORIGHT_BLOCK_END 
  | 19 -> TOKEN_ODECLEND 
  | 20 -> TOKEN_OEND 
  | 21 -> TOKEN_OBLOCKSEP 
  | 22 -> TOKEN_OBLOCKBEGIN 
  | 23 -> TOKEN_ORESET 
  | 24 -> TOKEN_OFUN 
  | 25 -> TOKEN_OFUNCTION 
  | 26 -> TOKEN_OWITH 
  | 27 -> TOKEN_OELSE 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OBINDER 
  | 32 -> TOKEN_OLET 
  | 33 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 34 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 35 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 36 -> TOKEN_TYPE_COMING_SOON 
  | 37 -> TOKEN_TYPE_IS_HERE 
  | 38 -> TOKEN_MODULE_COMING_SOON 
  | 39 -> TOKEN_MODULE_IS_HERE 
  | 40 -> TOKEN_EXTERN 
  | 41 -> TOKEN_VOID 
  | 42 -> TOKEN_PUBLIC 
  | 43 -> TOKEN_PRIVATE 
  | 44 -> TOKEN_INTERNAL 
  | 45 -> TOKEN_GLOBAL 
  | 46 -> TOKEN_STATIC 
  | 47 -> TOKEN_MEMBER 
  | 48 -> TOKEN_CLASS 
  | 49 -> TOKEN_ABSTRACT 
  | 50 -> TOKEN_OVERRIDE 
  | 51 -> TOKEN_DEFAULT 
  | 52 -> TOKEN_CONSTRUCTOR 
  | 53 -> TOKEN_INHERIT 
  | 54 -> TOKEN_GREATER_RBRACK 
  | 55 -> TOKEN_STRUCT 
  | 56 -> TOKEN_SIG 
  | 57 -> TOKEN_BAR 
  | 58 -> TOKEN_RBRACK 
  | 59 -> TOKEN_RBRACE 
  | 60 -> TOKEN_RBRACE_COMING_SOON 
  | 61 -> TOKEN_RBRACE_IS_HERE 
  | 62 -> TOKEN_MINUS 
  | 63 -> TOKEN_DOLLAR 
  | 64 -> TOKEN_LBRACE_LESS 
  | 65 -> TOKEN_BAR_RBRACK 
  | 66 -> TOKEN_GREATER_RBRACE 
  | 67 -> TOKEN_UNDERSCORE 
  | 68 -> TOKEN_SEMICOLON_SEMICOLON 
  | 69 -> TOKEN_LARROW 
  | 70 -> TOKEN_EQUALS 
  | 71 -> TOKEN_LBRACK 
  | 72 -> TOKEN_LBRACK_BAR 
  | 73 -> TOKEN_LBRACK_LESS 
  | 74 -> TOKEN_LBRACE 
  | 75 -> TOKEN_QMARK 
  | 76 -> TOKEN_QMARK_QMARK 
  | 77 -> TOKEN_DOT 
  | 78 -> TOKEN_COLON 
  | 79 -> TOKEN_COLON_COLON 
  | 80 -> TOKEN_COLON_GREATER 
  | 81 -> TOKEN_COLON_QMARK_GREATER 
  | 82 -> TOKEN_COLON_QMARK 
  | 83 -> TOKEN_COLON_EQUALS 
  | 84 -> TOKEN_SEMICOLON 
  | 85 -> TOKEN_WHEN 
  | 86 -> TOKEN_WHILE 
  | 87 -> TOKEN_WITH 
  | 88 -> TOKEN_HASH 
  | 89 -> TOKEN_AMP 
  | 90 -> TOKEN_AMP_AMP 
  | 91 -> TOKEN_QUOTE 
  | 92 -> TOKEN_LPAREN 
  | 93 -> TOKEN_RPAREN 
  | 94 -> TOKEN_RPAREN_COMING_SOON 
  | 95 -> TOKEN_RPAREN_IS_HERE 
  | 96 -> TOKEN_STAR 
  | 97 -> TOKEN_COMMA 
  | 98 -> TOKEN_RARROW 
  | 99 -> TOKEN_GREATER_BAR_RBRACK 
  | 100 -> TOKEN_LPAREN_STAR_RPAREN 
  | 101 -> TOKEN_OPEN 
  | 102 -> TOKEN_OR 
  | 103 -> TOKEN_REC 
  | 104 -> TOKEN_THEN 
  | 105 -> TOKEN_TO 
  | 106 -> TOKEN_TRUE 
  | 107 -> TOKEN_TRY 
  | 108 -> TOKEN_TYPE 
  | 109 -> TOKEN_VAL 
  | 110 -> TOKEN_INLINE 
  | 111 -> TOKEN_INTERFACE 
  | 112 -> TOKEN_INSTANCE 
  | 113 -> TOKEN_CONST 
  | 114 -> TOKEN_LAZY 
  | 115 -> TOKEN_OLAZY 
  | 116 -> TOKEN_MATCH 
  | 117 -> TOKEN_MUTABLE 
  | 118 -> TOKEN_NEW 
  | 119 -> TOKEN_OF 
  | 120 -> TOKEN_EXCEPTION 
  | 121 -> TOKEN_FALSE 
  | 122 -> TOKEN_FOR 
  | 123 -> TOKEN_FUN 
  | 124 -> TOKEN_FUNCTION 
  | 125 -> TOKEN_IF 
  | 126 -> TOKEN_IN 
  | 127 -> TOKEN_JOIN_IN 
  | 128 -> TOKEN_FINALLY 
  | 129 -> TOKEN_DO_BANG 
  | 130 -> TOKEN_AND 
  | 131 -> TOKEN_AS 
  | 132 -> TOKEN_ASSERT 
  | 133 -> TOKEN_OASSERT 
  | 134 -> TOKEN_ASR 
  | 135 -> TOKEN_BEGIN 
  | 136 -> TOKEN_DO 
  | 137 -> TOKEN_DONE 
  | 138 -> TOKEN_DOWNTO 
  | 139 -> TOKEN_ELSE 
  | 140 -> TOKEN_ELIF 
  | 141 -> TOKEN_END 
  | 142 -> TOKEN_DOT_DOT 
  | 143 -> TOKEN_BAR_BAR 
  | 144 -> TOKEN_UPCAST 
  | 145 -> TOKEN_DOWNCAST 
  | 146 -> TOKEN_NULL 
  | 147 -> TOKEN_RESERVED 
  | 148 -> TOKEN_MODULE 
  | 149 -> TOKEN_NAMESPACE 
  | 150 -> TOKEN_DELEGATE 
  | 151 -> TOKEN_CONSTRAINT 
  | 152 -> TOKEN_BASE 
  | 153 -> TOKEN_LQUOTE 
  | 154 -> TOKEN_RQUOTE 
  | 155 -> TOKEN_RQUOTE_DOT 
  | 156 -> TOKEN_PERCENT_OP 
  | 157 -> TOKEN_BINDER 
  | 158 -> TOKEN_LESS 
  | 159 -> TOKEN_GREATER 
  | 160 -> TOKEN_LET 
  | 161 -> TOKEN_YIELD 
  | 162 -> TOKEN_YIELD_BANG 
  | 163 -> TOKEN_BIGNUM 
  | 164 -> TOKEN_DECIMAL 
  | 165 -> TOKEN_CHAR 
  | 166 -> TOKEN_IEEE64 
  | 167 -> TOKEN_IEEE32 
  | 168 -> TOKEN_NATIVEINT 
  | 169 -> TOKEN_UNATIVEINT 
  | 170 -> TOKEN_UINT64 
  | 171 -> TOKEN_UINT32 
  | 172 -> TOKEN_UINT16 
  | 173 -> TOKEN_UINT8 
  | 174 -> TOKEN_INT64 
  | 175 -> TOKEN_INT32 
  | 176 -> TOKEN_INT32_DOT_DOT 
  | 177 -> TOKEN_INT16 
  | 178 -> TOKEN_INT8 
  | 179 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 180 -> TOKEN_ADJACENT_PREFIX_OP 
  | 181 -> TOKEN_PLUS_MINUS_OP 
  | 182 -> TOKEN_INFIX_AMP_OP 
  | 183 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 184 -> TOKEN_PREFIX_OP 
  | 185 -> TOKEN_INFIX_BAR_OP 
  | 186 -> TOKEN_INFIX_AT_HAT_OP 
  | 187 -> TOKEN_INFIX_COMPARE_OP 
  | 188 -> TOKEN_INFIX_STAR_STAR_OP 
  | 189 -> TOKEN_IDENT 
  | 190 -> TOKEN_KEYWORD_STRING 
  | 191 -> TOKEN_STRING 
  | 192 -> TOKEN_BYTEARRAY 
  | 195 -> TOKEN_end_of_input
  | 193 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSeqExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_moduleIntro 
    | 33 -> NONTERM_namespaceIntro 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpec 
    | 39 -> NONTERM_fileModuleSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_valSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_tyconSpfns 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_namedModuleAbbrevBlock 
    | 145 -> NONTERM_namedModuleAbbrevBlock 
    | 146 -> NONTERM_namedModuleDefnBlock 
    | 147 -> NONTERM_namedModuleDefnBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_wrappedNamedModuleDefn 
    | 154 -> NONTERM_wrappedNamedModuleDefn 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_tyconDefnAugmentation 
    | 157 -> NONTERM_opt_attributes 
    | 158 -> NONTERM_opt_attributes 
    | 159 -> NONTERM_attributes 
    | 160 -> NONTERM_attributes 
    | 161 -> NONTERM_attributeList 
    | 162 -> NONTERM_attributeList 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeListElements 
    | 166 -> NONTERM_attributeListElements 
    | 167 -> NONTERM_attribute 
    | 168 -> NONTERM_attribute 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attributeTarget 
    | 171 -> NONTERM_attributeTarget 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_memberFlags 
    | 175 -> NONTERM_memberFlags 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_typeNameInfo 
    | 179 -> NONTERM_tyconDefnList 
    | 180 -> NONTERM_tyconDefnList 
    | 181 -> NONTERM_tyconDefn 
    | 182 -> NONTERM_tyconDefn 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefnRhsBlock 
    | 186 -> NONTERM_tyconDefnRhsBlock 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhs 
    | 189 -> NONTERM_tyconDefnRhs 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconClassDefn 
    | 192 -> NONTERM_tyconClassDefn 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_classDefnBlockKindUnspecified 
    | 196 -> NONTERM_classDefnBlockKindUnspecified 
    | 197 -> NONTERM_classDefnBlock 
    | 198 -> NONTERM_classDefnBlock 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnMembers 
    | 201 -> NONTERM_classDefnMembers 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembersAtLeastOne 
    | 204 -> NONTERM_classDefnMemberGetSet 
    | 205 -> NONTERM_classDefnMemberGetSet 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSetElements 
    | 208 -> NONTERM_classDefnMemberGetSetElements 
    | 209 -> NONTERM_classDefnMemberGetSetElement 
    | 210 -> NONTERM_memberCore 
    | 211 -> NONTERM_memberCore 
    | 212 -> NONTERM_abstractMemberFlags 
    | 213 -> NONTERM_abstractMemberFlags 
    | 214 -> NONTERM_classDefnMember 
    | 215 -> NONTERM_classDefnMember 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_valDefnDecl 
    | 226 -> NONTERM_autoPropsDefnDecl 
    | 227 -> NONTERM_opt_typ 
    | 228 -> NONTERM_opt_typ 
    | 229 -> NONTERM_atomicPatternLongIdent 
    | 230 -> NONTERM_atomicPatternLongIdent 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_opt_access 
    | 233 -> NONTERM_opt_access 
    | 234 -> NONTERM_access 
    | 235 -> NONTERM_access 
    | 236 -> NONTERM_access 
    | 237 -> NONTERM_opt_declVisibility 
    | 238 -> NONTERM_opt_declVisibility 
    | 239 -> NONTERM_opt_interfaceImplDefn 
    | 240 -> NONTERM_opt_interfaceImplDefn 
    | 241 -> NONTERM_opt_classDefn 
    | 242 -> NONTERM_opt_classDefn 
    | 243 -> NONTERM_inheritsDefn 
    | 244 -> NONTERM_inheritsDefn 
    | 245 -> NONTERM_inheritsDefn 
    | 246 -> NONTERM_optAsSpec 
    | 247 -> NONTERM_optAsSpec 
    | 248 -> NONTERM_asSpec 
    | 249 -> NONTERM_optBaseSpec 
    | 250 -> NONTERM_optBaseSpec 
    | 251 -> NONTERM_baseSpec 
    | 252 -> NONTERM_baseSpec 
    | 253 -> NONTERM_objectImplementationBlock 
    | 254 -> NONTERM_objectImplementationBlock 
    | 255 -> NONTERM_objectImplementationBlock 
    | 256 -> NONTERM_objectImplementationMembers 
    | 257 -> NONTERM_objectImplementationMembers 
    | 258 -> NONTERM_objectImplementationMember 
    | 259 -> NONTERM_objectImplementationMember 
    | 260 -> NONTERM_objectImplementationMember 
    | 261 -> NONTERM_objectImplementationMember 
    | 262 -> NONTERM_memberOrOverride 
    | 263 -> NONTERM_memberOrOverride 
    | 264 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 265 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 266 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 267 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 268 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 269 -> NONTERM_braceFieldDeclList 
    | 270 -> NONTERM_braceFieldDeclList 
    | 271 -> NONTERM_braceFieldDeclList 
    | 272 -> NONTERM_inlineAssemblyTyconRepr 
    | 273 -> NONTERM_classOrInterfaceOrStruct 
    | 274 -> NONTERM_classOrInterfaceOrStruct 
    | 275 -> NONTERM_classOrInterfaceOrStruct 
    | 276 -> NONTERM_interfaceMember 
    | 277 -> NONTERM_interfaceMember 
    | 278 -> NONTERM_tyconNameAndTyparDecls 
    | 279 -> NONTERM_tyconNameAndTyparDecls 
    | 280 -> NONTERM_tyconNameAndTyparDecls 
    | 281 -> NONTERM_prefixTyparDecls 
    | 282 -> NONTERM_prefixTyparDecls 
    | 283 -> NONTERM_typarDeclList 
    | 284 -> NONTERM_typarDeclList 
    | 285 -> NONTERM_typarDecl 
    | 286 -> NONTERM_postfixTyparDecls 
    | 287 -> NONTERM_explicitValTyparDeclsCore 
    | 288 -> NONTERM_explicitValTyparDeclsCore 
    | 289 -> NONTERM_explicitValTyparDeclsCore 
    | 290 -> NONTERM_explicitValTyparDecls 
    | 291 -> NONTERM_opt_explicitValTyparDecls 
    | 292 -> NONTERM_opt_explicitValTyparDecls 
    | 293 -> NONTERM_opt_explicitValTyparDecls2 
    | 294 -> NONTERM_opt_explicitValTyparDecls2 
    | 295 -> NONTERM_opt_typeConstraints 
    | 296 -> NONTERM_opt_typeConstraints 
    | 297 -> NONTERM_typeConstraints 
    | 298 -> NONTERM_typeConstraints 
    | 299 -> NONTERM_typeConstraint 
    | 300 -> NONTERM_typeConstraint 
    | 301 -> NONTERM_typeConstraint 
    | 302 -> NONTERM_typeConstraint 
    | 303 -> NONTERM_typeConstraint 
    | 304 -> NONTERM_typeConstraint 
    | 305 -> NONTERM_typeConstraint 
    | 306 -> NONTERM_typeConstraint 
    | 307 -> NONTERM_typeConstraint 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typarAlts 
    | 310 -> NONTERM_typarAlts 
    | 311 -> NONTERM_unionTypeRepr 
    | 312 -> NONTERM_unionTypeRepr 
    | 313 -> NONTERM_unionTypeRepr 
    | 314 -> NONTERM_barAndgrabXmlDoc 
    | 315 -> NONTERM_attrUnionCaseDecls 
    | 316 -> NONTERM_attrUnionCaseDecls 
    | 317 -> NONTERM_attrUnionCaseDecl 
    | 318 -> NONTERM_attrUnionCaseDecl 
    | 319 -> NONTERM_attrUnionCaseDecl 
    | 320 -> NONTERM_attrUnionCaseDecl 
    | 321 -> NONTERM_unionCaseName 
    | 322 -> NONTERM_unionCaseName 
    | 323 -> NONTERM_unionCaseName 
    | 324 -> NONTERM_firstUnionCaseDeclOfMany 
    | 325 -> NONTERM_firstUnionCaseDeclOfMany 
    | 326 -> NONTERM_firstUnionCaseDeclOfMany 
    | 327 -> NONTERM_firstUnionCaseDecl 
    | 328 -> NONTERM_firstUnionCaseDecl 
    | 329 -> NONTERM_unionCaseReprElements 
    | 330 -> NONTERM_unionCaseReprElements 
    | 331 -> NONTERM_unionCaseReprElement 
    | 332 -> NONTERM_unionCaseReprElement 
    | 333 -> NONTERM_unionCaseRepr 
    | 334 -> NONTERM_unionCaseRepr 
    | 335 -> NONTERM_recdFieldDeclList 
    | 336 -> NONTERM_recdFieldDeclList 
    | 337 -> NONTERM_recdFieldDecl 
    | 338 -> NONTERM_fieldDecl 
    | 339 -> NONTERM_exconDefn 
    | 340 -> NONTERM_exceptionAndGrabDoc 
    | 341 -> NONTERM_exconCore 
    | 342 -> NONTERM_exconIntro 
    | 343 -> NONTERM_exconIntro 
    | 344 -> NONTERM_exconRepr 
    | 345 -> NONTERM_exconRepr 
    | 346 -> NONTERM_openDecl 
    | 347 -> NONTERM_defnBindings 
    | 348 -> NONTERM_defnBindings 
    | 349 -> NONTERM_doBinding 
    | 350 -> NONTERM_hardwhiteLetBindings 
    | 351 -> NONTERM_hardwhiteDoBinding 
    | 352 -> NONTERM_classDefnBindings 
    | 353 -> NONTERM_classDefnBindings 
    | 354 -> NONTERM_classDefnBindings 
    | 355 -> NONTERM_classDefnBindings 
    | 356 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 357 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 358 -> NONTERM_cPrototype 
    | 359 -> NONTERM_cArgs 
    | 360 -> NONTERM_cArgs 
    | 361 -> NONTERM_cArgs 
    | 362 -> NONTERM_cMoreArgs 
    | 363 -> NONTERM_cMoreArgs 
    | 364 -> NONTERM_cArg 
    | 365 -> NONTERM_cArg 
    | 366 -> NONTERM_cType 
    | 367 -> NONTERM_cType 
    | 368 -> NONTERM_cType 
    | 369 -> NONTERM_cType 
    | 370 -> NONTERM_cType 
    | 371 -> NONTERM_cRetType 
    | 372 -> NONTERM_cRetType 
    | 373 -> NONTERM_localBindings 
    | 374 -> NONTERM_moreLocalBindings 
    | 375 -> NONTERM_moreLocalBindings 
    | 376 -> NONTERM_attr_localBinding 
    | 377 -> NONTERM_attr_localBinding 
    | 378 -> NONTERM_localBinding 
    | 379 -> NONTERM_localBinding 
    | 380 -> NONTERM_localBinding 
    | 381 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 382 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 383 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 384 -> NONTERM_typedExprWithStaticOptimizations 
    | 385 -> NONTERM_opt_staticOptimizations 
    | 386 -> NONTERM_opt_staticOptimizations 
    | 387 -> NONTERM_staticOptimization 
    | 388 -> NONTERM_staticOptimizationConditions 
    | 389 -> NONTERM_staticOptimizationConditions 
    | 390 -> NONTERM_staticOptimizationCondition 
    | 391 -> NONTERM_staticOptimizationCondition 
    | 392 -> NONTERM_rawConstant 
    | 393 -> NONTERM_rawConstant 
    | 394 -> NONTERM_rawConstant 
    | 395 -> NONTERM_rawConstant 
    | 396 -> NONTERM_rawConstant 
    | 397 -> NONTERM_rawConstant 
    | 398 -> NONTERM_rawConstant 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rationalConstant 
    | 410 -> NONTERM_rationalConstant 
    | 411 -> NONTERM_rationalConstant 
    | 412 -> NONTERM_rationalConstant 
    | 413 -> NONTERM_atomicUnsignedRationalConstant 
    | 414 -> NONTERM_atomicUnsignedRationalConstant 
    | 415 -> NONTERM_atomicRationalConstant 
    | 416 -> NONTERM_atomicRationalConstant 
    | 417 -> NONTERM_constant 
    | 418 -> NONTERM_constant 
    | 419 -> NONTERM_bindingPattern 
    | 420 -> NONTERM_simplePattern 
    | 421 -> NONTERM_simplePattern 
    | 422 -> NONTERM_simplePattern 
    | 423 -> NONTERM_simplePattern 
    | 424 -> NONTERM_simplePatternCommaList 
    | 425 -> NONTERM_simplePatternCommaList 
    | 426 -> NONTERM_simplePatterns 
    | 427 -> NONTERM_simplePatterns 
    | 428 -> NONTERM_simplePatterns 
    | 429 -> NONTERM_simplePatterns 
    | 430 -> NONTERM_simplePatterns 
    | 431 -> NONTERM_headBindingPattern 
    | 432 -> NONTERM_headBindingPattern 
    | 433 -> NONTERM_headBindingPattern 
    | 434 -> NONTERM_headBindingPattern 
    | 435 -> NONTERM_headBindingPattern 
    | 436 -> NONTERM_headBindingPattern 
    | 437 -> NONTERM_tuplePatternElements 
    | 438 -> NONTERM_tuplePatternElements 
    | 439 -> NONTERM_conjPatternElements 
    | 440 -> NONTERM_conjPatternElements 
    | 441 -> NONTERM_namePatPairs 
    | 442 -> NONTERM_namePatPairs 
    | 443 -> NONTERM_namePatPair 
    | 444 -> NONTERM_constrPattern 
    | 445 -> NONTERM_constrPattern 
    | 446 -> NONTERM_constrPattern 
    | 447 -> NONTERM_constrPattern 
    | 448 -> NONTERM_constrPattern 
    | 449 -> NONTERM_constrPattern 
    | 450 -> NONTERM_atomicPatsOrNamePatPairs 
    | 451 -> NONTERM_atomicPatsOrNamePatPairs 
    | 452 -> NONTERM_atomicPatterns 
    | 453 -> NONTERM_atomicPatterns 
    | 454 -> NONTERM_atomicPatterns 
    | 455 -> NONTERM_atomicPatterns 
    | 456 -> NONTERM_atomicPattern 
    | 457 -> NONTERM_atomicPattern 
    | 458 -> NONTERM_atomicPattern 
    | 459 -> NONTERM_atomicPattern 
    | 460 -> NONTERM_atomicPattern 
    | 461 -> NONTERM_atomicPattern 
    | 462 -> NONTERM_atomicPattern 
    | 463 -> NONTERM_atomicPattern 
    | 464 -> NONTERM_atomicPattern 
    | 465 -> NONTERM_atomicPattern 
    | 466 -> NONTERM_atomicPattern 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_atomicPattern 
    | 473 -> NONTERM_atomicPattern 
    | 474 -> NONTERM_atomicPattern 
    | 475 -> NONTERM_atomicPattern 
    | 476 -> NONTERM_parenPatternBody 
    | 477 -> NONTERM_parenPatternBody 
    | 478 -> NONTERM_parenPattern 
    | 479 -> NONTERM_parenPattern 
    | 480 -> NONTERM_parenPattern 
    | 481 -> NONTERM_parenPattern 
    | 482 -> NONTERM_parenPattern 
    | 483 -> NONTERM_parenPattern 
    | 484 -> NONTERM_parenPattern 
    | 485 -> NONTERM_parenPattern 
    | 486 -> NONTERM_tupleParenPatternElements 
    | 487 -> NONTERM_tupleParenPatternElements 
    | 488 -> NONTERM_conjParenPatternElements 
    | 489 -> NONTERM_conjParenPatternElements 
    | 490 -> NONTERM_recordPatternElements 
    | 491 -> NONTERM_recordPatternElementsAux 
    | 492 -> NONTERM_recordPatternElementsAux 
    | 493 -> NONTERM_recordPatternElement 
    | 494 -> NONTERM_listPatternElements 
    | 495 -> NONTERM_listPatternElements 
    | 496 -> NONTERM_listPatternElements 
    | 497 -> NONTERM_typedSeqExprBlock 
    | 498 -> NONTERM_typedSeqExprBlock 
    | 499 -> NONTERM_typedSeqExprBlock 
    | 500 -> NONTERM_declExprBlock 
    | 501 -> NONTERM_declExprBlock 
    | 502 -> NONTERM_typedSeqExprBlockR 
    | 503 -> NONTERM_typedSeqExprBlockR 
    | 504 -> NONTERM_typedSeqExpr 
    | 505 -> NONTERM_typedSeqExpr 
    | 506 -> NONTERM_typedSeqExprEOF 
    | 507 -> NONTERM_seqExpr 
    | 508 -> NONTERM_seqExpr 
    | 509 -> NONTERM_seqExpr 
    | 510 -> NONTERM_seqExpr 
    | 511 -> NONTERM_seqExpr 
    | 512 -> NONTERM_seqExpr 
    | 513 -> NONTERM_recover 
    | 514 -> NONTERM_recover 
    | 515 -> NONTERM_declExpr 
    | 516 -> NONTERM_declExpr 
    | 517 -> NONTERM_declExpr 
    | 518 -> NONTERM_declExpr 
    | 519 -> NONTERM_declExpr 
    | 520 -> NONTERM_declExpr 
    | 521 -> NONTERM_declExpr 
    | 522 -> NONTERM_declExpr 
    | 523 -> NONTERM_declExpr 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_declExpr 
    | 611 -> NONTERM_declExpr 
    | 612 -> NONTERM_declExpr 
    | 613 -> NONTERM_declExpr 
    | 614 -> NONTERM_declExpr 
    | 615 -> NONTERM_declExpr 
    | 616 -> NONTERM_dynamicArg 
    | 617 -> NONTERM_dynamicArg 
    | 618 -> NONTERM_withClauses 
    | 619 -> NONTERM_withClauses 
    | 620 -> NONTERM_withClauses 
    | 621 -> NONTERM_withPatternClauses 
    | 622 -> NONTERM_withPatternClauses 
    | 623 -> NONTERM_withPatternClauses 
    | 624 -> NONTERM_withPatternClauses 
    | 625 -> NONTERM_patternAndGuard 
    | 626 -> NONTERM_patternClauses 
    | 627 -> NONTERM_patternClauses 
    | 628 -> NONTERM_patternClauses 
    | 629 -> NONTERM_patternClauses 
    | 630 -> NONTERM_patternClauses 
    | 631 -> NONTERM_patternGuard 
    | 632 -> NONTERM_patternGuard 
    | 633 -> NONTERM_patternResult 
    | 634 -> NONTERM_ifExprCases 
    | 635 -> NONTERM_ifExprThen 
    | 636 -> NONTERM_ifExprThen 
    | 637 -> NONTERM_ifExprThen 
    | 638 -> NONTERM_ifExprElifs 
    | 639 -> NONTERM_ifExprElifs 
    | 640 -> NONTERM_ifExprElifs 
    | 641 -> NONTERM_ifExprElifs 
    | 642 -> NONTERM_ifExprElifs 
    | 643 -> NONTERM_ifExprElifs 
    | 644 -> NONTERM_tupleExpr 
    | 645 -> NONTERM_tupleExpr 
    | 646 -> NONTERM_tupleExpr 
    | 647 -> NONTERM_tupleExpr 
    | 648 -> NONTERM_minusExpr 
    | 649 -> NONTERM_minusExpr 
    | 650 -> NONTERM_minusExpr 
    | 651 -> NONTERM_minusExpr 
    | 652 -> NONTERM_minusExpr 
    | 653 -> NONTERM_minusExpr 
    | 654 -> NONTERM_minusExpr 
    | 655 -> NONTERM_minusExpr 
    | 656 -> NONTERM_minusExpr 
    | 657 -> NONTERM_minusExpr 
    | 658 -> NONTERM_minusExpr 
    | 659 -> NONTERM_minusExpr 
    | 660 -> NONTERM_appExpr 
    | 661 -> NONTERM_appExpr 
    | 662 -> NONTERM_argExpr 
    | 663 -> NONTERM_argExpr 
    | 664 -> NONTERM_atomicExpr 
    | 665 -> NONTERM_atomicExpr 
    | 666 -> NONTERM_atomicExpr 
    | 667 -> NONTERM_atomicExpr 
    | 668 -> NONTERM_atomicExpr 
    | 669 -> NONTERM_atomicExpr 
    | 670 -> NONTERM_atomicExpr 
    | 671 -> NONTERM_atomicExpr 
    | 672 -> NONTERM_atomicExpr 
    | 673 -> NONTERM_atomicExpr 
    | 674 -> NONTERM_atomicExpr 
    | 675 -> NONTERM_atomicExpr 
    | 676 -> NONTERM_atomicExpr 
    | 677 -> NONTERM_atomicExpr 
    | 678 -> NONTERM_atomicExpr 
    | 679 -> NONTERM_atomicExpr 
    | 680 -> NONTERM_atomicExpr 
    | 681 -> NONTERM_atomicExprQualification 
    | 682 -> NONTERM_atomicExprQualification 
    | 683 -> NONTERM_atomicExprQualification 
    | 684 -> NONTERM_atomicExprQualification 
    | 685 -> NONTERM_atomicExprQualification 
    | 686 -> NONTERM_atomicExprQualification 
    | 687 -> NONTERM_atomicExprQualification 
    | 688 -> NONTERM_atomicExprQualification 
    | 689 -> NONTERM_atomicExprQualification 
    | 690 -> NONTERM_atomicExprQualification 
    | 691 -> NONTERM_atomicExprQualification 
    | 692 -> NONTERM_optRangeSeqExpr 
    | 693 -> NONTERM_optRangeSeqExpr 
    | 694 -> NONTERM_optRange 
    | 695 -> NONTERM_optRange 
    | 696 -> NONTERM_optRange 
    | 697 -> NONTERM_optRange 
    | 698 -> NONTERM_optRange 
    | 699 -> NONTERM_atomicExprAfterType 
    | 700 -> NONTERM_atomicExprAfterType 
    | 701 -> NONTERM_atomicExprAfterType 
    | 702 -> NONTERM_atomicExprAfterType 
    | 703 -> NONTERM_atomicExprAfterType 
    | 704 -> NONTERM_atomicExprAfterType 
    | 705 -> NONTERM_atomicExprAfterType 
    | 706 -> NONTERM_atomicExprAfterType 
    | 707 -> NONTERM_atomicExprAfterType 
    | 708 -> NONTERM_beginEndExpr 
    | 709 -> NONTERM_beginEndExpr 
    | 710 -> NONTERM_beginEndExpr 
    | 711 -> NONTERM_beginEndExpr 
    | 712 -> NONTERM_quoteExpr 
    | 713 -> NONTERM_quoteExpr 
    | 714 -> NONTERM_quoteExpr 
    | 715 -> NONTERM_quoteExpr 
    | 716 -> NONTERM_arrayExpr 
    | 717 -> NONTERM_arrayExpr 
    | 718 -> NONTERM_arrayExpr 
    | 719 -> NONTERM_arrayExpr 
    | 720 -> NONTERM_parenExpr 
    | 721 -> NONTERM_parenExpr 
    | 722 -> NONTERM_parenExpr 
    | 723 -> NONTERM_parenExpr 
    | 724 -> NONTERM_parenExpr 
    | 725 -> NONTERM_parenExpr 
    | 726 -> NONTERM_parenExpr 
    | 727 -> NONTERM_parenExpr 
    | 728 -> NONTERM_parenExpr 
    | 729 -> NONTERM_parenExprBody 
    | 730 -> NONTERM_parenExprBody 
    | 731 -> NONTERM_parenExprBody 
    | 732 -> NONTERM_staticallyKnownHeadTypars 
    | 733 -> NONTERM_staticallyKnownHeadTypars 
    | 734 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 735 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 736 -> NONTERM_braceExpr 
    | 737 -> NONTERM_braceExpr 
    | 738 -> NONTERM_braceExpr 
    | 739 -> NONTERM_braceExpr 
    | 740 -> NONTERM_braceExpr 
    | 741 -> NONTERM_braceExprBody 
    | 742 -> NONTERM_braceExprBody 
    | 743 -> NONTERM_braceExprBody 
    | 744 -> NONTERM_listExprElements 
    | 745 -> NONTERM_listExprElements 
    | 746 -> NONTERM_monadicExprInitial 
    | 747 -> NONTERM_monadicExprInitial 
    | 748 -> NONTERM_rangeSequenceExpr 
    | 749 -> NONTERM_rangeSequenceExpr 
    | 750 -> NONTERM_rangeSequenceExpr 
    | 751 -> NONTERM_arrowThenExprR 
    | 752 -> NONTERM_forLoopBinder 
    | 753 -> NONTERM_forLoopBinder 
    | 754 -> NONTERM_forLoopBinder 
    | 755 -> NONTERM_forLoopBinder 
    | 756 -> NONTERM_forLoopRange 
    | 757 -> NONTERM_forLoopRange 
    | 758 -> NONTERM_inlineAssemblyExpr 
    | 759 -> NONTERM_opt_curriedArgExprs 
    | 760 -> NONTERM_opt_curriedArgExprs 
    | 761 -> NONTERM_opt_atomicExprAfterType 
    | 762 -> NONTERM_opt_atomicExprAfterType 
    | 763 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 764 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 765 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 766 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 767 -> NONTERM_opt_inlineAssemblyReturnTypes 
    | 768 -> NONTERM_recdExpr 
    | 769 -> NONTERM_recdExpr 
    | 770 -> NONTERM_recdExpr 
    | 771 -> NONTERM_recdExpr 
    | 772 -> NONTERM_recdExpr 
    | 773 -> NONTERM_recdExpr 
    | 774 -> NONTERM_recdExpr 
    | 775 -> NONTERM_recdExpr 
    | 776 -> NONTERM_opt_seps_recd 
    | 777 -> NONTERM_opt_seps_recd 
    | 778 -> NONTERM_seps_recd 
    | 779 -> NONTERM_seps_recd 
    | 780 -> NONTERM_seps_recd 
    | 781 -> NONTERM_seps_recd 
    | 782 -> NONTERM_pathOrUnderscore 
    | 783 -> NONTERM_pathOrUnderscore 
    | 784 -> NONTERM_recdExprBindings 
    | 785 -> NONTERM_recdExprBindings 
    | 786 -> NONTERM_recdBinding 
    | 787 -> NONTERM_recdBinding 
    | 788 -> NONTERM_recdBinding 
    | 789 -> NONTERM_recdBinding 
    | 790 -> NONTERM_recdBinding 
    | 791 -> NONTERM_objExpr 
    | 792 -> NONTERM_objExpr 
    | 793 -> NONTERM_objExpr 
    | 794 -> NONTERM_objExprBaseCall 
    | 795 -> NONTERM_objExprBaseCall 
    | 796 -> NONTERM_objExprBaseCall 
    | 797 -> NONTERM_opt_objExprBindings 
    | 798 -> NONTERM_opt_objExprBindings 
    | 799 -> NONTERM_objExprBindings 
    | 800 -> NONTERM_objExprBindings 
    | 801 -> NONTERM_objExprBindings 
    | 802 -> NONTERM_objExprInterfaces 
    | 803 -> NONTERM_opt_objExprInterfaces 
    | 804 -> NONTERM_opt_objExprInterfaces 
    | 805 -> NONTERM_opt_objExprInterfaces 
    | 806 -> NONTERM_objExprInterface 
    | 807 -> NONTERM_forLoopDirection 
    | 808 -> NONTERM_forLoopDirection 
    | 809 -> NONTERM_anonLambdaExpr 
    | 810 -> NONTERM_anonLambdaExpr 
    | 811 -> NONTERM_anonLambdaExpr 
    | 812 -> NONTERM_anonLambdaExpr 
    | 813 -> NONTERM_anonLambdaExpr 
    | 814 -> NONTERM_anonLambdaExpr 
    | 815 -> NONTERM_anonLambdaExpr 
    | 816 -> NONTERM_anonLambdaExpr 
    | 817 -> NONTERM_anonMatchingExpr 
    | 818 -> NONTERM_anonMatchingExpr 
    | 819 -> NONTERM_typeWithTypeConstraints 
    | 820 -> NONTERM_typeWithTypeConstraints 
    | 821 -> NONTERM_topTypeWithTypeConstraints 
    | 822 -> NONTERM_topTypeWithTypeConstraints 
    | 823 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 824 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 825 -> NONTERM_topType 
    | 826 -> NONTERM_topType 
    | 827 -> NONTERM_topTupleType 
    | 828 -> NONTERM_topTupleType 
    | 829 -> NONTERM_topTupleTypeElements 
    | 830 -> NONTERM_topTupleTypeElements 
    | 831 -> NONTERM_topAppType 
    | 832 -> NONTERM_topAppType 
    | 833 -> NONTERM_topAppType 
    | 834 -> NONTERM_topAppType 
    | 835 -> NONTERM_topAppType 
    | 836 -> NONTERM_topAppType 
    | 837 -> NONTERM_typ 
    | 838 -> NONTERM_typ 
    | 839 -> NONTERM_typEOF 
    | 840 -> NONTERM_tupleType 
    | 841 -> NONTERM_tupleType 
    | 842 -> NONTERM_tupleType 
    | 843 -> NONTERM_tupleType 
    | 844 -> NONTERM_tupleOrQuotTypeElements 
    | 845 -> NONTERM_tupleOrQuotTypeElements 
    | 846 -> NONTERM_tupleOrQuotTypeElements 
    | 847 -> NONTERM_tupleTypeElements 
    | 848 -> NONTERM_tupleTypeElements 
    | 849 -> NONTERM_appTypeCon 
    | 850 -> NONTERM_appTypeCon 
    | 851 -> NONTERM_appTypeConPower 
    | 852 -> NONTERM_appTypeConPower 
    | 853 -> NONTERM_appType 
    | 854 -> NONTERM_appType 
    | 855 -> NONTERM_appType 
    | 856 -> NONTERM_appType 
    | 857 -> NONTERM_appType 
    | 858 -> NONTERM_appType 
    | 859 -> NONTERM_appType 
    | 860 -> NONTERM_arrayTypeSuffix 
    | 861 -> NONTERM_arrayTypeSuffix 
    | 862 -> NONTERM_arrayTypeSuffix 
    | 863 -> NONTERM_arrayTypeSuffix 
    | 864 -> NONTERM_appTypePrefixArguments 
    | 865 -> NONTERM_typeArgListElements 
    | 866 -> NONTERM_typeArgListElements 
    | 867 -> NONTERM_typeArgListElements 
    | 868 -> NONTERM_powerType 
    | 869 -> NONTERM_powerType 
    | 870 -> NONTERM_appTypeNonAtomicDeprecated 
    | 871 -> NONTERM_appTypeNonAtomicDeprecated 
    | 872 -> NONTERM_appTypeNonAtomicDeprecated 
    | 873 -> NONTERM_appTypeNonAtomicDeprecated 
    | 874 -> NONTERM_appTypeNonAtomicDeprecated 
    | 875 -> NONTERM_appTypeNonAtomicDeprecated 
    | 876 -> NONTERM_appTypeNonAtomicDeprecated 
    | 877 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 878 -> NONTERM_powerTypeNonAtomicDeprecated 
    | 879 -> NONTERM_atomType 
    | 880 -> NONTERM_atomType 
    | 881 -> NONTERM_atomType 
    | 882 -> NONTERM_atomType 
    | 883 -> NONTERM_atomType 
    | 884 -> NONTERM_atomType 
    | 885 -> NONTERM_atomType 
    | 886 -> NONTERM_atomType 
    | 887 -> NONTERM_atomType 
    | 888 -> NONTERM_atomType 
    | 889 -> NONTERM_atomType 
    | 890 -> NONTERM_atomType 
    | 891 -> NONTERM_atomType 
    | 892 -> NONTERM_atomType 
    | 893 -> NONTERM_atomType 
    | 894 -> NONTERM_atomType 
    | 895 -> NONTERM_atomType 
    | 896 -> NONTERM_atomType 
    | 897 -> NONTERM_atomType 
    | 898 -> NONTERM_atomType 
    | 899 -> NONTERM_typeArgsNoHpaDeprecated 
    | 900 -> NONTERM_typeArgsNoHpaDeprecated 
    | 901 -> NONTERM_typeArgsActual 
    | 902 -> NONTERM_typeArgsActual 
    | 903 -> NONTERM_typeArgsActual 
    | 904 -> NONTERM_typeArgsActual 
    | 905 -> NONTERM_typeArgsActual 
    | 906 -> NONTERM_typeArgsActual 
    | 907 -> NONTERM_typeArgsActual 
    | 908 -> NONTERM_typeArgActual 
    | 909 -> NONTERM_typeArgActual 
    | 910 -> NONTERM_typeArgActual 
    | 911 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 912 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 913 -> NONTERM_dummyTypeArg 
    | 914 -> NONTERM_measureTypeArg 
    | 915 -> NONTERM_measureTypeArg 
    | 916 -> NONTERM_measureTypeAtom 
    | 917 -> NONTERM_measureTypeAtom 
    | 918 -> NONTERM_measureTypeAtom 
    | 919 -> NONTERM_measureTypePower 
    | 920 -> NONTERM_measureTypePower 
    | 921 -> NONTERM_measureTypePower 
    | 922 -> NONTERM_measureTypeSeq 
    | 923 -> NONTERM_measureTypeSeq 
    | 924 -> NONTERM_measureTypeExpr 
    | 925 -> NONTERM_measureTypeExpr 
    | 926 -> NONTERM_measureTypeExpr 
    | 927 -> NONTERM_measureTypeExpr 
    | 928 -> NONTERM_typar 
    | 929 -> NONTERM_typar 
    | 930 -> NONTERM_staticallyKnownHeadTypar 
    | 931 -> NONTERM_ident 
    | 932 -> NONTERM_path 
    | 933 -> NONTERM_path 
    | 934 -> NONTERM_path 
    | 935 -> NONTERM_path 
    | 936 -> NONTERM_opName 
    | 937 -> NONTERM_opName 
    | 938 -> NONTERM_opName 
    | 939 -> NONTERM_opName 
    | 940 -> NONTERM_opName 
    | 941 -> NONTERM_operatorName 
    | 942 -> NONTERM_operatorName 
    | 943 -> NONTERM_operatorName 
    | 944 -> NONTERM_operatorName 
    | 945 -> NONTERM_operatorName 
    | 946 -> NONTERM_operatorName 
    | 947 -> NONTERM_operatorName 
    | 948 -> NONTERM_operatorName 
    | 949 -> NONTERM_operatorName 
    | 950 -> NONTERM_operatorName 
    | 951 -> NONTERM_operatorName 
    | 952 -> NONTERM_operatorName 
    | 953 -> NONTERM_operatorName 
    | 954 -> NONTERM_operatorName 
    | 955 -> NONTERM_operatorName 
    | 956 -> NONTERM_operatorName 
    | 957 -> NONTERM_operatorName 
    | 958 -> NONTERM_operatorName 
    | 959 -> NONTERM_operatorName 
    | 960 -> NONTERM_operatorName 
    | 961 -> NONTERM_operatorName 
    | 962 -> NONTERM_operatorName 
    | 963 -> NONTERM_operatorName 
    | 964 -> NONTERM_operatorName 
    | 965 -> NONTERM_operatorName 
    | 966 -> NONTERM_operatorName 
    | 967 -> NONTERM_activePatternCaseName 
    | 968 -> NONTERM_activePatternCaseNames 
    | 969 -> NONTERM_activePatternCaseNames 
    | 970 -> NONTERM_identOrOp 
    | 971 -> NONTERM_identOrOp 
    | 972 -> NONTERM_pathOp 
    | 973 -> NONTERM_pathOp 
    | 974 -> NONTERM_pathOp 
    | 975 -> NONTERM_pathOp 
    | 976 -> NONTERM_nameop 
    | 977 -> NONTERM_topSeparator 
    | 978 -> NONTERM_topSeparator 
    | 979 -> NONTERM_topSeparator 
    | 980 -> NONTERM_topSeparators 
    | 981 -> NONTERM_topSeparators 
    | 982 -> NONTERM_opt_topSeparators 
    | 983 -> NONTERM_opt_topSeparators 
    | 984 -> NONTERM_seps 
    | 985 -> NONTERM_seps 
    | 986 -> NONTERM_seps 
    | 987 -> NONTERM_seps 
    | 988 -> NONTERM_declEnd 
    | 989 -> NONTERM_declEnd 
    | 990 -> NONTERM_declEnd 
    | 991 -> NONTERM_opt_declEnd 
    | 992 -> NONTERM_opt_declEnd 
    | 993 -> NONTERM_opt_declEnd 
    | 994 -> NONTERM_opt_declEnd 
    | 995 -> NONTERM_opt_ODECLEND 
    | 996 -> NONTERM_opt_ODECLEND 
    | 997 -> NONTERM_deprecated_opt_equals 
    | 998 -> NONTERM_deprecated_opt_equals 
    | 999 -> NONTERM_opt_OBLOCKSEP 
    | 1000 -> NONTERM_opt_OBLOCKSEP 
    | 1001 -> NONTERM_opt_seps 
    | 1002 -> NONTERM_opt_seps 
    | 1003 -> NONTERM_opt_rec 
    | 1004 -> NONTERM_opt_rec 
    | 1005 -> NONTERM_opt_bar 
    | 1006 -> NONTERM_opt_bar 
    | 1007 -> NONTERM_opt_inline 
    | 1008 -> NONTERM_opt_inline 
    | 1009 -> NONTERM_opt_mutable 
    | 1010 -> NONTERM_opt_mutable 
    | 1011 -> NONTERM_doToken 
    | 1012 -> NONTERM_doToken 
    | 1013 -> NONTERM_doneDeclEnd 
    | 1014 -> NONTERM_doneDeclEnd 
    | 1015 -> NONTERM_structOrBegin 
    | 1016 -> NONTERM_structOrBegin 
    | 1017 -> NONTERM_sigOrBegin 
    | 1018 -> NONTERM_sigOrBegin 
    | 1019 -> NONTERM_colonOrEquals 
    | 1020 -> NONTERM_colonOrEquals 
    | 1021 -> NONTERM_stringOrKeywordString 
    | 1022 -> NONTERM_stringOrKeywordString 
    | 1023 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1024 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1025 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1026 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1027 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1028 -> NONTERM_typeKeyword 
    | 1029 -> NONTERM_typeKeyword 
    | 1030 -> NONTERM_typeKeyword 
    | 1031 -> NONTERM_moduleKeyword 
    | 1032 -> NONTERM_moduleKeyword 
    | 1033 -> NONTERM_moduleKeyword 
    | 1034 -> NONTERM_rbrace 
    | 1035 -> NONTERM_rbrace 
    | 1036 -> NONTERM_rbrace 
    | 1037 -> NONTERM_rparen 
    | 1038 -> NONTERM_rparen 
    | 1039 -> NONTERM_rparen 
    | 1040 -> NONTERM_oblockend 
    | 1041 -> NONTERM_oblockend 
    | 1042 -> NONTERM_oblockend 
    | 1043 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1044 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1045 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1046 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1047 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1048 -> NONTERM_ends_coming_soon_or_recover 
    | 1049 -> NONTERM_ends_coming_soon_or_recover 
    | 1050 -> NONTERM_ends_coming_soon_or_recover 
    | 1051 -> NONTERM_ends_coming_soon_or_recover 
    | 1052 -> NONTERM_ends_coming_soon_or_recover 
    | 1053 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 195 
let _fsyacc_tagOfErrorTerminal = 193

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | FIXED  -> "FIXED" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | LBRACE_LESS  -> "LBRACE_LESS" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | GREATER_RBRACE  -> "GREATER_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FIXED  -> (null : System.Object) 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | LBRACE_LESS  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | GREATER_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 84us; 2us; 256us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 61us; 84us; 65us; 84us; 69us; 84us; 79us; 84us; 82us; 84us; 111us; 84us; 114us; 84us; 118us; 84us; 223us; 256us; 227us; 256us; 230us; 256us; 242us; 256us; 246us; 256us; 248us; 256us; 253us; 256us; 277us; 256us; 287us; 256us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 268us; 64us; 65us; 87us; 88us; 226us; 227us; 240us; 268us; 258us; 268us; 4us; 65535us; 56us; 60us; 58us; 60us; 218us; 222us; 220us; 222us; 1us; 65535us; 0us; 43us; 2us; 65535us; 56us; 57us; 58us; 59us; 2us; 65535us; 56us; 58us; 58us; 58us; 2us; 65535us; 0us; 56us; 61us; 62us; 3us; 65535us; 0us; 67us; 61us; 67us; 65us; 66us; 6us; 65535us; 0us; 68us; 61us; 68us; 65us; 68us; 69us; 70us; 114us; 115us; 118us; 119us; 9us; 65535us; 0us; 76us; 61us; 76us; 65us; 76us; 69us; 76us; 79us; 80us; 82us; 83us; 111us; 112us; 114us; 76us; 118us; 76us; 9us; 65535us; 0us; 78us; 61us; 78us; 65us; 78us; 69us; 78us; 79us; 78us; 82us; 78us; 111us; 78us; 114us; 78us; 118us; 78us; 9us; 65535us; 0us; 85us; 61us; 85us; 65us; 85us; 69us; 85us; 79us; 85us; 82us; 85us; 111us; 85us; 114us; 85us; 118us; 85us; 2us; 65535us; 104us; 105us; 179us; 180us; 1us; 65535us; 89us; 91us; 2us; 65535us; 64us; 92us; 87us; 92us; 2us; 65535us; 121us; 122us; 124us; 125us; 3us; 65535us; 121us; 123us; 124us; 123us; 190us; 191us; 1us; 65535us; 127us; 128us; 2us; 65535us; 127us; 137us; 130us; 131us; 2us; 65535us; 127us; 140us; 130us; 140us; 2us; 65535us; 127us; 144us; 130us; 144us; 3us; 65535us; 145us; 146us; 155us; 156us; 209us; 210us; 8us; 65535us; 130us; 152us; 132us; 133us; 145us; 163us; 151us; 152us; 155us; 163us; 159us; 160us; 166us; 167us; 209us; 163us; 8us; 65535us; 130us; 164us; 132us; 164us; 145us; 164us; 151us; 164us; 155us; 164us; 159us; 164us; 166us; 164us; 209us; 164us; 11us; 65535us; 130us; 165us; 132us; 165us; 145us; 165us; 151us; 165us; 155us; 165us; 159us; 165us; 166us; 165us; 209us; 165us; 590us; 591us; 597us; 598us; 1355us; 1356us; 3us; 65535us; 178us; 179us; 430us; 431us; 460us; 461us; 2us; 65535us; 195us; 196us; 197us; 198us; 2us; 65535us; 170us; 172us; 171us; 172us; 2us; 65535us; 64us; 93us; 87us; 93us; 5us; 65535us; 126us; 129us; 133us; 134us; 135us; 136us; 137us; 138us; 207us; 208us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 212us; 2us; 65535us; 218us; 219us; 220us; 221us; 2us; 65535us; 218us; 220us; 220us; 220us; 2us; 65535us; 2us; 218us; 223us; 224us; 3us; 65535us; 2us; 229us; 223us; 229us; 227us; 228us; 5us; 65535us; 2us; 237us; 223us; 237us; 227us; 237us; 230us; 231us; 287us; 288us; 9us; 65535us; 2us; 238us; 223us; 238us; 227us; 238us; 230us; 238us; 242us; 243us; 248us; 249us; 253us; 254us; 277us; 281us; 287us; 238us; 10us; 65535us; 2us; 244us; 223us; 244us; 227us; 244us; 230us; 244us; 242us; 244us; 246us; 247us; 248us; 244us; 253us; 244us; 277us; 244us; 287us; 244us; 10us; 65535us; 2us; 246us; 223us; 246us; 227us; 246us; 230us; 246us; 242us; 246us; 246us; 246us; 248us; 246us; 253us; 246us; 277us; 246us; 287us; 246us; 15us; 65535us; 2us; 255us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 223us; 255us; 227us; 255us; 230us; 255us; 242us; 255us; 246us; 255us; 248us; 255us; 253us; 255us; 277us; 255us; 287us; 255us; 1us; 65535us; 89us; 90us; 1us; 65535us; 269us; 270us; 2us; 65535us; 269us; 285us; 277us; 278us; 1us; 65535us; 342us; 345us; 80us; 65535us; 0us; 63us; 2us; 225us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 257us; 61us; 63us; 65us; 86us; 69us; 86us; 79us; 86us; 82us; 86us; 96us; 97us; 111us; 86us; 114us; 86us; 118us; 86us; 121us; 336us; 124us; 336us; 127us; 516us; 130us; 169us; 132us; 168us; 145us; 168us; 151us; 168us; 155us; 168us; 159us; 168us; 166us; 168us; 190us; 336us; 209us; 168us; 223us; 225us; 227us; 239us; 230us; 239us; 242us; 239us; 246us; 257us; 248us; 239us; 253us; 239us; 264us; 336us; 277us; 239us; 287us; 239us; 292us; 413us; 339us; 336us; 342us; 346us; 343us; 516us; 351us; 516us; 353us; 414us; 355us; 413us; 369us; 413us; 373us; 413us; 375us; 413us; 379us; 413us; 385us; 413us; 388us; 413us; 399us; 400us; 446us; 336us; 475us; 503us; 478us; 413us; 495us; 503us; 501us; 503us; 528us; 657us; 548us; 557us; 553us; 557us; 554us; 557us; 560us; 557us; 565us; 557us; 590us; 168us; 597us; 168us; 606us; 616us; 609us; 616us; 614us; 616us; 654us; 657us; 667us; 668us; 680us; 731us; 686us; 731us; 698us; 725us; 703us; 712us; 708us; 712us; 710us; 712us; 728us; 731us; 1355us; 168us; 1456us; 504us; 1458us; 731us; 117us; 65535us; 0us; 295us; 2us; 271us; 4us; 271us; 22us; 271us; 24us; 271us; 26us; 271us; 28us; 271us; 61us; 295us; 65us; 295us; 69us; 295us; 79us; 295us; 82us; 295us; 96us; 295us; 103us; 1514us; 111us; 295us; 114us; 295us; 118us; 295us; 121us; 295us; 124us; 295us; 127us; 295us; 130us; 295us; 132us; 295us; 142us; 1514us; 145us; 295us; 151us; 295us; 155us; 295us; 159us; 295us; 166us; 295us; 177us; 1514us; 190us; 295us; 193us; 1514us; 209us; 295us; 223us; 271us; 227us; 271us; 230us; 271us; 242us; 271us; 246us; 271us; 248us; 271us; 253us; 271us; 264us; 295us; 277us; 271us; 287us; 271us; 292us; 295us; 296us; 297us; 339us; 295us; 342us; 295us; 343us; 295us; 351us; 295us; 353us; 295us; 355us; 295us; 366us; 1514us; 369us; 295us; 373us; 295us; 375us; 295us; 379us; 295us; 385us; 295us; 388us; 295us; 399us; 295us; 429us; 1514us; 446us; 295us; 475us; 295us; 478us; 295us; 495us; 295us; 501us; 295us; 528us; 295us; 548us; 295us; 553us; 295us; 554us; 295us; 560us; 295us; 565us; 295us; 590us; 295us; 597us; 295us; 606us; 295us; 609us; 295us; 614us; 295us; 623us; 1514us; 654us; 295us; 667us; 295us; 680us; 295us; 686us; 295us; 698us; 295us; 703us; 295us; 708us; 295us; 710us; 295us; 728us; 295us; 804us; 804us; 805us; 804us; 807us; 804us; 840us; 918us; 852us; 918us; 868us; 918us; 871us; 918us; 883us; 918us; 891us; 918us; 913us; 918us; 918us; 918us; 919us; 918us; 921us; 918us; 922us; 918us; 923us; 918us; 924us; 918us; 931us; 918us; 933us; 918us; 1024us; 918us; 1171us; 918us; 1173us; 918us; 1178us; 918us; 1185us; 918us; 1355us; 295us; 1456us; 295us; 1458us; 295us; 1494us; 918us; 1496us; 918us; 1503us; 1514us; 1506us; 1514us; 1509us; 1514us; 1512us; 1514us; 117us; 65535us; 0us; 296us; 2us; 296us; 4us; 296us; 22us; 296us; 24us; 296us; 26us; 296us; 28us; 296us; 61us; 296us; 65us; 296us; 69us; 296us; 79us; 296us; 82us; 296us; 96us; 296us; 103us; 296us; 111us; 296us; 114us; 296us; 118us; 296us; 121us; 296us; 124us; 296us; 127us; 296us; 130us; 296us; 132us; 296us; 142us; 296us; 145us; 296us; 151us; 296us; 155us; 296us; 159us; 296us; 166us; 296us; 177us; 296us; 190us; 296us; 193us; 296us; 209us; 296us; 223us; 296us; 227us; 296us; 230us; 296us; 242us; 296us; 246us; 296us; 248us; 296us; 253us; 296us; 264us; 296us; 277us; 296us; 287us; 296us; 292us; 296us; 296us; 296us; 339us; 296us; 342us; 296us; 343us; 296us; 351us; 296us; 353us; 296us; 355us; 296us; 366us; 296us; 369us; 296us; 373us; 296us; 375us; 296us; 379us; 296us; 385us; 296us; 388us; 296us; 399us; 296us; 429us; 296us; 446us; 296us; 475us; 296us; 478us; 296us; 495us; 296us; 501us; 296us; 528us; 296us; 548us; 296us; 553us; 296us; 554us; 296us; 560us; 296us; 565us; 296us; 590us; 296us; 597us; 296us; 606us; 296us; 609us; 296us; 614us; 296us; 623us; 296us; 654us; 296us; 667us; 296us; 680us; 296us; 686us; 296us; 698us; 296us; 703us; 296us; 708us; 296us; 710us; 296us; 728us; 296us; 804us; 296us; 805us; 296us; 807us; 296us; 840us; 296us; 852us; 296us; 868us; 296us; 871us; 296us; 883us; 296us; 891us; 296us; 913us; 296us; 918us; 296us; 919us; 296us; 921us; 296us; 922us; 296us; 923us; 296us; 924us; 296us; 931us; 296us; 933us; 296us; 1024us; 296us; 1171us; 296us; 1173us; 296us; 1178us; 296us; 1185us; 296us; 1355us; 296us; 1456us; 296us; 1458us; 296us; 1494us; 296us; 1496us; 296us; 1503us; 296us; 1506us; 296us; 1509us; 296us; 1512us; 296us; 1us; 65535us; 298us; 299us; 2us; 65535us; 298us; 308us; 309us; 310us; 2us; 65535us; 298us; 314us; 309us; 314us; 4us; 65535us; 170us; 204us; 171us; 204us; 415us; 419us; 416us; 419us; 6us; 65535us; 121us; 126us; 124us; 126us; 190us; 126us; 264us; 342us; 339us; 342us; 446us; 342us; 2us; 65535us; 265us; 266us; 340us; 341us; 3us; 65535us; 264us; 265us; 339us; 340us; 446us; 447us; 2us; 65535us; 343us; 344us; 351us; 352us; 3us; 65535us; 343us; 361us; 351us; 361us; 353us; 354us; 3us; 65535us; 343us; 364us; 351us; 364us; 353us; 364us; 3us; 65535us; 343us; 368us; 351us; 368us; 353us; 368us; 3us; 65535us; 292us; 293us; 369us; 370us; 478us; 479us; 10us; 65535us; 292us; 383us; 353us; 376us; 355us; 356us; 369us; 383us; 373us; 386us; 375us; 376us; 379us; 380us; 385us; 386us; 388us; 389us; 478us; 383us; 10us; 65535us; 292us; 384us; 353us; 384us; 355us; 384us; 369us; 384us; 373us; 384us; 375us; 384us; 379us; 384us; 385us; 384us; 388us; 384us; 478us; 384us; 1us; 65535us; 407us; 410us; 2us; 65535us; 390us; 391us; 392us; 393us; 3us; 65535us; 390us; 396us; 392us; 396us; 397us; 398us; 3us; 65535us; 419us; 420us; 505us; 506us; 511us; 512us; 2us; 65535us; 415us; 425us; 416us; 425us; 10us; 65535us; 292us; 387us; 353us; 387us; 355us; 387us; 369us; 387us; 373us; 387us; 375us; 387us; 379us; 387us; 385us; 387us; 388us; 387us; 478us; 387us; 3us; 65535us; 331us; 436us; 415us; 434us; 416us; 434us; 2us; 65535us; 419us; 438us; 505us; 508us; 1us; 65535us; 457us; 458us; 42us; 65535us; 400us; 842us; 405us; 842us; 440us; 878us; 735us; 842us; 825us; 842us; 826us; 842us; 830us; 842us; 831us; 842us; 832us; 842us; 833us; 842us; 840us; 842us; 843us; 878us; 845us; 878us; 847us; 878us; 852us; 842us; 856us; 878us; 858us; 878us; 860us; 878us; 868us; 842us; 871us; 842us; 883us; 842us; 891us; 842us; 913us; 842us; 918us; 842us; 919us; 842us; 921us; 842us; 922us; 842us; 923us; 842us; 924us; 842us; 931us; 842us; 933us; 842us; 1024us; 842us; 1051us; 842us; 1057us; 842us; 1171us; 842us; 1173us; 842us; 1178us; 842us; 1185us; 842us; 1476us; 878us; 1481us; 878us; 1494us; 842us; 1496us; 842us; 10us; 65535us; 49us; 50us; 99us; 100us; 173us; 174us; 336us; 542us; 449us; 450us; 455us; 456us; 616us; 617us; 659us; 660us; 668us; 669us; 699us; 700us; 64us; 65535us; 30us; 474us; 49us; 470us; 63us; 474us; 86us; 474us; 99us; 470us; 168us; 474us; 169us; 474us; 173us; 470us; 225us; 474us; 239us; 474us; 257us; 474us; 336us; 470us; 346us; 474us; 400us; 468us; 405us; 468us; 413us; 474us; 414us; 474us; 440us; 468us; 449us; 470us; 455us; 470us; 516us; 474us; 616us; 470us; 659us; 470us; 668us; 470us; 699us; 470us; 735us; 468us; 825us; 468us; 826us; 468us; 830us; 468us; 831us; 468us; 832us; 468us; 833us; 468us; 840us; 468us; 843us; 468us; 845us; 468us; 847us; 468us; 852us; 468us; 856us; 468us; 858us; 468us; 860us; 468us; 868us; 468us; 871us; 468us; 883us; 468us; 891us; 468us; 913us; 468us; 918us; 468us; 919us; 468us; 921us; 468us; 922us; 468us; 923us; 468us; 924us; 468us; 931us; 468us; 933us; 468us; 1024us; 468us; 1051us; 468us; 1057us; 468us; 1171us; 468us; 1173us; 468us; 1178us; 468us; 1185us; 468us; 1476us; 468us; 1481us; 468us; 1494us; 468us; 1496us; 468us; 12us; 65535us; 30us; 31us; 63us; 64us; 86us; 87us; 168us; 170us; 169us; 171us; 225us; 226us; 239us; 240us; 257us; 258us; 346us; 347us; 413us; 415us; 414us; 416us; 516us; 517us; 1us; 65535us; 423us; 424us; 4us; 65535us; 356us; 357us; 358us; 359us; 361us; 362us; 664us; 665us; 2us; 65535us; 415us; 433us; 416us; 433us; 2us; 65535us; 349us; 350us; 441us; 442us; 2us; 65535us; 349us; 488us; 441us; 488us; 2us; 65535us; 482us; 483us; 485us; 486us; 3us; 65535us; 482us; 491us; 485us; 491us; 1239us; 1454us; 2us; 65535us; 475us; 476us; 1456us; 1461us; 4us; 65535us; 475us; 499us; 495us; 496us; 501us; 502us; 1456us; 499us; 4us; 65535us; 475us; 500us; 495us; 500us; 501us; 500us; 1456us; 500us; 2us; 65535us; 503us; 505us; 504us; 505us; 5us; 65535us; 127us; 139us; 130us; 139us; 343us; 363us; 351us; 363us; 353us; 363us; 6us; 65535us; 171us; 524us; 416us; 524us; 517us; 524us; 620us; 651us; 642us; 651us; 673us; 651us; 1us; 65535us; 525us; 526us; 5us; 65535us; 127us; 145us; 130us; 145us; 343us; 369us; 351us; 369us; 353us; 369us; 9us; 65535us; 170us; 181us; 171us; 181us; 415us; 422us; 416us; 422us; 1450us; 1469us; 1452us; 1469us; 1463us; 1469us; 1465us; 1469us; 1467us; 1469us; 1us; 65535us; 336us; 337us; 1us; 65535us; 542us; 544us; 3us; 65535us; 548us; 549us; 560us; 551us; 565us; 552us; 5us; 65535us; 548us; 556us; 553us; 555us; 554us; 555us; 560us; 556us; 565us; 556us; 1us; 65535us; 543us; 546us; 1us; 65535us; 565us; 566us; 4us; 65535us; 101us; 569us; 175us; 569us; 427us; 569us; 842us; 570us; 3us; 65535us; 101us; 102us; 175us; 176us; 427us; 428us; 1us; 65535us; 842us; 843us; 3us; 65535us; 337us; 338us; 551us; 561us; 566us; 567us; 3us; 65535us; 571us; 572us; 1500us; 573us; 1502us; 574us; 4us; 65535us; 571us; 577us; 575us; 576us; 1500us; 577us; 1502us; 577us; 1us; 65535us; 593us; 594us; 3us; 65535us; 171us; 523us; 416us; 523us; 517us; 523us; 5us; 65535us; 171us; 606us; 416us; 606us; 517us; 606us; 608us; 609us; 613us; 614us; 3us; 65535us; 606us; 607us; 609us; 610us; 614us; 615us; 3us; 65535us; 606us; 613us; 609us; 613us; 614us; 613us; 1us; 65535us; 617us; 618us; 3us; 65535us; 171us; 608us; 416us; 608us; 517us; 608us; 3us; 65535us; 171us; 611us; 416us; 611us; 517us; 611us; 4us; 65535us; 620us; 652us; 642us; 652us; 645us; 646us; 673us; 652us; 4us; 65535us; 620us; 644us; 642us; 644us; 645us; 644us; 673us; 644us; 3us; 65535us; 620us; 621us; 642us; 643us; 673us; 674us; 2us; 65535us; 528us; 529us; 654us; 655us; 2us; 65535us; 528us; 653us; 654us; 653us; 3us; 65535us; 185us; 186us; 188us; 189us; 657us; 658us; 4us; 65535us; 31us; 267us; 226us; 267us; 240us; 267us; 258us; 267us; 6us; 65535us; 31us; 667us; 64us; 667us; 87us; 667us; 226us; 667us; 240us; 667us; 258us; 667us; 6us; 65535us; 31us; 664us; 64us; 207us; 87us; 207us; 226us; 664us; 240us; 664us; 258us; 664us; 1us; 65535us; 669us; 670us; 1us; 65535us; 670us; 671us; 15us; 65535us; 2us; 273us; 4us; 273us; 22us; 273us; 24us; 273us; 26us; 273us; 28us; 273us; 223us; 273us; 227us; 273us; 230us; 273us; 242us; 273us; 246us; 273us; 248us; 273us; 253us; 273us; 277us; 273us; 287us; 273us; 112us; 65535us; 6us; 977us; 31us; 260us; 106us; 977us; 108us; 977us; 226us; 260us; 240us; 260us; 258us; 259us; 262us; 977us; 331us; 692us; 403us; 977us; 408us; 977us; 415us; 692us; 416us; 692us; 443us; 977us; 459us; 977us; 683us; 977us; 689us; 977us; 738us; 977us; 742us; 977us; 752us; 977us; 935us; 977us; 940us; 977us; 954us; 977us; 956us; 977us; 959us; 977us; 962us; 977us; 978us; 977us; 981us; 977us; 984us; 977us; 990us; 977us; 994us; 977us; 998us; 977us; 1000us; 977us; 1005us; 977us; 1007us; 977us; 1009us; 977us; 1011us; 977us; 1013us; 977us; 1015us; 977us; 1026us; 977us; 1034us; 977us; 1041us; 977us; 1047us; 977us; 1049us; 977us; 1052us; 977us; 1055us; 977us; 1058us; 977us; 1061us; 977us; 1064us; 977us; 1067us; 977us; 1069us; 977us; 1074us; 977us; 1076us; 977us; 1120us; 977us; 1122us; 977us; 1126us; 977us; 1127us; 977us; 1128us; 977us; 1129us; 977us; 1130us; 977us; 1131us; 977us; 1132us; 977us; 1133us; 977us; 1134us; 977us; 1135us; 977us; 1136us; 977us; 1138us; 977us; 1139us; 977us; 1140us; 977us; 1141us; 977us; 1142us; 977us; 1143us; 977us; 1144us; 977us; 1145us; 977us; 1146us; 977us; 1168us; 977us; 1190us; 977us; 1191us; 977us; 1195us; 977us; 1197us; 977us; 1201us; 977us; 1203us; 977us; 1207us; 977us; 1210us; 977us; 1212us; 977us; 1275us; 977us; 1282us; 977us; 1288us; 977us; 1295us; 977us; 1305us; 977us; 1307us; 977us; 1308us; 977us; 1319us; 977us; 1326us; 977us; 1327us; 977us; 1333us; 977us; 1339us; 977us; 1340us; 977us; 1341us; 977us; 1357us; 977us; 1367us; 977us; 1380us; 977us; 1381us; 977us; 1383us; 977us; 1385us; 977us; 1389us; 977us; 1390us; 977us; 1414us; 977us; 1419us; 977us; 1444us; 977us; 1478us; 977us; 1483us; 977us; 7us; 65535us; 31us; 263us; 226us; 263us; 240us; 263us; 258us; 263us; 331us; 693us; 415us; 693us; 416us; 693us; 112us; 65535us; 6us; 962us; 31us; 262us; 106us; 981us; 108us; 981us; 226us; 262us; 240us; 262us; 258us; 261us; 262us; 962us; 331us; 694us; 403us; 962us; 408us; 962us; 415us; 694us; 416us; 694us; 443us; 962us; 459us; 962us; 683us; 962us; 689us; 962us; 738us; 962us; 742us; 962us; 752us; 962us; 935us; 962us; 940us; 962us; 954us; 962us; 956us; 962us; 959us; 962us; 962us; 962us; 978us; 962us; 981us; 962us; 984us; 962us; 990us; 962us; 994us; 962us; 998us; 962us; 1000us; 981us; 1005us; 981us; 1007us; 981us; 1009us; 981us; 1011us; 981us; 1013us; 981us; 1015us; 962us; 1026us; 962us; 1034us; 962us; 1041us; 962us; 1047us; 981us; 1049us; 981us; 1052us; 962us; 1055us; 962us; 1058us; 962us; 1061us; 962us; 1064us; 962us; 1067us; 962us; 1069us; 962us; 1074us; 981us; 1076us; 962us; 1120us; 981us; 1122us; 981us; 1126us; 981us; 1127us; 981us; 1128us; 981us; 1129us; 981us; 1130us; 981us; 1131us; 981us; 1132us; 981us; 1133us; 981us; 1134us; 981us; 1135us; 981us; 1136us; 981us; 1138us; 981us; 1139us; 981us; 1140us; 981us; 1141us; 981us; 1142us; 981us; 1143us; 981us; 1144us; 981us; 1145us; 981us; 1146us; 981us; 1168us; 962us; 1190us; 981us; 1191us; 962us; 1195us; 981us; 1197us; 962us; 1201us; 981us; 1203us; 962us; 1207us; 981us; 1210us; 981us; 1212us; 981us; 1275us; 962us; 1282us; 981us; 1288us; 962us; 1295us; 962us; 1305us; 981us; 1307us; 981us; 1308us; 981us; 1319us; 962us; 1326us; 962us; 1327us; 962us; 1333us; 962us; 1339us; 962us; 1340us; 962us; 1341us; 962us; 1357us; 962us; 1367us; 962us; 1380us; 981us; 1381us; 981us; 1383us; 962us; 1385us; 981us; 1389us; 981us; 1390us; 981us; 1414us; 981us; 1419us; 981us; 1444us; 981us; 1478us; 962us; 1483us; 962us; 111us; 65535us; 6us; 987us; 31us; 987us; 106us; 987us; 108us; 987us; 226us; 987us; 240us; 987us; 262us; 987us; 331us; 695us; 403us; 987us; 408us; 987us; 415us; 695us; 416us; 695us; 443us; 987us; 459us; 987us; 683us; 987us; 689us; 987us; 738us; 987us; 742us; 987us; 752us; 987us; 935us; 987us; 940us; 987us; 954us; 987us; 956us; 987us; 959us; 987us; 962us; 987us; 978us; 987us; 981us; 987us; 984us; 987us; 990us; 987us; 994us; 987us; 998us; 987us; 1000us; 987us; 1005us; 987us; 1007us; 987us; 1009us; 987us; 1011us; 987us; 1013us; 987us; 1015us; 987us; 1026us; 987us; 1034us; 987us; 1041us; 987us; 1047us; 987us; 1049us; 987us; 1052us; 987us; 1055us; 987us; 1058us; 987us; 1061us; 987us; 1064us; 987us; 1067us; 987us; 1069us; 987us; 1074us; 987us; 1076us; 987us; 1120us; 987us; 1122us; 987us; 1126us; 987us; 1127us; 987us; 1128us; 987us; 1129us; 987us; 1130us; 987us; 1131us; 987us; 1132us; 987us; 1133us; 987us; 1134us; 987us; 1135us; 987us; 1136us; 987us; 1138us; 987us; 1139us; 987us; 1140us; 987us; 1141us; 987us; 1142us; 987us; 1143us; 987us; 1144us; 987us; 1145us; 987us; 1146us; 987us; 1168us; 987us; 1190us; 987us; 1191us; 987us; 1195us; 987us; 1197us; 987us; 1201us; 987us; 1203us; 987us; 1207us; 987us; 1210us; 987us; 1212us; 987us; 1275us; 987us; 1282us; 987us; 1288us; 987us; 1295us; 987us; 1305us; 987us; 1307us; 987us; 1308us; 987us; 1319us; 987us; 1326us; 987us; 1327us; 987us; 1333us; 987us; 1339us; 987us; 1340us; 987us; 1341us; 987us; 1357us; 987us; 1367us; 987us; 1380us; 987us; 1381us; 987us; 1383us; 987us; 1385us; 987us; 1389us; 987us; 1390us; 987us; 1414us; 987us; 1419us; 987us; 1444us; 987us; 1478us; 987us; 1483us; 987us; 3us; 65535us; 331us; 418us; 415us; 417us; 416us; 417us; 4us; 65535us; 687us; 688us; 690us; 691us; 1059us; 1060us; 1070us; 1071us; 112us; 65535us; 6us; 682us; 31us; 682us; 106us; 682us; 108us; 682us; 226us; 682us; 240us; 682us; 258us; 682us; 262us; 682us; 331us; 682us; 403us; 682us; 408us; 682us; 415us; 682us; 416us; 682us; 443us; 682us; 459us; 682us; 683us; 682us; 689us; 682us; 738us; 682us; 742us; 682us; 752us; 682us; 935us; 682us; 940us; 682us; 954us; 682us; 956us; 682us; 959us; 682us; 962us; 682us; 978us; 682us; 981us; 682us; 984us; 682us; 990us; 682us; 994us; 682us; 998us; 682us; 1000us; 682us; 1005us; 682us; 1007us; 682us; 1009us; 682us; 1011us; 682us; 1013us; 682us; 1015us; 682us; 1026us; 682us; 1034us; 682us; 1041us; 682us; 1047us; 682us; 1049us; 682us; 1052us; 682us; 1055us; 682us; 1058us; 682us; 1061us; 682us; 1064us; 682us; 1067us; 682us; 1069us; 682us; 1074us; 682us; 1076us; 682us; 1120us; 682us; 1122us; 682us; 1126us; 682us; 1127us; 682us; 1128us; 682us; 1129us; 682us; 1130us; 682us; 1131us; 682us; 1132us; 682us; 1133us; 682us; 1134us; 682us; 1135us; 682us; 1136us; 682us; 1138us; 682us; 1139us; 682us; 1140us; 682us; 1141us; 682us; 1142us; 682us; 1143us; 682us; 1144us; 682us; 1145us; 682us; 1146us; 682us; 1168us; 682us; 1190us; 682us; 1191us; 682us; 1195us; 682us; 1197us; 682us; 1201us; 682us; 1203us; 682us; 1207us; 682us; 1210us; 682us; 1212us; 682us; 1275us; 682us; 1282us; 682us; 1288us; 682us; 1295us; 682us; 1305us; 682us; 1307us; 682us; 1308us; 682us; 1319us; 682us; 1326us; 682us; 1327us; 682us; 1333us; 682us; 1339us; 682us; 1340us; 682us; 1341us; 682us; 1357us; 682us; 1367us; 682us; 1380us; 682us; 1381us; 682us; 1383us; 682us; 1385us; 682us; 1389us; 682us; 1390us; 682us; 1414us; 682us; 1419us; 682us; 1444us; 682us; 1478us; 682us; 1483us; 682us; 1us; 65535us; 703us; 704us; 1us; 65535us; 703us; 706us; 3us; 65535us; 703us; 707us; 708us; 709us; 710us; 711us; 2us; 65535us; 712us; 713us; 725us; 716us; 1us; 65535us; 698us; 699us; 4us; 65535us; 680us; 681us; 686us; 687us; 1456us; 1457us; 1458us; 1459us; 2us; 65535us; 726us; 727us; 729us; 730us; 5us; 65535us; 680us; 726us; 686us; 726us; 728us; 729us; 1456us; 726us; 1458us; 726us; 2us; 65535us; 504us; 732us; 731us; 732us; 1us; 65535us; 738us; 739us; 2us; 65535us; 738us; 746us; 742us; 743us; 1us; 65535us; 747us; 748us; 1us; 65535us; 748us; 749us; 1us; 65535us; 750us; 751us; 2us; 65535us; 750us; 756us; 754us; 755us; 256us; 65535us; 6us; 793us; 8us; 1624us; 31us; 793us; 103us; 1624us; 106us; 793us; 108us; 793us; 142us; 1624us; 171us; 1624us; 177us; 1624us; 181us; 1624us; 183us; 1624us; 193us; 1624us; 226us; 793us; 240us; 793us; 262us; 793us; 312us; 793us; 316us; 793us; 321us; 793us; 366us; 1624us; 400us; 793us; 403us; 793us; 405us; 793us; 408us; 793us; 416us; 1624us; 422us; 1624us; 429us; 1624us; 440us; 793us; 443us; 793us; 452us; 1624us; 459us; 793us; 462us; 1624us; 481us; 1624us; 484us; 793us; 517us; 1624us; 525us; 1624us; 534us; 1624us; 580us; 1624us; 583us; 1624us; 593us; 1624us; 603us; 1624us; 620us; 1624us; 623us; 1624us; 626us; 793us; 638us; 793us; 642us; 1624us; 645us; 1624us; 648us; 1624us; 662us; 1624us; 673us; 1624us; 683us; 793us; 689us; 793us; 735us; 793us; 738us; 793us; 742us; 793us; 752us; 793us; 758us; 1624us; 802us; 1624us; 825us; 793us; 826us; 793us; 830us; 793us; 831us; 793us; 832us; 793us; 833us; 793us; 840us; 793us; 843us; 793us; 845us; 793us; 847us; 793us; 849us; 1624us; 852us; 793us; 856us; 793us; 858us; 793us; 860us; 793us; 868us; 793us; 871us; 793us; 883us; 793us; 891us; 793us; 913us; 793us; 916us; 1624us; 918us; 793us; 919us; 793us; 921us; 793us; 922us; 793us; 923us; 793us; 924us; 793us; 931us; 793us; 933us; 793us; 935us; 793us; 940us; 793us; 947us; 1624us; 954us; 793us; 956us; 793us; 959us; 793us; 962us; 793us; 978us; 793us; 981us; 793us; 984us; 793us; 990us; 793us; 994us; 793us; 998us; 793us; 1000us; 793us; 1005us; 793us; 1007us; 793us; 1009us; 793us; 1011us; 793us; 1013us; 793us; 1015us; 793us; 1024us; 793us; 1026us; 793us; 1034us; 793us; 1041us; 793us; 1047us; 793us; 1049us; 793us; 1051us; 793us; 1052us; 793us; 1055us; 793us; 1057us; 793us; 1058us; 793us; 1061us; 793us; 1064us; 793us; 1067us; 793us; 1069us; 793us; 1074us; 793us; 1076us; 793us; 1114us; 1624us; 1116us; 1624us; 1118us; 1624us; 1120us; 793us; 1122us; 793us; 1126us; 793us; 1127us; 793us; 1128us; 793us; 1129us; 793us; 1130us; 793us; 1131us; 793us; 1132us; 793us; 1133us; 793us; 1134us; 793us; 1135us; 793us; 1136us; 793us; 1138us; 793us; 1139us; 793us; 1140us; 793us; 1141us; 793us; 1142us; 793us; 1143us; 793us; 1144us; 793us; 1145us; 793us; 1146us; 793us; 1168us; 793us; 1171us; 793us; 1173us; 793us; 1178us; 793us; 1185us; 793us; 1190us; 793us; 1191us; 793us; 1195us; 793us; 1197us; 793us; 1201us; 793us; 1203us; 793us; 1207us; 793us; 1210us; 793us; 1212us; 793us; 1214us; 793us; 1215us; 793us; 1217us; 793us; 1218us; 793us; 1220us; 793us; 1221us; 793us; 1223us; 793us; 1224us; 793us; 1226us; 793us; 1227us; 793us; 1229us; 793us; 1230us; 793us; 1232us; 1624us; 1233us; 1624us; 1236us; 793us; 1237us; 793us; 1242us; 793us; 1244us; 793us; 1246us; 793us; 1247us; 793us; 1250us; 793us; 1257us; 793us; 1258us; 793us; 1261us; 793us; 1262us; 793us; 1275us; 793us; 1282us; 793us; 1288us; 793us; 1295us; 793us; 1305us; 793us; 1307us; 793us; 1308us; 793us; 1319us; 793us; 1326us; 793us; 1327us; 793us; 1333us; 793us; 1339us; 793us; 1340us; 793us; 1341us; 793us; 1357us; 793us; 1367us; 793us; 1380us; 793us; 1381us; 793us; 1383us; 793us; 1385us; 793us; 1389us; 793us; 1390us; 793us; 1395us; 793us; 1401us; 1624us; 1404us; 1624us; 1406us; 1624us; 1408us; 1624us; 1410us; 793us; 1414us; 793us; 1419us; 793us; 1444us; 793us; 1469us; 1624us; 1476us; 793us; 1478us; 793us; 1481us; 793us; 1483us; 793us; 1494us; 793us; 1496us; 793us; 1503us; 1624us; 1506us; 1624us; 1509us; 1624us; 1512us; 1624us; 1514us; 1624us; 1516us; 1624us; 1520us; 1624us; 1523us; 1624us; 1527us; 1624us; 1530us; 1624us; 1535us; 1624us; 1537us; 1624us; 1539us; 1624us; 1542us; 1624us; 1544us; 1624us; 1564us; 1624us; 1565us; 1624us; 1573us; 1624us; 1574us; 1624us; 1579us; 1624us; 1580us; 1624us; 1592us; 1624us; 1596us; 1624us; 1606us; 1624us; 1610us; 1624us; 1616us; 1624us; 1617us; 1624us; 1626us; 793us; 1640us; 1624us; 1642us; 1624us; 1653us; 1624us; 1us; 65535us; 787us; 788us; 5us; 65535us; 791us; 792us; 1552us; 790us; 1601us; 790us; 1602us; 790us; 1668us; 790us; 4us; 65535us; 1552us; 1553us; 1601us; 1603us; 1602us; 1604us; 1668us; 1669us; 182us; 65535us; 6us; 1310us; 31us; 1310us; 106us; 1310us; 108us; 1310us; 226us; 1310us; 240us; 1310us; 262us; 1310us; 312us; 1310us; 316us; 1310us; 321us; 1310us; 400us; 879us; 403us; 1310us; 405us; 879us; 408us; 1310us; 440us; 879us; 443us; 1310us; 459us; 1310us; 484us; 1310us; 626us; 627us; 638us; 639us; 683us; 1310us; 689us; 1310us; 735us; 879us; 738us; 1310us; 742us; 1310us; 752us; 1310us; 825us; 879us; 826us; 879us; 830us; 879us; 831us; 879us; 832us; 879us; 833us; 879us; 840us; 879us; 843us; 879us; 845us; 879us; 847us; 879us; 852us; 879us; 856us; 879us; 858us; 879us; 860us; 879us; 868us; 879us; 871us; 879us; 883us; 879us; 891us; 879us; 913us; 879us; 918us; 879us; 919us; 879us; 921us; 879us; 922us; 879us; 923us; 879us; 924us; 879us; 931us; 879us; 933us; 879us; 935us; 1310us; 940us; 1310us; 954us; 1310us; 956us; 1310us; 959us; 1310us; 962us; 1310us; 978us; 1310us; 981us; 1310us; 984us; 1310us; 990us; 1310us; 994us; 1310us; 998us; 1310us; 1000us; 1310us; 1005us; 1310us; 1007us; 1310us; 1009us; 1310us; 1011us; 1310us; 1013us; 1310us; 1015us; 1310us; 1024us; 879us; 1026us; 1310us; 1034us; 1310us; 1041us; 1310us; 1047us; 1310us; 1049us; 1310us; 1051us; 879us; 1052us; 1310us; 1055us; 1310us; 1057us; 879us; 1058us; 1310us; 1061us; 1310us; 1064us; 1310us; 1067us; 1310us; 1069us; 1310us; 1074us; 1310us; 1076us; 1310us; 1120us; 1310us; 1122us; 1310us; 1126us; 1310us; 1127us; 1310us; 1128us; 1310us; 1129us; 1310us; 1130us; 1310us; 1131us; 1310us; 1132us; 1310us; 1133us; 1310us; 1134us; 1310us; 1135us; 1310us; 1136us; 1310us; 1138us; 1310us; 1139us; 1310us; 1140us; 1310us; 1141us; 1310us; 1142us; 1310us; 1143us; 1310us; 1144us; 1310us; 1145us; 1310us; 1146us; 1310us; 1168us; 1310us; 1171us; 879us; 1173us; 879us; 1178us; 879us; 1185us; 879us; 1190us; 1310us; 1191us; 1310us; 1195us; 1310us; 1197us; 1310us; 1201us; 1310us; 1203us; 1310us; 1207us; 1310us; 1210us; 1310us; 1212us; 1310us; 1214us; 1310us; 1215us; 1310us; 1217us; 1310us; 1218us; 1310us; 1220us; 1310us; 1221us; 1310us; 1223us; 1310us; 1224us; 1310us; 1226us; 1310us; 1227us; 1310us; 1229us; 1310us; 1230us; 1310us; 1236us; 1310us; 1237us; 1310us; 1242us; 1310us; 1244us; 1310us; 1246us; 1310us; 1247us; 1310us; 1250us; 1310us; 1257us; 1310us; 1258us; 1310us; 1261us; 1310us; 1262us; 1310us; 1275us; 1310us; 1282us; 1310us; 1288us; 1310us; 1295us; 1310us; 1305us; 1310us; 1307us; 1310us; 1308us; 1310us; 1319us; 1310us; 1326us; 1310us; 1327us; 1310us; 1333us; 1310us; 1339us; 1310us; 1340us; 1310us; 1341us; 1310us; 1357us; 1310us; 1367us; 1310us; 1380us; 1310us; 1381us; 1310us; 1383us; 1310us; 1385us; 1310us; 1389us; 1310us; 1390us; 1310us; 1395us; 1310us; 1410us; 1310us; 1414us; 1310us; 1419us; 1310us; 1444us; 1310us; 1476us; 879us; 1478us; 1310us; 1481us; 879us; 1483us; 1310us; 1494us; 879us; 1496us; 879us; 1626us; 1310us; 3us; 65535us; 400us; 401us; 405us; 406us; 735us; 736us; 3us; 65535us; 804us; 800us; 805us; 801us; 807us; 801us; 2us; 65535us; 805us; 806us; 807us; 808us; 1us; 65535us; 348us; 349us; 11us; 65535us; 400us; 796us; 405us; 796us; 735us; 796us; 825us; 815us; 826us; 816us; 830us; 817us; 831us; 818us; 832us; 819us; 833us; 820us; 1051us; 821us; 1057us; 822us; 11us; 65535us; 400us; 827us; 405us; 827us; 735us; 827us; 825us; 827us; 826us; 827us; 830us; 827us; 831us; 827us; 832us; 827us; 833us; 827us; 1051us; 827us; 1057us; 827us; 11us; 65535us; 400us; 828us; 405us; 828us; 735us; 828us; 825us; 828us; 826us; 828us; 830us; 828us; 831us; 828us; 832us; 828us; 833us; 828us; 1051us; 828us; 1057us; 828us; 2us; 65535us; 836us; 837us; 852us; 853us; 2us; 65535us; 836us; 834us; 852us; 834us; 33us; 65535us; 400us; 829us; 405us; 829us; 735us; 829us; 825us; 829us; 826us; 829us; 830us; 829us; 831us; 829us; 832us; 829us; 833us; 829us; 840us; 920us; 852us; 920us; 868us; 920us; 871us; 920us; 883us; 920us; 891us; 920us; 913us; 920us; 918us; 920us; 919us; 920us; 921us; 920us; 922us; 920us; 923us; 920us; 924us; 920us; 931us; 920us; 933us; 920us; 1024us; 920us; 1051us; 829us; 1057us; 829us; 1171us; 920us; 1173us; 920us; 1178us; 920us; 1185us; 920us; 1494us; 920us; 1496us; 920us; 3us; 65535us; 843us; 844us; 845us; 846us; 847us; 848us; 8us; 65535us; 843us; 855us; 845us; 855us; 847us; 855us; 856us; 857us; 858us; 859us; 860us; 861us; 1476us; 1477us; 1481us; 1482us; 42us; 65535us; 400us; 851us; 405us; 851us; 440us; 441us; 735us; 851us; 825us; 851us; 826us; 851us; 830us; 851us; 831us; 851us; 832us; 851us; 833us; 851us; 840us; 851us; 843us; 856us; 845us; 856us; 847us; 856us; 852us; 851us; 856us; 856us; 858us; 856us; 860us; 856us; 868us; 851us; 871us; 851us; 883us; 851us; 891us; 851us; 913us; 851us; 918us; 851us; 919us; 851us; 921us; 851us; 922us; 851us; 923us; 851us; 924us; 851us; 931us; 851us; 933us; 851us; 1024us; 851us; 1051us; 851us; 1057us; 851us; 1171us; 851us; 1173us; 851us; 1178us; 851us; 1185us; 851us; 1476us; 856us; 1481us; 856us; 1494us; 851us; 1496us; 851us; 2us; 65535us; 852us; 884us; 883us; 884us; 22us; 65535us; 840us; 841us; 852us; 898us; 868us; 908us; 871us; 908us; 883us; 898us; 891us; 905us; 913us; 899us; 918us; 900us; 919us; 901us; 921us; 902us; 922us; 903us; 923us; 904us; 924us; 906us; 931us; 907us; 933us; 908us; 1024us; 909us; 1171us; 910us; 1173us; 910us; 1178us; 910us; 1185us; 910us; 1494us; 910us; 1496us; 910us; 22us; 65535us; 840us; 914us; 852us; 914us; 868us; 914us; 871us; 914us; 883us; 914us; 891us; 892us; 913us; 914us; 918us; 914us; 919us; 914us; 921us; 914us; 922us; 914us; 923us; 914us; 924us; 914us; 931us; 914us; 933us; 914us; 1024us; 914us; 1171us; 914us; 1173us; 914us; 1178us; 914us; 1185us; 914us; 1494us; 914us; 1496us; 914us; 22us; 65535us; 840us; 915us; 852us; 915us; 868us; 915us; 871us; 915us; 883us; 915us; 891us; 915us; 913us; 915us; 918us; 915us; 919us; 915us; 921us; 915us; 922us; 915us; 923us; 915us; 924us; 915us; 931us; 915us; 933us; 915us; 1024us; 915us; 1171us; 915us; 1173us; 915us; 1178us; 915us; 1185us; 915us; 1494us; 915us; 1496us; 915us; 1us; 65535us; 865us; 866us; 2us; 65535us; 865us; 925us; 928us; 929us; 2us; 65535us; 865us; 926us; 928us; 926us; 3us; 65535us; 868us; 869us; 871us; 872us; 933us; 934us; 23us; 65535us; 262us; 982us; 403us; 404us; 408us; 409us; 443us; 444us; 459us; 460us; 683us; 684us; 689us; 690us; 752us; 753us; 962us; 982us; 981us; 982us; 984us; 985us; 998us; 999us; 1015us; 1016us; 1026us; 1027us; 1034us; 1035us; 1041us; 1042us; 1052us; 1053us; 1055us; 1056us; 1058us; 1059us; 1061us; 1062us; 1067us; 1068us; 1069us; 1070us; 1478us; 1479us; 6us; 65535us; 1009us; 1010us; 1011us; 1012us; 1122us; 1123us; 1414us; 1415us; 1419us; 1420us; 1444us; 1445us; 5us; 65535us; 994us; 995us; 1076us; 1077us; 1191us; 1192us; 1383us; 1384us; 1483us; 1484us; 49us; 65535us; 6us; 949us; 262us; 939us; 403us; 939us; 408us; 939us; 443us; 939us; 459us; 939us; 683us; 939us; 689us; 939us; 738us; 747us; 742us; 747us; 752us; 939us; 935us; 936us; 940us; 941us; 959us; 960us; 962us; 939us; 978us; 979us; 981us; 939us; 984us; 939us; 990us; 991us; 994us; 944us; 998us; 939us; 1015us; 939us; 1026us; 939us; 1034us; 939us; 1041us; 939us; 1052us; 939us; 1055us; 939us; 1058us; 939us; 1061us; 939us; 1064us; 1065us; 1067us; 939us; 1069us; 939us; 1076us; 944us; 1168us; 1169us; 1191us; 944us; 1197us; 1198us; 1203us; 1204us; 1288us; 1293us; 1295us; 1296us; 1319us; 1320us; 1326us; 1328us; 1327us; 1328us; 1339us; 1359us; 1340us; 1359us; 1341us; 1359us; 1357us; 1358us; 1383us; 944us; 1478us; 939us; 1483us; 944us; 1us; 65535us; 6us; 7us; 54us; 65535us; 6us; 946us; 262us; 946us; 403us; 946us; 408us; 946us; 443us; 946us; 459us; 946us; 683us; 946us; 689us; 946us; 738us; 946us; 742us; 946us; 752us; 946us; 935us; 946us; 940us; 946us; 954us; 955us; 956us; 957us; 959us; 946us; 962us; 946us; 978us; 946us; 981us; 946us; 984us; 946us; 990us; 946us; 994us; 946us; 998us; 946us; 1015us; 946us; 1026us; 946us; 1034us; 946us; 1041us; 946us; 1052us; 946us; 1055us; 946us; 1058us; 946us; 1061us; 946us; 1064us; 946us; 1067us; 946us; 1069us; 946us; 1076us; 946us; 1168us; 946us; 1191us; 946us; 1197us; 946us; 1203us; 946us; 1275us; 1378us; 1288us; 946us; 1295us; 946us; 1319us; 946us; 1326us; 946us; 1327us; 946us; 1333us; 1378us; 1339us; 946us; 1340us; 946us; 1341us; 946us; 1357us; 946us; 1367us; 1378us; 1383us; 946us; 1478us; 946us; 1483us; 946us; 94us; 65535us; 70us; 73us; 146us; 148us; 152us; 154us; 156us; 158us; 160us; 162us; 231us; 234us; 271us; 272us; 278us; 280us; 281us; 283us; 288us; 290us; 298us; 1814us; 300us; 1814us; 357us; 360us; 370us; 372us; 376us; 377us; 380us; 381us; 481us; 1814us; 496us; 498us; 520us; 521us; 529us; 531us; 687us; 697us; 690us; 697us; 737us; 741us; 743us; 745us; 807us; 814us; 808us; 811us; 852us; 889us; 883us; 889us; 884us; 886us; 891us; 897us; 892us; 894us; 909us; 1046us; 936us; 938us; 991us; 993us; 995us; 997us; 1000us; 1004us; 1001us; 1003us; 1013us; 1022us; 1014us; 1021us; 1016us; 1018us; 1024us; 1814us; 1025us; 1814us; 1026us; 1814us; 1027us; 1814us; 1033us; 1040us; 1034us; 1039us; 1035us; 1037us; 1059us; 697us; 1070us; 697us; 1102us; 1209us; 1125us; 1284us; 1136us; 1137us; 1174us; 1176us; 1198us; 1200us; 1204us; 1206us; 1210us; 1814us; 1212us; 1814us; 1263us; 1287us; 1266us; 1287us; 1275us; 1280us; 1276us; 1278us; 1295us; 1303us; 1296us; 1298us; 1299us; 1301us; 1320us; 1322us; 1326us; 1332us; 1327us; 1332us; 1328us; 1330us; 1333us; 1338us; 1334us; 1336us; 1339us; 1352us; 1340us; 1352us; 1341us; 1352us; 1343us; 1808us; 1367us; 1372us; 1368us; 1370us; 1380us; 1382us; 1385us; 1814us; 1443us; 1814us; 1444us; 1814us; 1483us; 1489us; 1484us; 1486us; 1555us; 1622us; 1595us; 1645us; 1611us; 1614us; 1612us; 1614us; 1616us; 1623us; 1617us; 1621us; 1618us; 1620us; 1635us; 1814us; 1640us; 1651us; 1642us; 1814us; 1647us; 1814us; 1689us; 1814us; 108us; 65535us; 6us; 951us; 31us; 32us; 106us; 107us; 108us; 109us; 226us; 241us; 240us; 241us; 262us; 951us; 403us; 951us; 408us; 951us; 443us; 951us; 459us; 951us; 683us; 951us; 689us; 951us; 738us; 951us; 742us; 951us; 752us; 951us; 935us; 951us; 940us; 951us; 954us; 951us; 956us; 951us; 959us; 951us; 962us; 951us; 978us; 951us; 981us; 951us; 984us; 951us; 990us; 951us; 994us; 951us; 998us; 951us; 1000us; 1001us; 1005us; 1006us; 1007us; 1008us; 1009us; 943us; 1011us; 943us; 1013us; 1014us; 1015us; 951us; 1026us; 951us; 1034us; 951us; 1041us; 951us; 1047us; 1048us; 1049us; 1050us; 1052us; 951us; 1055us; 951us; 1058us; 951us; 1061us; 951us; 1064us; 951us; 1067us; 951us; 1069us; 951us; 1074us; 1075us; 1076us; 951us; 1120us; 1078us; 1122us; 943us; 1126us; 1079us; 1127us; 1080us; 1128us; 1081us; 1129us; 1082us; 1130us; 1083us; 1131us; 1084us; 1132us; 1085us; 1133us; 1086us; 1134us; 1087us; 1135us; 1088us; 1136us; 1089us; 1138us; 1090us; 1139us; 1091us; 1140us; 1092us; 1141us; 1093us; 1142us; 1094us; 1143us; 1095us; 1144us; 1096us; 1145us; 1097us; 1146us; 1098us; 1168us; 951us; 1190us; 1099us; 1191us; 951us; 1195us; 1100us; 1197us; 951us; 1201us; 1101us; 1203us; 951us; 1207us; 1102us; 1210us; 1103us; 1212us; 1105us; 1275us; 953us; 1282us; 1104us; 1288us; 951us; 1295us; 952us; 1305us; 1106us; 1307us; 1107us; 1308us; 1108us; 1319us; 951us; 1326us; 951us; 1327us; 951us; 1333us; 953us; 1339us; 951us; 1340us; 951us; 1341us; 951us; 1357us; 951us; 1367us; 953us; 1380us; 1111us; 1381us; 1112us; 1383us; 951us; 1385us; 1109us; 1389us; 1110us; 1390us; 1113us; 1414us; 943us; 1419us; 943us; 1444us; 943us; 1478us; 951us; 1483us; 951us; 1us; 65535us; 1271us; 1272us; 2us; 65535us; 991us; 992us; 995us; 996us; 4us; 65535us; 1171us; 1172us; 1173us; 1174us; 1494us; 1495us; 1496us; 1497us; 6us; 65535us; 1171us; 1183us; 1173us; 1183us; 1178us; 1183us; 1185us; 1183us; 1494us; 1183us; 1496us; 1183us; 6us; 65535us; 1171us; 1177us; 1173us; 1177us; 1178us; 1179us; 1185us; 1186us; 1494us; 1177us; 1496us; 1177us; 1us; 65535us; 910us; 1182us; 1us; 65535us; 1183us; 1184us; 2us; 65535us; 1001us; 1002us; 1102us; 1208us; 2us; 65535us; 1001us; 1193us; 1102us; 1193us; 1us; 65535us; 1193us; 1194us; 108us; 65535us; 6us; 1124us; 31us; 1124us; 106us; 1124us; 108us; 1124us; 226us; 1124us; 240us; 1124us; 262us; 1124us; 403us; 1124us; 408us; 1124us; 443us; 1124us; 459us; 1124us; 683us; 1124us; 689us; 1124us; 738us; 1124us; 742us; 1124us; 752us; 1124us; 935us; 1124us; 940us; 1124us; 954us; 1124us; 956us; 1124us; 959us; 1124us; 962us; 1124us; 978us; 1124us; 981us; 1124us; 984us; 1124us; 990us; 1124us; 994us; 1124us; 998us; 1124us; 1000us; 1124us; 1005us; 1124us; 1007us; 1124us; 1009us; 1124us; 1011us; 1124us; 1013us; 1124us; 1015us; 1124us; 1026us; 1124us; 1034us; 1124us; 1041us; 1124us; 1047us; 1124us; 1049us; 1124us; 1052us; 1124us; 1055us; 1124us; 1058us; 1124us; 1061us; 1124us; 1064us; 1124us; 1067us; 1124us; 1069us; 1124us; 1074us; 1124us; 1076us; 1124us; 1120us; 1124us; 1122us; 1124us; 1126us; 1124us; 1127us; 1124us; 1128us; 1124us; 1129us; 1124us; 1130us; 1124us; 1131us; 1124us; 1132us; 1124us; 1133us; 1124us; 1134us; 1124us; 1135us; 1124us; 1136us; 1124us; 1138us; 1124us; 1139us; 1124us; 1140us; 1124us; 1141us; 1124us; 1142us; 1124us; 1143us; 1124us; 1144us; 1124us; 1145us; 1124us; 1146us; 1124us; 1168us; 1124us; 1190us; 1124us; 1191us; 1124us; 1195us; 1124us; 1197us; 1124us; 1201us; 1124us; 1203us; 1124us; 1207us; 1124us; 1210us; 1124us; 1212us; 1124us; 1275us; 1124us; 1282us; 1125us; 1288us; 1124us; 1295us; 1124us; 1305us; 1124us; 1307us; 1124us; 1308us; 1124us; 1319us; 1124us; 1326us; 1124us; 1327us; 1124us; 1333us; 1124us; 1339us; 1124us; 1340us; 1124us; 1341us; 1124us; 1357us; 1124us; 1367us; 1124us; 1380us; 1124us; 1381us; 1124us; 1383us; 1124us; 1385us; 1124us; 1389us; 1124us; 1390us; 1124us; 1414us; 1124us; 1419us; 1124us; 1444us; 1124us; 1478us; 1124us; 1483us; 1124us; 122us; 65535us; 6us; 1121us; 31us; 1121us; 106us; 1121us; 108us; 1121us; 226us; 1121us; 240us; 1121us; 262us; 1121us; 403us; 1121us; 408us; 1121us; 443us; 1121us; 459us; 1121us; 683us; 1121us; 689us; 1121us; 738us; 1121us; 742us; 1121us; 752us; 1121us; 935us; 1121us; 940us; 1121us; 954us; 1121us; 956us; 1121us; 959us; 1121us; 962us; 1121us; 978us; 1121us; 981us; 1121us; 984us; 1121us; 990us; 1121us; 994us; 1121us; 998us; 1121us; 1000us; 1121us; 1005us; 1121us; 1007us; 1121us; 1009us; 1121us; 1011us; 1121us; 1013us; 1121us; 1015us; 1121us; 1026us; 1121us; 1034us; 1121us; 1041us; 1121us; 1047us; 1121us; 1049us; 1121us; 1052us; 1121us; 1055us; 1121us; 1058us; 1121us; 1061us; 1121us; 1064us; 1121us; 1067us; 1121us; 1069us; 1121us; 1074us; 1121us; 1076us; 1121us; 1120us; 1121us; 1122us; 1121us; 1126us; 1121us; 1127us; 1121us; 1128us; 1121us; 1129us; 1121us; 1130us; 1121us; 1131us; 1121us; 1132us; 1121us; 1133us; 1121us; 1134us; 1121us; 1135us; 1121us; 1136us; 1121us; 1138us; 1121us; 1139us; 1121us; 1140us; 1121us; 1141us; 1121us; 1142us; 1121us; 1143us; 1121us; 1144us; 1121us; 1145us; 1121us; 1146us; 1121us; 1168us; 1121us; 1190us; 1121us; 1191us; 1121us; 1195us; 1121us; 1197us; 1121us; 1201us; 1121us; 1203us; 1121us; 1207us; 1121us; 1210us; 1121us; 1212us; 1121us; 1214us; 1216us; 1215us; 1216us; 1217us; 1219us; 1218us; 1219us; 1220us; 1222us; 1221us; 1222us; 1223us; 1225us; 1224us; 1225us; 1226us; 1228us; 1227us; 1228us; 1229us; 1231us; 1230us; 1231us; 1242us; 1243us; 1244us; 1245us; 1275us; 1121us; 1282us; 1121us; 1288us; 1121us; 1295us; 1121us; 1305us; 1121us; 1307us; 1121us; 1308us; 1121us; 1319us; 1121us; 1326us; 1121us; 1327us; 1121us; 1333us; 1121us; 1339us; 1121us; 1340us; 1121us; 1341us; 1121us; 1357us; 1121us; 1367us; 1121us; 1380us; 1121us; 1381us; 1121us; 1383us; 1121us; 1385us; 1121us; 1389us; 1121us; 1390us; 1121us; 1414us; 1121us; 1419us; 1121us; 1444us; 1121us; 1478us; 1121us; 1483us; 1121us; 122us; 65535us; 6us; 1246us; 31us; 1246us; 106us; 1246us; 108us; 1246us; 226us; 1246us; 240us; 1246us; 262us; 1246us; 403us; 1246us; 408us; 1246us; 443us; 1246us; 459us; 1246us; 683us; 1246us; 689us; 1246us; 738us; 1246us; 742us; 1246us; 752us; 1246us; 935us; 1246us; 940us; 1246us; 954us; 1246us; 956us; 1246us; 959us; 1246us; 962us; 1246us; 978us; 1246us; 981us; 1246us; 984us; 1246us; 990us; 1246us; 994us; 1246us; 998us; 1246us; 1000us; 1246us; 1005us; 1246us; 1007us; 1246us; 1009us; 1246us; 1011us; 1246us; 1013us; 1246us; 1015us; 1246us; 1026us; 1246us; 1034us; 1246us; 1041us; 1246us; 1047us; 1246us; 1049us; 1246us; 1052us; 1246us; 1055us; 1246us; 1058us; 1246us; 1061us; 1246us; 1064us; 1246us; 1067us; 1246us; 1069us; 1246us; 1074us; 1246us; 1076us; 1246us; 1120us; 1246us; 1122us; 1246us; 1126us; 1246us; 1127us; 1246us; 1128us; 1246us; 1129us; 1246us; 1130us; 1246us; 1131us; 1246us; 1132us; 1246us; 1133us; 1246us; 1134us; 1246us; 1135us; 1246us; 1136us; 1246us; 1138us; 1246us; 1139us; 1246us; 1140us; 1246us; 1141us; 1246us; 1142us; 1246us; 1143us; 1246us; 1144us; 1246us; 1145us; 1246us; 1146us; 1246us; 1168us; 1246us; 1190us; 1246us; 1191us; 1246us; 1195us; 1246us; 1197us; 1246us; 1201us; 1246us; 1203us; 1246us; 1207us; 1246us; 1210us; 1246us; 1212us; 1246us; 1214us; 1246us; 1215us; 1246us; 1217us; 1246us; 1218us; 1246us; 1220us; 1246us; 1221us; 1246us; 1223us; 1246us; 1224us; 1246us; 1226us; 1246us; 1227us; 1246us; 1229us; 1246us; 1230us; 1246us; 1242us; 1246us; 1244us; 1246us; 1275us; 1246us; 1282us; 1246us; 1288us; 1246us; 1295us; 1246us; 1305us; 1246us; 1307us; 1246us; 1308us; 1246us; 1319us; 1246us; 1326us; 1246us; 1327us; 1246us; 1333us; 1246us; 1339us; 1246us; 1340us; 1246us; 1341us; 1246us; 1357us; 1246us; 1367us; 1247us; 1380us; 1246us; 1381us; 1246us; 1383us; 1246us; 1385us; 1246us; 1389us; 1246us; 1390us; 1246us; 1414us; 1246us; 1419us; 1246us; 1444us; 1246us; 1478us; 1246us; 1483us; 1246us; 3us; 65535us; 1246us; 1248us; 1247us; 1248us; 1395us; 1398us; 131us; 65535us; 6us; 1249us; 31us; 1249us; 106us; 1249us; 108us; 1249us; 226us; 1249us; 240us; 1249us; 262us; 1249us; 403us; 1249us; 408us; 1249us; 443us; 1249us; 459us; 1249us; 683us; 1249us; 689us; 1249us; 738us; 1249us; 742us; 1249us; 752us; 1249us; 935us; 1249us; 940us; 1249us; 954us; 1249us; 956us; 1249us; 959us; 1249us; 962us; 1249us; 978us; 1249us; 981us; 1249us; 984us; 1249us; 990us; 1249us; 994us; 1249us; 998us; 1249us; 1000us; 1249us; 1005us; 1249us; 1007us; 1249us; 1009us; 1249us; 1011us; 1249us; 1013us; 1249us; 1015us; 1249us; 1026us; 1249us; 1034us; 1249us; 1041us; 1249us; 1047us; 1249us; 1049us; 1249us; 1052us; 1249us; 1055us; 1249us; 1058us; 1249us; 1061us; 1249us; 1064us; 1249us; 1067us; 1249us; 1069us; 1249us; 1074us; 1249us; 1076us; 1249us; 1120us; 1249us; 1122us; 1249us; 1126us; 1249us; 1127us; 1249us; 1128us; 1249us; 1129us; 1249us; 1130us; 1249us; 1131us; 1249us; 1132us; 1249us; 1133us; 1249us; 1134us; 1249us; 1135us; 1249us; 1136us; 1249us; 1138us; 1249us; 1139us; 1249us; 1140us; 1249us; 1141us; 1249us; 1142us; 1249us; 1143us; 1249us; 1144us; 1249us; 1145us; 1249us; 1146us; 1249us; 1168us; 1249us; 1190us; 1249us; 1191us; 1249us; 1195us; 1249us; 1197us; 1249us; 1201us; 1249us; 1203us; 1249us; 1207us; 1249us; 1210us; 1249us; 1212us; 1249us; 1214us; 1249us; 1215us; 1249us; 1217us; 1249us; 1218us; 1249us; 1220us; 1249us; 1221us; 1249us; 1223us; 1249us; 1224us; 1249us; 1226us; 1249us; 1227us; 1249us; 1229us; 1249us; 1230us; 1249us; 1242us; 1249us; 1244us; 1249us; 1246us; 1252us; 1247us; 1252us; 1250us; 1251us; 1257us; 1253us; 1258us; 1254us; 1261us; 1255us; 1262us; 1255us; 1275us; 1249us; 1282us; 1249us; 1288us; 1249us; 1295us; 1249us; 1305us; 1249us; 1307us; 1249us; 1308us; 1249us; 1319us; 1249us; 1326us; 1249us; 1327us; 1249us; 1333us; 1249us; 1339us; 1249us; 1340us; 1249us; 1341us; 1249us; 1357us; 1249us; 1367us; 1249us; 1380us; 1249us; 1381us; 1249us; 1383us; 1249us; 1385us; 1249us; 1389us; 1249us; 1390us; 1249us; 1395us; 1252us; 1414us; 1249us; 1419us; 1249us; 1444us; 1249us; 1478us; 1249us; 1483us; 1249us; 1626us; 1256us; 2us; 65535us; 1263us; 1264us; 1266us; 1267us; 2us; 65535us; 1295us; 1299us; 1305us; 1306us; 2us; 65535us; 1295us; 1304us; 1305us; 1304us; 138us; 65535us; 6us; 1285us; 31us; 1285us; 106us; 1285us; 108us; 1285us; 226us; 1285us; 240us; 1285us; 262us; 1285us; 312us; 1399us; 316us; 1399us; 321us; 1399us; 403us; 1285us; 408us; 1285us; 443us; 1285us; 459us; 1285us; 484us; 485us; 683us; 1285us; 689us; 1285us; 738us; 1285us; 742us; 1285us; 752us; 1285us; 935us; 1285us; 940us; 1285us; 954us; 1285us; 956us; 1285us; 959us; 1285us; 962us; 1285us; 978us; 1285us; 981us; 1285us; 984us; 1285us; 990us; 1285us; 994us; 1285us; 998us; 1285us; 1000us; 1285us; 1005us; 1285us; 1007us; 1285us; 1009us; 1285us; 1011us; 1285us; 1013us; 1285us; 1015us; 1285us; 1026us; 1285us; 1034us; 1285us; 1041us; 1285us; 1047us; 1285us; 1049us; 1285us; 1052us; 1285us; 1055us; 1285us; 1058us; 1285us; 1061us; 1285us; 1064us; 1285us; 1067us; 1285us; 1069us; 1285us; 1074us; 1285us; 1076us; 1285us; 1120us; 1285us; 1122us; 1285us; 1126us; 1285us; 1127us; 1285us; 1128us; 1285us; 1129us; 1285us; 1130us; 1285us; 1131us; 1285us; 1132us; 1285us; 1133us; 1285us; 1134us; 1285us; 1135us; 1285us; 1136us; 1285us; 1138us; 1285us; 1139us; 1285us; 1140us; 1285us; 1141us; 1285us; 1142us; 1285us; 1143us; 1285us; 1144us; 1285us; 1145us; 1285us; 1146us; 1285us; 1168us; 1285us; 1190us; 1285us; 1191us; 1285us; 1195us; 1285us; 1197us; 1285us; 1201us; 1285us; 1203us; 1285us; 1207us; 1285us; 1210us; 1285us; 1212us; 1285us; 1214us; 1285us; 1215us; 1285us; 1217us; 1285us; 1218us; 1285us; 1220us; 1285us; 1221us; 1285us; 1223us; 1285us; 1224us; 1285us; 1226us; 1285us; 1227us; 1285us; 1229us; 1285us; 1230us; 1285us; 1236us; 1238us; 1237us; 1239us; 1242us; 1285us; 1244us; 1285us; 1246us; 1285us; 1247us; 1285us; 1250us; 1285us; 1257us; 1285us; 1258us; 1285us; 1261us; 1285us; 1262us; 1285us; 1275us; 1285us; 1282us; 1285us; 1288us; 1285us; 1295us; 1285us; 1305us; 1285us; 1307us; 1285us; 1308us; 1285us; 1319us; 1285us; 1326us; 1285us; 1327us; 1285us; 1333us; 1285us; 1339us; 1285us; 1340us; 1285us; 1341us; 1285us; 1357us; 1285us; 1367us; 1285us; 1380us; 1285us; 1381us; 1285us; 1383us; 1285us; 1385us; 1285us; 1389us; 1285us; 1390us; 1285us; 1395us; 1285us; 1410us; 1399us; 1414us; 1285us; 1419us; 1285us; 1444us; 1285us; 1478us; 1285us; 1483us; 1285us; 1626us; 1285us; 138us; 65535us; 6us; 1318us; 31us; 1318us; 106us; 1318us; 108us; 1318us; 226us; 1318us; 240us; 1318us; 262us; 1318us; 312us; 1318us; 316us; 1318us; 321us; 1318us; 403us; 1318us; 408us; 1318us; 443us; 1318us; 459us; 1318us; 484us; 1318us; 683us; 1318us; 689us; 1318us; 738us; 1318us; 742us; 1318us; 752us; 1318us; 935us; 1318us; 940us; 1318us; 954us; 1318us; 956us; 1318us; 959us; 1318us; 962us; 1318us; 978us; 1318us; 981us; 1318us; 984us; 1318us; 990us; 1318us; 994us; 1318us; 998us; 1318us; 1000us; 1318us; 1005us; 1318us; 1007us; 1318us; 1009us; 1318us; 1011us; 1318us; 1013us; 1318us; 1015us; 1318us; 1026us; 1318us; 1034us; 1318us; 1041us; 1318us; 1047us; 1318us; 1049us; 1318us; 1052us; 1318us; 1055us; 1318us; 1058us; 1318us; 1061us; 1318us; 1064us; 1318us; 1067us; 1318us; 1069us; 1318us; 1074us; 1318us; 1076us; 1318us; 1120us; 1318us; 1122us; 1318us; 1126us; 1318us; 1127us; 1318us; 1128us; 1318us; 1129us; 1318us; 1130us; 1318us; 1131us; 1318us; 1132us; 1318us; 1133us; 1318us; 1134us; 1318us; 1135us; 1318us; 1136us; 1318us; 1138us; 1318us; 1139us; 1318us; 1140us; 1318us; 1141us; 1318us; 1142us; 1318us; 1143us; 1318us; 1144us; 1318us; 1145us; 1318us; 1146us; 1318us; 1168us; 1318us; 1190us; 1318us; 1191us; 1318us; 1195us; 1318us; 1197us; 1318us; 1201us; 1318us; 1203us; 1318us; 1207us; 1318us; 1210us; 1318us; 1212us; 1318us; 1214us; 1318us; 1215us; 1318us; 1217us; 1318us; 1218us; 1318us; 1220us; 1318us; 1221us; 1318us; 1223us; 1318us; 1224us; 1318us; 1226us; 1318us; 1227us; 1318us; 1229us; 1318us; 1230us; 1318us; 1236us; 1318us; 1237us; 1318us; 1242us; 1318us; 1244us; 1318us; 1246us; 1318us; 1247us; 1318us; 1250us; 1318us; 1257us; 1318us; 1258us; 1318us; 1261us; 1318us; 1262us; 1318us; 1275us; 1318us; 1282us; 1318us; 1288us; 1318us; 1295us; 1318us; 1305us; 1318us; 1307us; 1318us; 1308us; 1318us; 1319us; 1318us; 1326us; 1318us; 1327us; 1318us; 1333us; 1318us; 1339us; 1318us; 1340us; 1318us; 1341us; 1318us; 1357us; 1318us; 1367us; 1318us; 1380us; 1318us; 1381us; 1318us; 1383us; 1318us; 1385us; 1318us; 1389us; 1318us; 1390us; 1318us; 1395us; 1318us; 1410us; 1318us; 1414us; 1318us; 1419us; 1318us; 1444us; 1318us; 1478us; 1318us; 1483us; 1318us; 1626us; 1318us; 180us; 65535us; 6us; 1316us; 31us; 1316us; 106us; 1316us; 108us; 1316us; 226us; 1316us; 240us; 1316us; 262us; 1316us; 312us; 1316us; 316us; 1316us; 321us; 1316us; 400us; 862us; 403us; 1316us; 405us; 862us; 408us; 1316us; 440us; 862us; 443us; 1316us; 459us; 1316us; 484us; 1316us; 683us; 1316us; 689us; 1316us; 735us; 862us; 738us; 1316us; 742us; 1316us; 752us; 1316us; 825us; 862us; 826us; 862us; 830us; 862us; 831us; 862us; 832us; 862us; 833us; 862us; 840us; 862us; 843us; 862us; 845us; 862us; 847us; 862us; 852us; 862us; 856us; 862us; 858us; 862us; 860us; 862us; 868us; 862us; 871us; 862us; 883us; 862us; 891us; 862us; 913us; 862us; 918us; 862us; 919us; 862us; 921us; 862us; 922us; 862us; 923us; 862us; 924us; 862us; 931us; 862us; 933us; 862us; 935us; 1316us; 940us; 1316us; 954us; 1316us; 956us; 1316us; 959us; 1316us; 962us; 1316us; 978us; 1316us; 981us; 1316us; 984us; 1316us; 990us; 1316us; 994us; 1316us; 998us; 1316us; 1000us; 1316us; 1005us; 1316us; 1007us; 1316us; 1009us; 1316us; 1011us; 1316us; 1013us; 1316us; 1015us; 1316us; 1024us; 862us; 1026us; 1316us; 1034us; 1316us; 1041us; 1316us; 1047us; 1316us; 1049us; 1316us; 1051us; 862us; 1052us; 1316us; 1055us; 1316us; 1057us; 862us; 1058us; 1316us; 1061us; 1316us; 1064us; 1316us; 1067us; 1316us; 1069us; 1316us; 1074us; 1316us; 1076us; 1316us; 1120us; 1316us; 1122us; 1316us; 1126us; 1316us; 1127us; 1316us; 1128us; 1316us; 1129us; 1316us; 1130us; 1316us; 1131us; 1316us; 1132us; 1316us; 1133us; 1316us; 1134us; 1316us; 1135us; 1316us; 1136us; 1316us; 1138us; 1316us; 1139us; 1316us; 1140us; 1316us; 1141us; 1316us; 1142us; 1316us; 1143us; 1316us; 1144us; 1316us; 1145us; 1316us; 1146us; 1316us; 1168us; 1316us; 1171us; 862us; 1173us; 862us; 1178us; 862us; 1185us; 862us; 1190us; 1316us; 1191us; 1316us; 1195us; 1316us; 1197us; 1316us; 1201us; 1316us; 1203us; 1316us; 1207us; 1316us; 1210us; 1316us; 1212us; 1316us; 1214us; 1316us; 1215us; 1316us; 1217us; 1316us; 1218us; 1316us; 1220us; 1316us; 1221us; 1316us; 1223us; 1316us; 1224us; 1316us; 1226us; 1316us; 1227us; 1316us; 1229us; 1316us; 1230us; 1316us; 1236us; 1316us; 1237us; 1316us; 1242us; 1316us; 1244us; 1316us; 1246us; 1316us; 1247us; 1316us; 1250us; 1316us; 1257us; 1316us; 1258us; 1316us; 1261us; 1316us; 1262us; 1316us; 1275us; 1316us; 1282us; 1316us; 1288us; 1316us; 1295us; 1316us; 1305us; 1316us; 1307us; 1316us; 1308us; 1316us; 1319us; 1316us; 1326us; 1316us; 1327us; 1316us; 1333us; 1316us; 1339us; 1316us; 1340us; 1316us; 1341us; 1316us; 1357us; 1316us; 1367us; 1316us; 1380us; 1316us; 1381us; 1316us; 1383us; 1316us; 1385us; 1316us; 1389us; 1316us; 1390us; 1316us; 1395us; 1316us; 1410us; 1316us; 1414us; 1316us; 1419us; 1316us; 1444us; 1316us; 1476us; 862us; 1478us; 1316us; 1481us; 862us; 1483us; 1316us; 1494us; 862us; 1496us; 862us; 1626us; 1316us; 138us; 65535us; 6us; 1317us; 31us; 1317us; 106us; 1317us; 108us; 1317us; 226us; 1317us; 240us; 1317us; 262us; 1317us; 312us; 1317us; 316us; 1317us; 321us; 1317us; 403us; 1317us; 408us; 1317us; 443us; 1317us; 459us; 1317us; 484us; 1317us; 683us; 1317us; 689us; 1317us; 738us; 1317us; 742us; 1317us; 752us; 1317us; 935us; 1317us; 940us; 1317us; 954us; 1317us; 956us; 1317us; 959us; 1317us; 962us; 1317us; 978us; 1317us; 981us; 1317us; 984us; 1317us; 990us; 1317us; 994us; 1317us; 998us; 1317us; 1000us; 1317us; 1005us; 1317us; 1007us; 1317us; 1009us; 1317us; 1011us; 1317us; 1013us; 1317us; 1015us; 1317us; 1026us; 1317us; 1034us; 1317us; 1041us; 1317us; 1047us; 1317us; 1049us; 1317us; 1052us; 1317us; 1055us; 1317us; 1058us; 1317us; 1061us; 1317us; 1064us; 1317us; 1067us; 1317us; 1069us; 1317us; 1074us; 1317us; 1076us; 1317us; 1120us; 1317us; 1122us; 1317us; 1126us; 1317us; 1127us; 1317us; 1128us; 1317us; 1129us; 1317us; 1130us; 1317us; 1131us; 1317us; 1132us; 1317us; 1133us; 1317us; 1134us; 1317us; 1135us; 1317us; 1136us; 1317us; 1138us; 1317us; 1139us; 1317us; 1140us; 1317us; 1141us; 1317us; 1142us; 1317us; 1143us; 1317us; 1144us; 1317us; 1145us; 1317us; 1146us; 1317us; 1168us; 1317us; 1190us; 1317us; 1191us; 1317us; 1195us; 1317us; 1197us; 1317us; 1201us; 1317us; 1203us; 1317us; 1207us; 1317us; 1210us; 1317us; 1212us; 1317us; 1214us; 1317us; 1215us; 1317us; 1217us; 1317us; 1218us; 1317us; 1220us; 1317us; 1221us; 1317us; 1223us; 1317us; 1224us; 1317us; 1226us; 1317us; 1227us; 1317us; 1229us; 1317us; 1230us; 1317us; 1236us; 1317us; 1237us; 1317us; 1242us; 1317us; 1244us; 1317us; 1246us; 1317us; 1247us; 1317us; 1250us; 1317us; 1257us; 1317us; 1258us; 1317us; 1261us; 1317us; 1262us; 1317us; 1275us; 1317us; 1282us; 1317us; 1288us; 1317us; 1295us; 1317us; 1305us; 1317us; 1307us; 1317us; 1308us; 1317us; 1319us; 1317us; 1326us; 1317us; 1327us; 1317us; 1333us; 1317us; 1339us; 1317us; 1340us; 1317us; 1341us; 1317us; 1357us; 1317us; 1367us; 1317us; 1380us; 1317us; 1381us; 1317us; 1383us; 1317us; 1385us; 1317us; 1389us; 1317us; 1390us; 1317us; 1395us; 1317us; 1410us; 1317us; 1414us; 1317us; 1419us; 1317us; 1444us; 1317us; 1478us; 1317us; 1483us; 1317us; 1626us; 1317us; 138us; 65535us; 6us; 1311us; 31us; 1311us; 106us; 1311us; 108us; 1311us; 226us; 1311us; 240us; 1311us; 262us; 1311us; 312us; 1311us; 316us; 1311us; 321us; 1311us; 403us; 1311us; 408us; 1311us; 443us; 1311us; 459us; 1311us; 484us; 1311us; 683us; 1311us; 689us; 1311us; 738us; 1311us; 742us; 1311us; 752us; 1311us; 935us; 1311us; 940us; 1311us; 954us; 1311us; 956us; 1311us; 959us; 1311us; 962us; 1311us; 978us; 1311us; 981us; 1311us; 984us; 1311us; 990us; 1311us; 994us; 1311us; 998us; 1311us; 1000us; 1311us; 1005us; 1311us; 1007us; 1311us; 1009us; 1311us; 1011us; 1311us; 1013us; 1311us; 1015us; 1311us; 1026us; 1311us; 1034us; 1311us; 1041us; 1311us; 1047us; 1311us; 1049us; 1311us; 1052us; 1311us; 1055us; 1311us; 1058us; 1311us; 1061us; 1311us; 1064us; 1311us; 1067us; 1311us; 1069us; 1311us; 1074us; 1311us; 1076us; 1311us; 1120us; 1311us; 1122us; 1311us; 1126us; 1311us; 1127us; 1311us; 1128us; 1311us; 1129us; 1311us; 1130us; 1311us; 1131us; 1311us; 1132us; 1311us; 1133us; 1311us; 1134us; 1311us; 1135us; 1311us; 1136us; 1311us; 1138us; 1311us; 1139us; 1311us; 1140us; 1311us; 1141us; 1311us; 1142us; 1311us; 1143us; 1311us; 1144us; 1311us; 1145us; 1311us; 1146us; 1311us; 1168us; 1311us; 1190us; 1311us; 1191us; 1311us; 1195us; 1311us; 1197us; 1311us; 1201us; 1311us; 1203us; 1311us; 1207us; 1311us; 1210us; 1311us; 1212us; 1311us; 1214us; 1311us; 1215us; 1311us; 1217us; 1311us; 1218us; 1311us; 1220us; 1311us; 1221us; 1311us; 1223us; 1311us; 1224us; 1311us; 1226us; 1311us; 1227us; 1311us; 1229us; 1311us; 1230us; 1311us; 1236us; 1311us; 1237us; 1311us; 1242us; 1311us; 1244us; 1311us; 1246us; 1311us; 1247us; 1311us; 1250us; 1311us; 1257us; 1311us; 1258us; 1311us; 1261us; 1311us; 1262us; 1311us; 1275us; 1311us; 1282us; 1311us; 1288us; 1311us; 1295us; 1311us; 1305us; 1311us; 1307us; 1311us; 1308us; 1311us; 1319us; 1311us; 1326us; 1311us; 1327us; 1311us; 1333us; 1311us; 1339us; 1311us; 1340us; 1311us; 1341us; 1311us; 1357us; 1311us; 1367us; 1311us; 1380us; 1311us; 1381us; 1311us; 1383us; 1311us; 1385us; 1311us; 1389us; 1311us; 1390us; 1311us; 1395us; 1311us; 1410us; 1311us; 1414us; 1311us; 1419us; 1311us; 1444us; 1311us; 1478us; 1311us; 1483us; 1311us; 1626us; 1311us; 3us; 65535us; 1339us; 1343us; 1340us; 1343us; 1341us; 1343us; 3us; 65535us; 1339us; 1353us; 1340us; 1353us; 1341us; 1353us; 1us; 65535us; 1340us; 1363us; 138us; 65535us; 6us; 1312us; 31us; 1312us; 106us; 1312us; 108us; 1312us; 226us; 1312us; 240us; 1312us; 262us; 1312us; 312us; 1312us; 316us; 1312us; 321us; 1312us; 403us; 1312us; 408us; 1312us; 443us; 1312us; 459us; 1312us; 484us; 1312us; 683us; 1312us; 689us; 1312us; 738us; 1312us; 742us; 1312us; 752us; 1312us; 935us; 1312us; 940us; 1312us; 954us; 1312us; 956us; 1312us; 959us; 1312us; 962us; 1312us; 978us; 1312us; 981us; 1312us; 984us; 1312us; 990us; 1312us; 994us; 1312us; 998us; 1312us; 1000us; 1312us; 1005us; 1312us; 1007us; 1312us; 1009us; 1312us; 1011us; 1312us; 1013us; 1312us; 1015us; 1312us; 1026us; 1312us; 1034us; 1312us; 1041us; 1312us; 1047us; 1312us; 1049us; 1312us; 1052us; 1312us; 1055us; 1312us; 1058us; 1312us; 1061us; 1312us; 1064us; 1312us; 1067us; 1312us; 1069us; 1312us; 1074us; 1312us; 1076us; 1312us; 1120us; 1312us; 1122us; 1312us; 1126us; 1312us; 1127us; 1312us; 1128us; 1312us; 1129us; 1312us; 1130us; 1312us; 1131us; 1312us; 1132us; 1312us; 1133us; 1312us; 1134us; 1312us; 1135us; 1312us; 1136us; 1312us; 1138us; 1312us; 1139us; 1312us; 1140us; 1312us; 1141us; 1312us; 1142us; 1312us; 1143us; 1312us; 1144us; 1312us; 1145us; 1312us; 1146us; 1312us; 1168us; 1312us; 1190us; 1312us; 1191us; 1312us; 1195us; 1312us; 1197us; 1312us; 1201us; 1312us; 1203us; 1312us; 1207us; 1312us; 1210us; 1312us; 1212us; 1312us; 1214us; 1312us; 1215us; 1312us; 1217us; 1312us; 1218us; 1312us; 1220us; 1312us; 1221us; 1312us; 1223us; 1312us; 1224us; 1312us; 1226us; 1312us; 1227us; 1312us; 1229us; 1312us; 1230us; 1312us; 1236us; 1312us; 1237us; 1312us; 1242us; 1312us; 1244us; 1312us; 1246us; 1312us; 1247us; 1312us; 1250us; 1312us; 1257us; 1312us; 1258us; 1312us; 1261us; 1312us; 1262us; 1312us; 1275us; 1312us; 1282us; 1312us; 1288us; 1312us; 1295us; 1312us; 1305us; 1312us; 1307us; 1312us; 1308us; 1312us; 1319us; 1312us; 1326us; 1312us; 1327us; 1312us; 1333us; 1312us; 1339us; 1312us; 1340us; 1312us; 1341us; 1312us; 1357us; 1312us; 1367us; 1312us; 1380us; 1312us; 1381us; 1312us; 1383us; 1312us; 1385us; 1312us; 1389us; 1312us; 1390us; 1312us; 1395us; 1312us; 1410us; 1312us; 1414us; 1312us; 1419us; 1312us; 1444us; 1312us; 1478us; 1312us; 1483us; 1312us; 1626us; 1312us; 1us; 65535us; 1367us; 1368us; 2us; 65535us; 1275us; 1276us; 1333us; 1334us; 3us; 65535us; 1275us; 1377us; 1333us; 1377us; 1367us; 1376us; 5us; 65535us; 1275us; 1379us; 1333us; 1379us; 1367us; 1379us; 1385us; 1386us; 1389us; 1391us; 1us; 65535us; 1072us; 1073us; 1us; 65535us; 1024us; 1025us; 1us; 65535us; 1024us; 1033us; 3us; 65535us; 1339us; 1360us; 1340us; 1360us; 1341us; 1360us; 1us; 65535us; 1394us; 1395us; 4us; 65535us; 312us; 313us; 316us; 317us; 321us; 322us; 1410us; 1411us; 1us; 65535us; 1393us; 1394us; 1us; 65535us; 1395us; 1396us; 1us; 65535us; 1367us; 1374us; 6us; 65535us; 1412us; 1413us; 1416us; 1417us; 1421us; 1422us; 1425us; 1426us; 1427us; 1428us; 1431us; 1432us; 6us; 65535us; 1412us; 1435us; 1416us; 1435us; 1421us; 1435us; 1425us; 1435us; 1427us; 1434us; 1431us; 1435us; 3us; 65535us; 1423us; 1443us; 1427us; 1443us; 1435us; 1443us; 5us; 65535us; 1411us; 1412us; 1415us; 1416us; 1420us; 1421us; 1424us; 1425us; 1430us; 1431us; 3us; 65535us; 1423us; 1424us; 1427us; 1430us; 1435us; 1442us; 1us; 65535us; 1367us; 1375us; 1us; 65535us; 1367us; 1448us; 1us; 65535us; 1470us; 1471us; 2us; 65535us; 1448us; 1449us; 1470us; 1455us; 1us; 65535us; 1452us; 1453us; 4us; 65535us; 1450us; 1451us; 1463us; 1464us; 1465us; 1466us; 1467us; 1468us; 5us; 65535us; 1450us; 1465us; 1452us; 1463us; 1463us; 1465us; 1465us; 1465us; 1467us; 1465us; 1us; 65535us; 1110us; 1390us; 108us; 65535us; 6us; 989us; 31us; 989us; 106us; 989us; 108us; 989us; 226us; 989us; 240us; 989us; 262us; 989us; 403us; 989us; 408us; 989us; 443us; 989us; 459us; 989us; 683us; 989us; 689us; 989us; 738us; 989us; 742us; 989us; 752us; 989us; 935us; 989us; 940us; 989us; 954us; 989us; 956us; 989us; 959us; 989us; 962us; 989us; 978us; 989us; 981us; 989us; 984us; 989us; 990us; 989us; 994us; 989us; 998us; 989us; 1000us; 989us; 1005us; 989us; 1007us; 989us; 1009us; 989us; 1011us; 989us; 1013us; 989us; 1015us; 989us; 1026us; 989us; 1034us; 989us; 1041us; 989us; 1047us; 989us; 1049us; 989us; 1052us; 989us; 1055us; 989us; 1058us; 989us; 1061us; 989us; 1064us; 989us; 1067us; 989us; 1069us; 989us; 1074us; 989us; 1076us; 989us; 1120us; 989us; 1122us; 989us; 1126us; 989us; 1127us; 989us; 1128us; 989us; 1129us; 989us; 1130us; 989us; 1131us; 989us; 1132us; 989us; 1133us; 989us; 1134us; 989us; 1135us; 989us; 1136us; 989us; 1138us; 989us; 1139us; 989us; 1140us; 989us; 1141us; 989us; 1142us; 989us; 1143us; 989us; 1144us; 989us; 1145us; 989us; 1146us; 989us; 1168us; 989us; 1190us; 989us; 1191us; 989us; 1195us; 989us; 1197us; 989us; 1201us; 989us; 1203us; 989us; 1207us; 989us; 1210us; 989us; 1212us; 989us; 1275us; 989us; 1282us; 989us; 1288us; 989us; 1295us; 989us; 1305us; 989us; 1307us; 989us; 1308us; 989us; 1319us; 989us; 1326us; 989us; 1327us; 989us; 1333us; 989us; 1339us; 989us; 1340us; 989us; 1341us; 989us; 1357us; 989us; 1367us; 989us; 1380us; 989us; 1381us; 989us; 1383us; 989us; 1385us; 989us; 1389us; 989us; 1390us; 989us; 1414us; 989us; 1419us; 989us; 1444us; 989us; 1478us; 989us; 1483us; 989us; 108us; 65535us; 6us; 988us; 31us; 988us; 106us; 988us; 108us; 988us; 226us; 988us; 240us; 988us; 262us; 988us; 403us; 988us; 408us; 988us; 443us; 988us; 459us; 988us; 683us; 988us; 689us; 988us; 738us; 988us; 742us; 988us; 752us; 988us; 935us; 988us; 940us; 988us; 954us; 988us; 956us; 988us; 959us; 988us; 962us; 988us; 978us; 988us; 981us; 988us; 984us; 988us; 990us; 988us; 994us; 988us; 998us; 988us; 1000us; 988us; 1005us; 988us; 1007us; 988us; 1009us; 988us; 1011us; 988us; 1013us; 988us; 1015us; 988us; 1026us; 988us; 1034us; 988us; 1041us; 988us; 1047us; 988us; 1049us; 988us; 1052us; 988us; 1055us; 988us; 1058us; 988us; 1061us; 988us; 1064us; 988us; 1067us; 988us; 1069us; 988us; 1074us; 988us; 1076us; 988us; 1120us; 988us; 1122us; 988us; 1126us; 988us; 1127us; 988us; 1128us; 988us; 1129us; 988us; 1130us; 988us; 1131us; 988us; 1132us; 988us; 1133us; 988us; 1134us; 988us; 1135us; 988us; 1136us; 988us; 1138us; 988us; 1139us; 988us; 1140us; 988us; 1141us; 988us; 1142us; 988us; 1143us; 988us; 1144us; 988us; 1145us; 988us; 1146us; 988us; 1168us; 988us; 1190us; 988us; 1191us; 988us; 1195us; 988us; 1197us; 988us; 1201us; 988us; 1203us; 988us; 1207us; 988us; 1210us; 988us; 1212us; 988us; 1275us; 988us; 1282us; 988us; 1288us; 988us; 1295us; 988us; 1305us; 988us; 1307us; 988us; 1308us; 988us; 1319us; 988us; 1326us; 988us; 1327us; 988us; 1333us; 988us; 1339us; 988us; 1340us; 988us; 1341us; 988us; 1357us; 988us; 1367us; 988us; 1380us; 988us; 1381us; 988us; 1383us; 988us; 1385us; 988us; 1389us; 988us; 1390us; 988us; 1414us; 988us; 1419us; 988us; 1444us; 988us; 1478us; 988us; 1483us; 988us; 3us; 65535us; 802us; 803us; 916us; 917us; 947us; 948us; 5us; 65535us; 103us; 104us; 177us; 178us; 193us; 194us; 429us; 430us; 1503us; 1504us; 3us; 65535us; 401us; 402us; 406us; 407us; 736us; 737us; 9us; 65535us; 103us; 1501us; 142us; 143us; 177us; 1501us; 193us; 1501us; 366us; 367us; 429us; 1501us; 623us; 624us; 1503us; 1501us; 1506us; 1507us; 9us; 65535us; 103us; 1505us; 142us; 1505us; 177us; 1505us; 193us; 1505us; 366us; 1505us; 429us; 1505us; 623us; 1505us; 1503us; 1505us; 1506us; 1505us; 2us; 65535us; 1509us; 1510us; 1512us; 1513us; 11us; 65535us; 103us; 1508us; 142us; 1508us; 177us; 1508us; 193us; 1508us; 366us; 1508us; 429us; 1508us; 623us; 1508us; 1503us; 1508us; 1506us; 1508us; 1509us; 1511us; 1512us; 1511us; 33us; 65535us; 8us; 1532us; 171us; 522us; 416us; 522us; 452us; 453us; 462us; 463us; 517us; 522us; 525us; 1612us; 580us; 581us; 583us; 584us; 662us; 663us; 758us; 759us; 802us; 1499us; 916us; 1499us; 947us; 1499us; 1114us; 1115us; 1116us; 1117us; 1118us; 1119us; 1401us; 1402us; 1404us; 1405us; 1406us; 1612us; 1530us; 1531us; 1564us; 1612us; 1565us; 1612us; 1573us; 1575us; 1574us; 1576us; 1579us; 1581us; 1580us; 1582us; 1592us; 1652us; 1596us; 1652us; 1610us; 1611us; 1640us; 1652us; 1642us; 1652us; 1653us; 1654us; 1us; 65535us; 8us; 9us; 33us; 65535us; 8us; 1529us; 171us; 1529us; 416us; 1529us; 452us; 1529us; 462us; 1529us; 517us; 1529us; 525us; 1529us; 580us; 1529us; 583us; 1529us; 662us; 1529us; 758us; 1529us; 802us; 1529us; 916us; 1529us; 947us; 1529us; 1114us; 1529us; 1116us; 1529us; 1118us; 1529us; 1401us; 1529us; 1404us; 1529us; 1406us; 1529us; 1530us; 1529us; 1564us; 1529us; 1565us; 1529us; 1573us; 1529us; 1574us; 1529us; 1579us; 1529us; 1580us; 1529us; 1592us; 1529us; 1596us; 1529us; 1610us; 1529us; 1640us; 1529us; 1642us; 1529us; 1653us; 1529us; 6us; 65535us; 1535us; 1536us; 1537us; 1538us; 1539us; 1540us; 1542us; 1543us; 1544us; 1545us; 1617us; 1618us; 0us; 65535us; 94us; 65535us; 8us; 1551us; 103us; 1551us; 142us; 1551us; 171us; 1551us; 177us; 1551us; 181us; 1551us; 182us; 1550us; 183us; 1551us; 184us; 1550us; 193us; 1551us; 366us; 1551us; 416us; 1551us; 422us; 1551us; 423us; 1550us; 429us; 1551us; 452us; 1551us; 462us; 1551us; 481us; 1551us; 517us; 1551us; 525us; 1551us; 534us; 1551us; 580us; 1551us; 583us; 1551us; 593us; 1551us; 603us; 1551us; 604us; 1550us; 605us; 1550us; 620us; 1551us; 623us; 1551us; 642us; 1551us; 645us; 1551us; 648us; 1551us; 649us; 1550us; 650us; 1550us; 662us; 1551us; 673us; 1551us; 758us; 1551us; 802us; 1551us; 849us; 1551us; 916us; 1551us; 947us; 1551us; 1114us; 1551us; 1116us; 1551us; 1118us; 1551us; 1232us; 1551us; 1233us; 1551us; 1401us; 1551us; 1404us; 1551us; 1406us; 1551us; 1408us; 1551us; 1469us; 1551us; 1470us; 1550us; 1503us; 1551us; 1506us; 1551us; 1509us; 1551us; 1512us; 1551us; 1514us; 1551us; 1515us; 1550us; 1516us; 1551us; 1517us; 1550us; 1520us; 1551us; 1521us; 1550us; 1522us; 1550us; 1523us; 1551us; 1524us; 1550us; 1527us; 1551us; 1528us; 1550us; 1530us; 1551us; 1534us; 1550us; 1535us; 1551us; 1537us; 1551us; 1539us; 1551us; 1541us; 1550us; 1542us; 1551us; 1544us; 1551us; 1554us; 1550us; 1555us; 1550us; 1564us; 1551us; 1565us; 1551us; 1568us; 1550us; 1569us; 1550us; 1573us; 1551us; 1574us; 1551us; 1579us; 1551us; 1580us; 1551us; 1592us; 1551us; 1596us; 1551us; 1606us; 1551us; 1610us; 1551us; 1616us; 1551us; 1617us; 1551us; 1640us; 1551us; 1642us; 1551us; 1653us; 1551us; 94us; 65535us; 8us; 1608us; 103us; 1608us; 142us; 1608us; 171us; 1608us; 177us; 1608us; 181us; 1608us; 182us; 1562us; 183us; 1608us; 184us; 1562us; 193us; 1608us; 366us; 1608us; 416us; 1608us; 422us; 1608us; 423us; 1562us; 429us; 1608us; 452us; 1608us; 462us; 1608us; 481us; 1608us; 517us; 1608us; 525us; 1608us; 534us; 1608us; 580us; 1608us; 583us; 1608us; 593us; 1608us; 603us; 1608us; 604us; 1562us; 605us; 1562us; 620us; 1608us; 623us; 1608us; 642us; 1608us; 645us; 1608us; 648us; 1608us; 649us; 1562us; 650us; 1562us; 662us; 1608us; 673us; 1608us; 758us; 1608us; 802us; 1608us; 849us; 1608us; 916us; 1608us; 947us; 1608us; 1114us; 1608us; 1116us; 1608us; 1118us; 1608us; 1232us; 1608us; 1233us; 1608us; 1401us; 1608us; 1404us; 1608us; 1406us; 1608us; 1408us; 1608us; 1469us; 1608us; 1470us; 1562us; 1503us; 1608us; 1506us; 1608us; 1509us; 1608us; 1512us; 1608us; 1514us; 1608us; 1515us; 1562us; 1516us; 1608us; 1517us; 1562us; 1520us; 1608us; 1521us; 1562us; 1522us; 1562us; 1523us; 1608us; 1524us; 1562us; 1527us; 1608us; 1528us; 1562us; 1530us; 1608us; 1534us; 1562us; 1535us; 1608us; 1537us; 1608us; 1539us; 1608us; 1541us; 1562us; 1542us; 1608us; 1544us; 1608us; 1554us; 1563us; 1555us; 1562us; 1564us; 1608us; 1565us; 1608us; 1568us; 1570us; 1569us; 1571us; 1573us; 1608us; 1574us; 1608us; 1579us; 1608us; 1580us; 1608us; 1592us; 1608us; 1596us; 1608us; 1606us; 1608us; 1610us; 1608us; 1616us; 1608us; 1617us; 1608us; 1640us; 1608us; 1642us; 1608us; 1653us; 1608us; 71us; 65535us; 8us; 1534us; 103us; 1522us; 142us; 1522us; 171us; 1534us; 177us; 1522us; 181us; 182us; 183us; 184us; 193us; 1522us; 366us; 1522us; 416us; 1534us; 422us; 423us; 429us; 1522us; 452us; 1534us; 462us; 1534us; 481us; 1554us; 517us; 1534us; 525us; 1534us; 580us; 1534us; 583us; 1534us; 593us; 605us; 603us; 604us; 620us; 650us; 623us; 1522us; 642us; 650us; 645us; 650us; 648us; 649us; 662us; 1534us; 673us; 650us; 758us; 1534us; 802us; 1534us; 916us; 1534us; 947us; 1534us; 1114us; 1534us; 1116us; 1534us; 1118us; 1534us; 1232us; 1554us; 1233us; 1554us; 1401us; 1534us; 1404us; 1534us; 1406us; 1534us; 1408us; 1554us; 1469us; 1470us; 1503us; 1522us; 1506us; 1522us; 1509us; 1522us; 1512us; 1522us; 1514us; 1515us; 1516us; 1517us; 1520us; 1521us; 1523us; 1524us; 1527us; 1528us; 1530us; 1534us; 1535us; 1541us; 1537us; 1541us; 1539us; 1541us; 1542us; 1541us; 1544us; 1541us; 1564us; 1534us; 1565us; 1534us; 1573us; 1534us; 1574us; 1534us; 1579us; 1534us; 1580us; 1534us; 1592us; 1534us; 1596us; 1534us; 1610us; 1534us; 1616us; 1555us; 1617us; 1541us; 1640us; 1534us; 1642us; 1534us; 1653us; 1534us; 20us; 65535us; 182us; 1556us; 184us; 1556us; 423us; 1556us; 604us; 1556us; 605us; 1556us; 649us; 1556us; 650us; 1556us; 1470us; 1556us; 1515us; 1556us; 1517us; 1556us; 1521us; 1556us; 1522us; 1556us; 1524us; 1556us; 1528us; 1556us; 1534us; 1556us; 1541us; 1556us; 1554us; 1557us; 1555us; 1556us; 1558us; 1560us; 1559us; 1561us; 4us; 65535us; 525us; 1566us; 1406us; 1566us; 1564us; 1567us; 1565us; 1566us; 2us; 65535us; 1593us; 1594us; 1643us; 1595us; 71us; 65535us; 8us; 1572us; 103us; 1572us; 142us; 1572us; 171us; 1572us; 177us; 1572us; 181us; 1572us; 183us; 1572us; 193us; 1572us; 366us; 1572us; 416us; 1572us; 422us; 1572us; 429us; 1572us; 452us; 1572us; 462us; 1572us; 481us; 1572us; 517us; 1572us; 525us; 1572us; 580us; 1572us; 583us; 1572us; 593us; 1572us; 603us; 1572us; 620us; 1572us; 623us; 1572us; 642us; 1572us; 645us; 1572us; 648us; 1572us; 662us; 1572us; 673us; 1572us; 758us; 1572us; 802us; 1572us; 916us; 1572us; 947us; 1572us; 1114us; 1572us; 1116us; 1572us; 1118us; 1572us; 1232us; 1572us; 1233us; 1572us; 1401us; 1572us; 1404us; 1572us; 1406us; 1572us; 1408us; 1572us; 1469us; 1572us; 1503us; 1572us; 1506us; 1572us; 1509us; 1572us; 1512us; 1572us; 1514us; 1572us; 1516us; 1572us; 1520us; 1572us; 1523us; 1572us; 1527us; 1572us; 1530us; 1572us; 1535us; 1572us; 1537us; 1572us; 1539us; 1572us; 1542us; 1572us; 1544us; 1572us; 1564us; 1572us; 1565us; 1572us; 1573us; 1572us; 1574us; 1572us; 1579us; 1572us; 1580us; 1572us; 1592us; 1572us; 1596us; 1572us; 1610us; 1572us; 1616us; 1572us; 1617us; 1572us; 1640us; 1572us; 1642us; 1572us; 1653us; 1572us; 4us; 65535us; 481us; 482us; 1232us; 1234us; 1233us; 1235us; 1408us; 1409us; 4us; 65535us; 481us; 1605us; 1232us; 1605us; 1233us; 1605us; 1408us; 1605us; 74us; 65535us; 8us; 1600us; 103us; 1600us; 142us; 1600us; 171us; 1600us; 177us; 1600us; 181us; 1600us; 183us; 1600us; 193us; 1600us; 366us; 1600us; 416us; 1600us; 422us; 1600us; 429us; 1600us; 452us; 1600us; 462us; 1600us; 481us; 1599us; 517us; 1600us; 525us; 1600us; 534us; 1607us; 580us; 1600us; 583us; 1600us; 593us; 1600us; 603us; 1600us; 620us; 1600us; 623us; 1600us; 642us; 1600us; 645us; 1600us; 648us; 1600us; 662us; 1600us; 673us; 1600us; 758us; 1600us; 802us; 1600us; 849us; 850us; 916us; 1600us; 947us; 1600us; 1114us; 1600us; 1116us; 1600us; 1118us; 1600us; 1232us; 1599us; 1233us; 1599us; 1401us; 1600us; 1404us; 1600us; 1406us; 1600us; 1408us; 1599us; 1469us; 1600us; 1503us; 1600us; 1506us; 1600us; 1509us; 1600us; 1512us; 1600us; 1514us; 1600us; 1516us; 1600us; 1520us; 1600us; 1523us; 1600us; 1527us; 1600us; 1530us; 1600us; 1535us; 1600us; 1537us; 1600us; 1539us; 1600us; 1542us; 1600us; 1544us; 1600us; 1564us; 1600us; 1565us; 1600us; 1573us; 1600us; 1574us; 1600us; 1579us; 1600us; 1580us; 1600us; 1592us; 1600us; 1596us; 1600us; 1606us; 1607us; 1610us; 1600us; 1616us; 1600us; 1617us; 1600us; 1640us; 1600us; 1642us; 1600us; 1653us; 1600us; 4us; 65535us; 587us; 602us; 600us; 601us; 1551us; 1631us; 1633us; 1634us; 6us; 65535us; 587us; 1637us; 600us; 1637us; 1259us; 1260us; 1551us; 1637us; 1633us; 1637us; 1638us; 1639us; 8us; 65535us; 525us; 1591us; 1406us; 1591us; 1564us; 1591us; 1565us; 1591us; 1592us; 1593us; 1596us; 1597us; 1640us; 1647us; 1642us; 1655us; 2us; 65535us; 1640us; 1641us; 1642us; 1643us; 3us; 65535us; 1596us; 1598us; 1640us; 1656us; 1642us; 1656us; 1us; 65535us; 794us; 795us; 6us; 65535us; 1657us; 1667us; 1664us; 1667us; 1671us; 1667us; 1677us; 1667us; 1678us; 1667us; 1679us; 1667us; 6us; 65535us; 1657us; 1671us; 1664us; 1671us; 1671us; 1671us; 1677us; 1671us; 1678us; 1671us; 1679us; 1671us; 6us; 65535us; 1657us; 1673us; 1664us; 1673us; 1671us; 1672us; 1677us; 1673us; 1678us; 1673us; 1679us; 1673us; 5us; 65535us; 1657us; 1658us; 1664us; 1665us; 1677us; 1674us; 1678us; 1675us; 1679us; 1676us; 109us; 65535us; 8us; 1548us; 103us; 1548us; 142us; 1548us; 171us; 1548us; 177us; 1548us; 181us; 1548us; 182us; 1547us; 183us; 1548us; 184us; 1547us; 193us; 1548us; 366us; 1548us; 416us; 1548us; 422us; 1548us; 423us; 1547us; 429us; 1548us; 452us; 1548us; 462us; 1548us; 481us; 1549us; 517us; 1548us; 525us; 1548us; 534us; 1547us; 542us; 547us; 557us; 558us; 571us; 582us; 575us; 582us; 578us; 579us; 580us; 1548us; 583us; 1548us; 593us; 1548us; 603us; 1548us; 604us; 1547us; 605us; 1547us; 620us; 1548us; 623us; 1548us; 642us; 1548us; 645us; 1548us; 648us; 1548us; 649us; 1547us; 650us; 1547us; 662us; 1548us; 673us; 1548us; 750us; 757us; 754us; 757us; 758us; 1548us; 802us; 1548us; 849us; 1547us; 916us; 1548us; 947us; 1548us; 1114us; 1548us; 1116us; 1548us; 1118us; 1548us; 1232us; 1549us; 1233us; 1549us; 1401us; 1548us; 1404us; 1548us; 1406us; 1548us; 1408us; 1549us; 1469us; 1548us; 1470us; 1547us; 1500us; 582us; 1502us; 582us; 1503us; 1548us; 1506us; 1548us; 1509us; 1548us; 1512us; 1548us; 1514us; 1548us; 1515us; 1547us; 1516us; 1548us; 1517us; 1547us; 1520us; 1548us; 1521us; 1547us; 1522us; 1547us; 1523us; 1548us; 1524us; 1547us; 1527us; 1548us; 1528us; 1547us; 1530us; 1548us; 1534us; 1547us; 1535us; 1548us; 1537us; 1548us; 1539us; 1548us; 1541us; 1547us; 1542us; 1548us; 1544us; 1548us; 1554us; 1547us; 1555us; 1547us; 1564us; 1548us; 1565us; 1548us; 1568us; 1547us; 1569us; 1547us; 1573us; 1548us; 1574us; 1548us; 1579us; 1548us; 1580us; 1548us; 1592us; 1548us; 1596us; 1548us; 1606us; 1547us; 1610us; 1548us; 1616us; 1548us; 1617us; 1548us; 1640us; 1548us; 1642us; 1548us; 1653us; 1548us; 1657us; 1663us; 1664us; 1663us; 1671us; 1663us; 1677us; 1663us; 1678us; 1663us; 1679us; 1663us; 113us; 65535us; 8us; 1682us; 103us; 1682us; 142us; 1682us; 171us; 1682us; 177us; 1682us; 181us; 1682us; 182us; 1682us; 183us; 1682us; 184us; 1682us; 193us; 1682us; 366us; 1682us; 416us; 1682us; 422us; 1682us; 423us; 1682us; 429us; 1682us; 452us; 1682us; 462us; 1682us; 481us; 1682us; 517us; 1682us; 525us; 1682us; 534us; 1682us; 542us; 1682us; 557us; 1682us; 571us; 1682us; 575us; 1682us; 578us; 1682us; 580us; 1682us; 583us; 1682us; 593us; 1682us; 603us; 1682us; 604us; 1682us; 605us; 1682us; 620us; 1682us; 623us; 1682us; 642us; 1682us; 645us; 1682us; 648us; 1682us; 649us; 1682us; 650us; 1682us; 662us; 1682us; 673us; 1682us; 750us; 1682us; 754us; 1682us; 758us; 1682us; 802us; 1682us; 849us; 1682us; 916us; 1682us; 947us; 1682us; 1114us; 1682us; 1116us; 1682us; 1118us; 1682us; 1232us; 1682us; 1233us; 1682us; 1339us; 1361us; 1340us; 1362us; 1341us; 1361us; 1365us; 1366us; 1401us; 1682us; 1404us; 1682us; 1406us; 1682us; 1408us; 1682us; 1469us; 1682us; 1470us; 1682us; 1500us; 1682us; 1502us; 1682us; 1503us; 1682us; 1506us; 1682us; 1509us; 1682us; 1512us; 1682us; 1514us; 1682us; 1515us; 1682us; 1516us; 1682us; 1517us; 1682us; 1520us; 1682us; 1521us; 1682us; 1522us; 1682us; 1523us; 1682us; 1524us; 1682us; 1527us; 1682us; 1528us; 1682us; 1530us; 1682us; 1534us; 1682us; 1535us; 1682us; 1537us; 1682us; 1539us; 1682us; 1541us; 1682us; 1542us; 1682us; 1544us; 1682us; 1554us; 1682us; 1555us; 1682us; 1564us; 1682us; 1565us; 1682us; 1568us; 1682us; 1569us; 1682us; 1573us; 1682us; 1574us; 1682us; 1579us; 1682us; 1580us; 1682us; 1592us; 1682us; 1596us; 1682us; 1606us; 1682us; 1610us; 1682us; 1616us; 1682us; 1617us; 1682us; 1640us; 1682us; 1642us; 1682us; 1653us; 1682us; 1657us; 1682us; 1664us; 1682us; 1671us; 1682us; 1677us; 1682us; 1678us; 1682us; 1679us; 1682us; 332us; 65535us; 6us; 1735us; 8us; 1688us; 31us; 1735us; 51us; 1688us; 54us; 1688us; 89us; 1688us; 94us; 1688us; 100us; 1735us; 103us; 1688us; 106us; 1735us; 108us; 1735us; 111us; 1688us; 142us; 1688us; 171us; 636us; 174us; 1735us; 177us; 1688us; 181us; 1688us; 182us; 1688us; 183us; 1688us; 184us; 1688us; 193us; 1688us; 195us; 1735us; 197us; 1735us; 202us; 1735us; 226us; 1735us; 240us; 1735us; 262us; 1735us; 269us; 1688us; 298us; 327us; 309us; 327us; 314us; 1688us; 318us; 1688us; 366us; 1688us; 400us; 1737us; 403us; 1735us; 405us; 1737us; 408us; 1735us; 416us; 636us; 422us; 1688us; 423us; 1688us; 426us; 1735us; 429us; 1688us; 440us; 1737us; 443us; 1735us; 450us; 451us; 452us; 1688us; 456us; 457us; 459us; 1735us; 462us; 1688us; 465us; 1737us; 468us; 1737us; 481us; 1688us; 489us; 490us; 492us; 493us; 517us; 636us; 525us; 1688us; 534us; 1688us; 542us; 1688us; 544us; 1688us; 580us; 1688us; 583us; 1688us; 593us; 1688us; 603us; 1688us; 604us; 1688us; 605us; 1688us; 617us; 1735us; 620us; 647us; 623us; 1688us; 642us; 647us; 645us; 647us; 648us; 1688us; 649us; 1688us; 650us; 1688us; 660us; 661us; 662us; 1688us; 669us; 672us; 673us; 647us; 675us; 1688us; 677us; 1688us; 683us; 1735us; 689us; 1735us; 700us; 701us; 712us; 1688us; 713us; 714us; 725us; 1688us; 735us; 1737us; 738us; 1735us; 742us; 1735us; 752us; 1735us; 758us; 1688us; 798us; 799us; 802us; 1688us; 804us; 797us; 805us; 797us; 807us; 797us; 823us; 824us; 825us; 1737us; 826us; 1737us; 830us; 1737us; 831us; 1737us; 832us; 1737us; 833us; 1737us; 836us; 838us; 840us; 1737us; 843us; 1737us; 845us; 1737us; 847us; 1737us; 849us; 1688us; 852us; 839us; 856us; 1737us; 858us; 1737us; 860us; 1737us; 865us; 1688us; 868us; 1737us; 871us; 1737us; 875us; 877us; 876us; 877us; 883us; 1737us; 891us; 1737us; 911us; 912us; 913us; 1737us; 916us; 1688us; 918us; 1737us; 919us; 1737us; 921us; 1737us; 922us; 1737us; 923us; 1737us; 924us; 1737us; 928us; 1688us; 931us; 1737us; 933us; 1737us; 935us; 1735us; 940us; 1735us; 947us; 1688us; 954us; 1735us; 956us; 1735us; 959us; 1735us; 962us; 1735us; 978us; 1735us; 981us; 1735us; 984us; 1735us; 990us; 1735us; 994us; 1735us; 998us; 1735us; 1000us; 1735us; 1005us; 1735us; 1007us; 1735us; 1009us; 1735us; 1011us; 1735us; 1013us; 1735us; 1015us; 1735us; 1024us; 1737us; 1026us; 1735us; 1034us; 1735us; 1041us; 1735us; 1047us; 1735us; 1049us; 1735us; 1051us; 1737us; 1052us; 1735us; 1055us; 1735us; 1057us; 1737us; 1058us; 1735us; 1061us; 1735us; 1064us; 1735us; 1067us; 1735us; 1069us; 1735us; 1074us; 1735us; 1076us; 1735us; 1114us; 1688us; 1116us; 1688us; 1118us; 1688us; 1120us; 1735us; 1122us; 1735us; 1126us; 1735us; 1127us; 1735us; 1128us; 1735us; 1129us; 1735us; 1130us; 1735us; 1131us; 1735us; 1132us; 1735us; 1133us; 1735us; 1134us; 1735us; 1135us; 1735us; 1136us; 1735us; 1138us; 1735us; 1139us; 1735us; 1140us; 1735us; 1141us; 1735us; 1142us; 1735us; 1143us; 1735us; 1144us; 1735us; 1145us; 1735us; 1146us; 1735us; 1168us; 1735us; 1171us; 1737us; 1173us; 1737us; 1178us; 1737us; 1185us; 1737us; 1190us; 1735us; 1191us; 1735us; 1195us; 1735us; 1197us; 1735us; 1201us; 1735us; 1203us; 1735us; 1207us; 1735us; 1210us; 1735us; 1212us; 1735us; 1214us; 1735us; 1215us; 1735us; 1217us; 1735us; 1218us; 1735us; 1220us; 1735us; 1221us; 1735us; 1223us; 1735us; 1224us; 1735us; 1226us; 1735us; 1227us; 1735us; 1229us; 1735us; 1230us; 1735us; 1232us; 1688us; 1233us; 1688us; 1242us; 1735us; 1244us; 1735us; 1246us; 1735us; 1247us; 1735us; 1250us; 1735us; 1257us; 1735us; 1258us; 1735us; 1261us; 1735us; 1262us; 1735us; 1263us; 1735us; 1266us; 1735us; 1268us; 1735us; 1269us; 1735us; 1275us; 1735us; 1282us; 1735us; 1288us; 1735us; 1295us; 1735us; 1305us; 1735us; 1307us; 1735us; 1308us; 1735us; 1319us; 1735us; 1326us; 1735us; 1327us; 1735us; 1333us; 1735us; 1339us; 1735us; 1340us; 1735us; 1341us; 1735us; 1357us; 1735us; 1367us; 1735us; 1380us; 1735us; 1381us; 1735us; 1383us; 1735us; 1385us; 1735us; 1389us; 1735us; 1390us; 1735us; 1395us; 1735us; 1401us; 1688us; 1404us; 1688us; 1406us; 1688us; 1408us; 1688us; 1414us; 1735us; 1419us; 1735us; 1423us; 1688us; 1427us; 1688us; 1435us; 1688us; 1444us; 1735us; 1469us; 1688us; 1470us; 1688us; 1476us; 1737us; 1478us; 1735us; 1481us; 1737us; 1483us; 1735us; 1494us; 1737us; 1496us; 1737us; 1503us; 1688us; 1506us; 1688us; 1509us; 1688us; 1512us; 1688us; 1514us; 1688us; 1515us; 1688us; 1516us; 1688us; 1517us; 1688us; 1518us; 1519us; 1520us; 1688us; 1521us; 1688us; 1522us; 1688us; 1523us; 1688us; 1524us; 1688us; 1525us; 1526us; 1527us; 1688us; 1528us; 1688us; 1530us; 1688us; 1534us; 1688us; 1535us; 1688us; 1537us; 1688us; 1539us; 1688us; 1541us; 1688us; 1542us; 1688us; 1544us; 1688us; 1554us; 1688us; 1555us; 1688us; 1564us; 1688us; 1565us; 1688us; 1568us; 1688us; 1569us; 1688us; 1573us; 1688us; 1574us; 1688us; 1579us; 1688us; 1580us; 1688us; 1592us; 1688us; 1596us; 1688us; 1606us; 1688us; 1610us; 1688us; 1616us; 1688us; 1617us; 1688us; 1626us; 1735us; 1632us; 1688us; 1640us; 1688us; 1642us; 1688us; 1653us; 1688us; 1657us; 1688us; 1664us; 1688us; 1671us; 1688us; 1677us; 1688us; 1678us; 1688us; 1679us; 1688us; 1680us; 1681us; 1683us; 1685us; 1684us; 1685us; 1689us; 1690us; 1739us; 1737us; 122us; 65535us; 8us; 1546us; 51us; 52us; 54us; 55us; 89us; 276us; 94us; 95us; 103us; 1546us; 111us; 274us; 142us; 1546us; 171us; 518us; 177us; 1546us; 181us; 1546us; 182us; 1546us; 183us; 1546us; 184us; 1546us; 193us; 1546us; 269us; 286us; 298us; 311us; 309us; 311us; 314us; 315us; 318us; 319us; 366us; 1546us; 416us; 518us; 422us; 1546us; 423us; 1546us; 429us; 1546us; 452us; 1546us; 462us; 1546us; 481us; 1546us; 517us; 518us; 525us; 1546us; 534us; 1546us; 542us; 543us; 544us; 545us; 580us; 1546us; 583us; 1546us; 593us; 1546us; 603us; 1546us; 604us; 1546us; 605us; 1546us; 620us; 1546us; 623us; 1546us; 642us; 1546us; 645us; 1546us; 648us; 1546us; 649us; 1546us; 650us; 1546us; 662us; 1546us; 673us; 1546us; 675us; 676us; 677us; 678us; 712us; 715us; 725us; 715us; 758us; 1546us; 802us; 1546us; 849us; 1546us; 865us; 930us; 916us; 1546us; 928us; 930us; 947us; 1546us; 1114us; 1546us; 1116us; 1546us; 1118us; 1546us; 1232us; 1546us; 1233us; 1546us; 1401us; 1546us; 1404us; 1546us; 1406us; 1546us; 1408us; 1546us; 1423us; 1440us; 1427us; 1440us; 1435us; 1440us; 1469us; 1546us; 1470us; 1546us; 1503us; 1546us; 1506us; 1546us; 1509us; 1546us; 1512us; 1546us; 1514us; 1546us; 1515us; 1546us; 1516us; 1546us; 1517us; 1546us; 1520us; 1546us; 1521us; 1546us; 1522us; 1546us; 1523us; 1546us; 1524us; 1546us; 1527us; 1546us; 1528us; 1546us; 1530us; 1546us; 1534us; 1546us; 1535us; 1546us; 1537us; 1546us; 1539us; 1546us; 1541us; 1546us; 1542us; 1546us; 1544us; 1546us; 1554us; 1546us; 1555us; 1546us; 1564us; 1546us; 1565us; 1546us; 1568us; 1546us; 1569us; 1546us; 1573us; 1546us; 1574us; 1546us; 1579us; 1546us; 1580us; 1546us; 1592us; 1546us; 1596us; 1546us; 1606us; 1546us; 1610us; 1546us; 1616us; 1546us; 1617us; 1546us; 1632us; 1633us; 1640us; 1546us; 1642us; 1546us; 1653us; 1546us; 1657us; 1662us; 1664us; 1662us; 1671us; 1662us; 1677us; 1662us; 1678us; 1662us; 1679us; 1662us; 187us; 65535us; 6us; 1736us; 31us; 1736us; 100us; 1736us; 106us; 1736us; 108us; 1736us; 174us; 1736us; 195us; 1736us; 197us; 1736us; 202us; 1736us; 226us; 1736us; 240us; 1736us; 262us; 1736us; 400us; 1738us; 403us; 1736us; 405us; 1738us; 408us; 1736us; 426us; 1736us; 440us; 1738us; 443us; 1736us; 459us; 1736us; 465us; 1738us; 468us; 1738us; 617us; 1736us; 683us; 1736us; 689us; 1736us; 735us; 1738us; 738us; 1736us; 742us; 1736us; 752us; 1736us; 825us; 1738us; 826us; 1738us; 830us; 1738us; 831us; 1738us; 832us; 1738us; 833us; 1738us; 840us; 1738us; 843us; 1738us; 845us; 1738us; 847us; 1738us; 852us; 1738us; 856us; 1738us; 858us; 1738us; 860us; 1738us; 868us; 1738us; 871us; 1738us; 883us; 1738us; 891us; 1738us; 913us; 1738us; 918us; 1738us; 919us; 1738us; 921us; 1738us; 922us; 1738us; 923us; 1738us; 924us; 1738us; 931us; 1738us; 933us; 1738us; 935us; 1736us; 940us; 1736us; 954us; 1736us; 956us; 1736us; 959us; 1736us; 962us; 1736us; 978us; 1736us; 981us; 1736us; 984us; 1736us; 990us; 1736us; 994us; 1736us; 998us; 1736us; 1000us; 1736us; 1005us; 1736us; 1007us; 1736us; 1009us; 1736us; 1011us; 1736us; 1013us; 1736us; 1015us; 1736us; 1024us; 1738us; 1026us; 1736us; 1034us; 1736us; 1041us; 1736us; 1047us; 1736us; 1049us; 1736us; 1051us; 1738us; 1052us; 1736us; 1055us; 1736us; 1057us; 1738us; 1058us; 1736us; 1061us; 1736us; 1064us; 1736us; 1067us; 1736us; 1069us; 1736us; 1074us; 1736us; 1076us; 1736us; 1120us; 1736us; 1122us; 1736us; 1126us; 1736us; 1127us; 1736us; 1128us; 1736us; 1129us; 1736us; 1130us; 1736us; 1131us; 1736us; 1132us; 1736us; 1133us; 1736us; 1134us; 1736us; 1135us; 1736us; 1136us; 1736us; 1138us; 1736us; 1139us; 1736us; 1140us; 1736us; 1141us; 1736us; 1142us; 1736us; 1143us; 1736us; 1144us; 1736us; 1145us; 1736us; 1146us; 1736us; 1168us; 1736us; 1171us; 1738us; 1173us; 1738us; 1178us; 1738us; 1185us; 1738us; 1190us; 1736us; 1191us; 1736us; 1195us; 1736us; 1197us; 1736us; 1201us; 1736us; 1203us; 1736us; 1207us; 1736us; 1210us; 1736us; 1212us; 1736us; 1214us; 1736us; 1215us; 1736us; 1217us; 1736us; 1218us; 1736us; 1220us; 1736us; 1221us; 1736us; 1223us; 1736us; 1224us; 1736us; 1226us; 1736us; 1227us; 1736us; 1229us; 1736us; 1230us; 1736us; 1242us; 1736us; 1244us; 1736us; 1246us; 1736us; 1247us; 1736us; 1250us; 1736us; 1257us; 1736us; 1258us; 1736us; 1261us; 1736us; 1262us; 1736us; 1263us; 1736us; 1266us; 1736us; 1268us; 1736us; 1269us; 1736us; 1275us; 1736us; 1282us; 1736us; 1288us; 1736us; 1295us; 1736us; 1305us; 1736us; 1307us; 1736us; 1308us; 1736us; 1319us; 1736us; 1326us; 1736us; 1327us; 1736us; 1333us; 1736us; 1339us; 1736us; 1340us; 1736us; 1341us; 1736us; 1357us; 1736us; 1367us; 1736us; 1380us; 1736us; 1381us; 1736us; 1383us; 1736us; 1385us; 1736us; 1389us; 1736us; 1390us; 1736us; 1395us; 1736us; 1414us; 1736us; 1419us; 1736us; 1444us; 1736us; 1476us; 1738us; 1478us; 1736us; 1481us; 1738us; 1483us; 1736us; 1494us; 1738us; 1496us; 1738us; 1626us; 1736us; 1739us; 1738us; 7us; 65535us; 630us; 1693us; 852us; 1693us; 883us; 1693us; 1288us; 1693us; 1340us; 1693us; 1341us; 1693us; 1692us; 1693us; 2us; 65535us; 1699us; 1734us; 1732us; 1733us; 7us; 65535us; 630us; 1698us; 852us; 1698us; 883us; 1698us; 1288us; 1698us; 1340us; 1698us; 1341us; 1698us; 1692us; 1698us; 142us; 65535us; 6us; 1742us; 31us; 1742us; 100us; 1742us; 106us; 1742us; 108us; 1742us; 174us; 1742us; 195us; 1742us; 197us; 1742us; 202us; 1742us; 226us; 1742us; 240us; 1742us; 262us; 1742us; 403us; 1742us; 408us; 1742us; 426us; 1742us; 443us; 1742us; 459us; 1742us; 617us; 1742us; 683us; 1742us; 689us; 1742us; 738us; 1742us; 742us; 1742us; 752us; 1742us; 935us; 1742us; 940us; 1742us; 954us; 1742us; 956us; 1742us; 959us; 1742us; 962us; 1742us; 978us; 1742us; 981us; 1742us; 984us; 1742us; 990us; 1742us; 994us; 1742us; 998us; 1742us; 1000us; 1742us; 1005us; 1742us; 1007us; 1742us; 1009us; 1742us; 1011us; 1742us; 1013us; 1742us; 1015us; 1742us; 1026us; 1742us; 1034us; 1742us; 1041us; 1742us; 1047us; 1742us; 1049us; 1742us; 1052us; 1742us; 1055us; 1742us; 1058us; 1742us; 1061us; 1742us; 1064us; 1742us; 1067us; 1742us; 1069us; 1742us; 1074us; 1742us; 1076us; 1742us; 1120us; 1742us; 1122us; 1742us; 1126us; 1742us; 1127us; 1742us; 1128us; 1742us; 1129us; 1742us; 1130us; 1742us; 1131us; 1742us; 1132us; 1742us; 1133us; 1742us; 1134us; 1742us; 1135us; 1742us; 1136us; 1742us; 1138us; 1742us; 1139us; 1742us; 1140us; 1742us; 1141us; 1742us; 1142us; 1742us; 1143us; 1742us; 1144us; 1742us; 1145us; 1742us; 1146us; 1742us; 1168us; 1742us; 1190us; 1742us; 1191us; 1742us; 1195us; 1742us; 1197us; 1742us; 1201us; 1742us; 1203us; 1742us; 1207us; 1742us; 1210us; 1742us; 1212us; 1742us; 1214us; 1742us; 1215us; 1742us; 1217us; 1742us; 1218us; 1742us; 1220us; 1742us; 1221us; 1742us; 1223us; 1742us; 1224us; 1742us; 1226us; 1742us; 1227us; 1742us; 1229us; 1742us; 1230us; 1742us; 1242us; 1742us; 1244us; 1742us; 1246us; 1742us; 1247us; 1742us; 1250us; 1742us; 1257us; 1742us; 1258us; 1742us; 1261us; 1742us; 1262us; 1742us; 1263us; 1286us; 1266us; 1286us; 1268us; 1742us; 1269us; 1742us; 1275us; 1742us; 1282us; 1742us; 1288us; 1742us; 1295us; 1742us; 1305us; 1742us; 1307us; 1742us; 1308us; 1742us; 1319us; 1742us; 1326us; 1742us; 1327us; 1742us; 1333us; 1742us; 1339us; 1742us; 1340us; 1742us; 1341us; 1742us; 1357us; 1742us; 1367us; 1742us; 1380us; 1742us; 1381us; 1742us; 1383us; 1742us; 1385us; 1742us; 1389us; 1742us; 1390us; 1742us; 1395us; 1742us; 1414us; 1742us; 1419us; 1742us; 1444us; 1742us; 1478us; 1742us; 1483us; 1742us; 1626us; 1742us; 45us; 65535us; 400us; 467us; 405us; 467us; 440us; 467us; 465us; 466us; 468us; 469us; 735us; 467us; 825us; 467us; 826us; 467us; 830us; 467us; 831us; 467us; 832us; 467us; 833us; 467us; 840us; 467us; 843us; 467us; 845us; 467us; 847us; 467us; 852us; 467us; 856us; 467us; 858us; 467us; 860us; 467us; 868us; 467us; 871us; 467us; 883us; 467us; 891us; 467us; 913us; 467us; 918us; 467us; 919us; 467us; 921us; 467us; 922us; 467us; 923us; 467us; 924us; 467us; 931us; 467us; 933us; 467us; 1024us; 467us; 1051us; 467us; 1057us; 467us; 1171us; 467us; 1173us; 467us; 1178us; 467us; 1185us; 467us; 1476us; 467us; 1481us; 467us; 1494us; 467us; 1496us; 467us; 1739us; 1740us; 140us; 65535us; 6us; 1274us; 31us; 1274us; 100us; 101us; 106us; 1274us; 108us; 1274us; 174us; 175us; 195us; 201us; 197us; 201us; 202us; 203us; 226us; 1274us; 240us; 1274us; 262us; 1274us; 403us; 1274us; 408us; 1274us; 426us; 427us; 443us; 1274us; 459us; 1274us; 617us; 629us; 683us; 1274us; 689us; 1274us; 738us; 1274us; 742us; 1274us; 752us; 1274us; 935us; 1274us; 940us; 1274us; 954us; 1274us; 956us; 1274us; 959us; 1274us; 962us; 1274us; 978us; 1274us; 981us; 1274us; 984us; 1274us; 990us; 1274us; 994us; 1274us; 998us; 1274us; 1000us; 1274us; 1005us; 1274us; 1007us; 1274us; 1009us; 1274us; 1011us; 1274us; 1013us; 1274us; 1015us; 1274us; 1026us; 1274us; 1034us; 1274us; 1041us; 1274us; 1047us; 1274us; 1049us; 1274us; 1052us; 1274us; 1055us; 1274us; 1058us; 1274us; 1061us; 1274us; 1064us; 1274us; 1067us; 1274us; 1069us; 1274us; 1074us; 1274us; 1076us; 1274us; 1120us; 1274us; 1122us; 1274us; 1126us; 1274us; 1127us; 1274us; 1128us; 1274us; 1129us; 1274us; 1130us; 1274us; 1131us; 1274us; 1132us; 1274us; 1133us; 1274us; 1134us; 1274us; 1135us; 1274us; 1136us; 1274us; 1138us; 1274us; 1139us; 1274us; 1140us; 1274us; 1141us; 1274us; 1142us; 1274us; 1143us; 1274us; 1144us; 1274us; 1145us; 1274us; 1146us; 1274us; 1168us; 1274us; 1190us; 1274us; 1191us; 1274us; 1195us; 1274us; 1197us; 1274us; 1201us; 1274us; 1203us; 1274us; 1207us; 1274us; 1210us; 1274us; 1212us; 1274us; 1214us; 1274us; 1215us; 1274us; 1217us; 1274us; 1218us; 1274us; 1220us; 1274us; 1221us; 1274us; 1223us; 1274us; 1224us; 1274us; 1226us; 1274us; 1227us; 1274us; 1229us; 1274us; 1230us; 1274us; 1242us; 1274us; 1244us; 1274us; 1246us; 1274us; 1247us; 1274us; 1250us; 1274us; 1257us; 1274us; 1258us; 1274us; 1261us; 1274us; 1262us; 1274us; 1268us; 1270us; 1269us; 1270us; 1275us; 1274us; 1282us; 1274us; 1288us; 1274us; 1295us; 1274us; 1305us; 1274us; 1307us; 1274us; 1308us; 1274us; 1319us; 1274us; 1326us; 1274us; 1327us; 1274us; 1333us; 1274us; 1339us; 1274us; 1340us; 1274us; 1341us; 1274us; 1357us; 1274us; 1367us; 1274us; 1380us; 1274us; 1381us; 1274us; 1383us; 1274us; 1385us; 1274us; 1389us; 1274us; 1390us; 1274us; 1395us; 1274us; 1414us; 1274us; 1419us; 1274us; 1444us; 1274us; 1478us; 1274us; 1483us; 1274us; 1626us; 1274us; 14us; 65535us; 47us; 1746us; 74us; 1746us; 77us; 1746us; 78us; 1748us; 81us; 1746us; 216us; 1746us; 235us; 1746us; 241us; 1746us; 246us; 1746us; 250us; 1746us; 251us; 1746us; 252us; 1746us; 1746us; 1746us; 1748us; 1748us; 12us; 65535us; 47us; 82us; 74us; 82us; 77us; 82us; 81us; 82us; 216us; 253us; 235us; 253us; 241us; 242us; 246us; 248us; 250us; 253us; 251us; 253us; 252us; 253us; 1746us; 1747us; 2us; 65535us; 78us; 79us; 1748us; 1749us; 11us; 65535us; 165us; 1763us; 299us; 309us; 387us; 1763us; 500us; 1763us; 653us; 654us; 834us; 836us; 908us; 933us; 926us; 928us; 951us; 954us; 952us; 954us; 953us; 954us; 4us; 65535us; 210us; 211us; 293us; 294us; 476us; 477us; 479us; 480us; 2us; 65535us; 1461us; 1462us; 1471us; 1472us; 9us; 65535us; 420us; 421us; 431us; 432us; 434us; 435us; 436us; 437us; 438us; 439us; 444us; 445us; 506us; 507us; 508us; 509us; 512us; 513us; 2us; 65535us; 60us; 61us; 222us; 223us; 20us; 65535us; 71us; 72us; 131us; 132us; 232us; 233us; 301us; 302us; 304us; 305us; 354us; 355us; 611us; 641us; 618us; 619us; 621us; 622us; 624us; 625us; 627us; 628us; 636us; 637us; 639us; 640us; 1025us; 1072us; 1054us; 1055us; 1060us; 1061us; 1066us; 1067us; 1448us; 1452us; 1449us; 1450us; 1472us; 1473us; 8us; 65535us; 165us; 166us; 299us; 300us; 387us; 388us; 500us; 501us; 653us; 656us; 834us; 835us; 908us; 932us; 926us; 927us; 4us; 65535us; 50us; 51us; 53us; 54us; 679us; 680us; 685us; 686us; 0us; 65535us; 11us; 65535us; 97us; 98us; 172us; 173us; 390us; 399us; 392us; 399us; 397us; 399us; 419us; 405us; 425us; 426us; 504us; 734us; 505us; 405us; 511us; 405us; 731us; 734us; 7us; 65535us; 98us; 99us; 185us; 659us; 188us; 659us; 448us; 449us; 454us; 455us; 657us; 659us; 734us; 735us; 4us; 65535us; 967us; 1041us; 1014us; 1015us; 1025us; 1026us; 1033us; 1034us; 9us; 65535us; 964us; 1023us; 965us; 1030us; 966us; 1038us; 968us; 1045us; 1016us; 1017us; 1019us; 1020us; 1027us; 1028us; 1035us; 1036us; 1042us; 1043us; 2us; 65535us; 269us; 287us; 277us; 287us; 2us; 65535us; 89us; 118us; 111us; 114us; 2us; 65535us; 65us; 89us; 88us; 89us; 258us; 65535us; 6us; 777us; 8us; 777us; 31us; 777us; 40us; 42us; 103us; 777us; 106us; 777us; 108us; 777us; 142us; 777us; 171us; 777us; 177us; 777us; 181us; 777us; 183us; 777us; 193us; 777us; 226us; 777us; 240us; 777us; 262us; 777us; 312us; 777us; 316us; 777us; 321us; 777us; 366us; 777us; 400us; 777us; 403us; 777us; 405us; 777us; 408us; 777us; 416us; 777us; 422us; 777us; 429us; 777us; 440us; 777us; 443us; 777us; 452us; 777us; 459us; 777us; 462us; 777us; 481us; 777us; 484us; 777us; 517us; 777us; 525us; 777us; 534us; 535us; 580us; 777us; 583us; 777us; 593us; 777us; 603us; 777us; 620us; 777us; 623us; 777us; 626us; 777us; 638us; 777us; 642us; 777us; 645us; 777us; 648us; 777us; 662us; 777us; 673us; 777us; 683us; 777us; 689us; 777us; 735us; 777us; 738us; 777us; 742us; 777us; 752us; 777us; 758us; 777us; 802us; 777us; 825us; 777us; 826us; 777us; 830us; 777us; 831us; 777us; 832us; 777us; 833us; 777us; 840us; 777us; 843us; 777us; 845us; 777us; 847us; 777us; 849us; 777us; 852us; 777us; 856us; 777us; 858us; 777us; 860us; 777us; 868us; 777us; 871us; 777us; 883us; 777us; 891us; 777us; 913us; 777us; 916us; 777us; 918us; 777us; 919us; 777us; 921us; 777us; 922us; 777us; 923us; 777us; 924us; 777us; 931us; 777us; 933us; 777us; 935us; 777us; 940us; 777us; 947us; 777us; 954us; 777us; 956us; 777us; 959us; 777us; 962us; 777us; 978us; 777us; 981us; 777us; 984us; 777us; 990us; 777us; 994us; 777us; 998us; 777us; 1000us; 777us; 1005us; 777us; 1007us; 777us; 1009us; 777us; 1011us; 777us; 1013us; 777us; 1015us; 777us; 1024us; 777us; 1026us; 777us; 1034us; 777us; 1041us; 777us; 1047us; 777us; 1049us; 777us; 1051us; 777us; 1052us; 777us; 1055us; 777us; 1057us; 777us; 1058us; 777us; 1061us; 777us; 1064us; 777us; 1067us; 777us; 1069us; 777us; 1074us; 777us; 1076us; 777us; 1114us; 777us; 1116us; 777us; 1118us; 777us; 1120us; 777us; 1122us; 777us; 1126us; 777us; 1127us; 777us; 1128us; 777us; 1129us; 777us; 1130us; 777us; 1131us; 777us; 1132us; 777us; 1133us; 777us; 1134us; 777us; 1135us; 777us; 1136us; 777us; 1138us; 777us; 1139us; 777us; 1140us; 777us; 1141us; 777us; 1142us; 777us; 1143us; 777us; 1144us; 777us; 1145us; 777us; 1146us; 777us; 1168us; 777us; 1171us; 777us; 1173us; 777us; 1178us; 777us; 1185us; 777us; 1190us; 777us; 1191us; 777us; 1195us; 777us; 1197us; 777us; 1201us; 777us; 1203us; 777us; 1207us; 777us; 1210us; 777us; 1212us; 777us; 1214us; 777us; 1215us; 777us; 1217us; 777us; 1218us; 777us; 1220us; 777us; 1221us; 777us; 1223us; 777us; 1224us; 777us; 1226us; 777us; 1227us; 777us; 1229us; 777us; 1230us; 777us; 1232us; 777us; 1233us; 777us; 1236us; 777us; 1237us; 777us; 1242us; 777us; 1244us; 777us; 1246us; 777us; 1247us; 777us; 1250us; 777us; 1257us; 777us; 1258us; 777us; 1261us; 777us; 1262us; 777us; 1275us; 777us; 1282us; 777us; 1288us; 777us; 1295us; 777us; 1305us; 777us; 1307us; 777us; 1308us; 777us; 1319us; 777us; 1326us; 777us; 1327us; 777us; 1333us; 777us; 1339us; 777us; 1340us; 777us; 1341us; 777us; 1357us; 777us; 1367us; 777us; 1380us; 777us; 1381us; 777us; 1383us; 777us; 1385us; 777us; 1389us; 777us; 1390us; 777us; 1392us; 1393us; 1395us; 777us; 1401us; 777us; 1404us; 777us; 1406us; 777us; 1408us; 777us; 1410us; 777us; 1414us; 777us; 1419us; 777us; 1444us; 777us; 1469us; 777us; 1476us; 777us; 1478us; 777us; 1481us; 777us; 1483us; 777us; 1494us; 777us; 1496us; 777us; 1503us; 777us; 1506us; 777us; 1509us; 777us; 1512us; 777us; 1514us; 777us; 1516us; 777us; 1520us; 777us; 1523us; 777us; 1527us; 777us; 1530us; 777us; 1535us; 777us; 1537us; 777us; 1539us; 777us; 1542us; 777us; 1544us; 777us; 1564us; 777us; 1565us; 777us; 1573us; 777us; 1574us; 777us; 1579us; 777us; 1580us; 777us; 1592us; 777us; 1596us; 777us; 1606us; 777us; 1610us; 777us; 1616us; 777us; 1617us; 777us; 1626us; 777us; 1640us; 777us; 1642us; 777us; 1653us; 777us; 11us; 65535us; 311us; 312us; 315us; 316us; 320us; 321us; 347us; 348us; 482us; 484us; 701us; 702us; 713us; 717us; 716us; 717us; 1234us; 1236us; 1235us; 1237us; 1409us; 1410us; 5us; 65535us; 101us; 564us; 175us; 564us; 427us; 564us; 543us; 559us; 842us; 564us; 13us; 65535us; 31us; 264us; 64us; 121us; 87us; 121us; 187us; 190us; 226us; 264us; 240us; 264us; 258us; 264us; 298us; 325us; 309us; 325us; 331us; 446us; 1393us; 1400us; 1782us; 1784us; 1783us; 1784us; 10us; 65535us; 31us; 49us; 64us; 49us; 87us; 49us; 226us; 49us; 240us; 49us; 258us; 49us; 298us; 323us; 309us; 323us; 1787us; 1789us; 1788us; 1789us; 7us; 65535us; 529us; 530us; 532us; 533us; 866us; 867us; 975us; 1371us; 1367us; 1373us; 1368us; 1369us; 1792us; 1793us; 43us; 65535us; 526us; 527us; 549us; 550us; 591us; 592us; 594us; 595us; 598us; 599us; 631us; 632us; 634us; 635us; 704us; 705us; 788us; 789us; 807us; 810us; 808us; 809us; 812us; 813us; 853us; 854us; 884us; 885us; 887us; 888us; 892us; 893us; 895us; 896us; 973us; 1346us; 974us; 1347us; 1125us; 1283us; 1169us; 1170us; 1289us; 1290us; 1293us; 1294us; 1339us; 1342us; 1340us; 1342us; 1341us; 1342us; 1343us; 1344us; 1356us; 1357us; 1363us; 1364us; 1402us; 1403us; 1406us; 1407us; 1566us; 1568us; 1567us; 1569us; 1611us; 1613us; 1612us; 1613us; 1618us; 1619us; 1629us; 1630us; 1665us; 1666us; 1693us; 1694us; 1695us; 1696us; 1699us; 1700us; 1702us; 1703us; 1796us; 1797us; 26us; 65535us; 70us; 71us; 74us; 75us; 109us; 110us; 112us; 113us; 116us; 117us; 134us; 135us; 152us; 153us; 160us; 161us; 231us; 232us; 235us; 236us; 251us; 284us; 274us; 275us; 278us; 279us; 281us; 282us; 319us; 320us; 357us; 358us; 376us; 378us; 380us; 382us; 496us; 497us; 743us; 744us; 936us; 937us; 941us; 942us; 960us; 961us; 1198us; 1199us; 1204us; 1205us; 1800us; 1801us; 1us; 65535us; 1343us; 1345us; 17us; 65535us; 298us; 307us; 300us; 306us; 481us; 487us; 909us; 1388us; 1024us; 1044us; 1025us; 1032us; 1026us; 1031us; 1027us; 1029us; 1210us; 1211us; 1212us; 1213us; 1385us; 1387us; 1443us; 1447us; 1444us; 1446us; 1635us; 1636us; 1642us; 1646us; 1647us; 1649us; 1689us; 1691us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 151us; 155us; 157us; 160us; 163us; 166us; 170us; 179us; 188us; 200us; 204us; 207us; 210us; 213us; 219us; 221us; 223us; 226us; 229us; 232us; 236us; 242us; 252us; 263us; 274us; 290us; 292us; 294us; 297us; 299us; 380us; 498us; 616us; 618us; 621us; 624us; 629us; 636us; 639us; 643us; 646us; 650us; 654us; 658us; 662us; 673us; 684us; 686us; 689us; 693us; 697us; 700us; 711us; 715us; 718us; 720us; 763us; 774us; 839us; 852us; 854us; 859us; 862us; 865us; 868us; 871us; 875us; 878us; 883us; 888us; 891us; 897us; 904us; 906us; 912us; 922us; 924us; 926us; 930us; 936us; 938us; 940us; 945us; 949us; 951us; 955us; 959us; 964us; 966us; 970us; 976us; 980us; 984us; 986us; 990us; 994us; 999us; 1004us; 1008us; 1011us; 1014us; 1018us; 1023us; 1030us; 1037us; 1039us; 1041us; 1057us; 1170us; 1178us; 1291us; 1403us; 1407us; 1412us; 1525us; 1527us; 1529us; 1533us; 1536us; 1538us; 1543us; 1546us; 1552us; 1555us; 1557us; 1560us; 1562us; 1564us; 1566us; 1569us; 1826us; 1828us; 1834us; 1839us; 2022us; 2026us; 2030us; 2033us; 2035us; 2047us; 2059us; 2071us; 2074us; 2077us; 2111us; 2115us; 2124us; 2167us; 2170us; 2193us; 2216us; 2239us; 2241us; 2244us; 2247us; 2251us; 2275us; 2282us; 2288us; 2338us; 2340us; 2395us; 2490us; 2599us; 2601us; 2604us; 2609us; 2616us; 2623us; 2625us; 2627us; 2630us; 2633us; 2635us; 2744us; 2867us; 2990us; 2994us; 3126us; 3129us; 3132us; 3135us; 3274us; 3413us; 3594us; 3733us; 3872us; 3876us; 3880us; 3882us; 4021us; 4023us; 4026us; 4030us; 4036us; 4038us; 4040us; 4042us; 4046us; 4048us; 4053us; 4055us; 4057us; 4059us; 4066us; 4073us; 4077us; 4083us; 4087us; 4089us; 4091us; 4093us; 4096us; 4098us; 4103us; 4109us; 4111us; 4220us; 4329us; 4333us; 4339us; 4343us; 4353us; 4363us; 4366us; 4378us; 4412us; 4414us; 4448us; 4455us; 4456us; 4551us; 4646us; 4718us; 4739us; 4744us; 4747us; 4819us; 4824us; 4829us; 4904us; 4909us; 4916us; 4925us; 4928us; 4932us; 4934us; 4941us; 4948us; 4955us; 4961us; 5071us; 5185us; 5518us; 5641us; 5829us; 5837us; 5840us; 5848us; 5991us; 6037us; 6178us; 6193us; 6206us; 6209us; 6221us; 6226us; 6229us; 6239us; 6242us; 6263us; 6272us; 6277us; 6278us; 6290us; 6298us; 6303us; 6313us; 6316us; 6319us; 6322us; 6581us; 6593us; 6599us; 6613us; 6624us; 6632us; 6676us; 6703us; 6705us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 48us; 19us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 31us; 46us; 49us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 3us; 32us; 934us; 935us; 1us; 33us; 1us; 33us; 3us; 33us; 934us; 935us; 2us; 34us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 38us; 1us; 38us; 1us; 38us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 3us; 39us; 53us; 54us; 1us; 39us; 1us; 40us; 1us; 41us; 3us; 42us; 43us; 44us; 2us; 42us; 43us; 1us; 42us; 1us; 42us; 1us; 43us; 3us; 44us; 46us; 49us; 1us; 44us; 1us; 45us; 2us; 46us; 49us; 2us; 48us; 50us; 2us; 48us; 50us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 52us; 5us; 53us; 54us; 55us; 56us; 58us; 5us; 53us; 54us; 55us; 56us; 58us; 2us; 53us; 54us; 2us; 53us; 54us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 3us; 57us; 934us; 935us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 60us; 61us; 48us; 60us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 61us; 48us; 61us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 61us; 3us; 62us; 63us; 144us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 264us; 265us; 266us; 267us; 268us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 264us; 265us; 266us; 267us; 268us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 853us; 854us; 855us; 1us; 91us; 4us; 91us; 853us; 854us; 855us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 174us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 50us; 124us; 125us; 126us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 150us; 2us; 133us; 155us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 515us; 516us; 1us; 137us; 5us; 137us; 517us; 518us; 519us; 520us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 157us; 1us; 142us; 1us; 143us; 3us; 144us; 934us; 935us; 1us; 144us; 3us; 145us; 934us; 935us; 5us; 146us; 147us; 148us; 149us; 150us; 2us; 146us; 147us; 1us; 146us; 1us; 147us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 3us; 152us; 934us; 935us; 3us; 153us; 154us; 155us; 2us; 153us; 154us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 157us; 2us; 159us; 160us; 1us; 160us; 4us; 161us; 162us; 163us; 164us; 3us; 161us; 163us; 166us; 2us; 161us; 163us; 1us; 161us; 1us; 161us; 2us; 162us; 513us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 2us; 166us; 1001us; 1us; 166us; 3us; 167us; 934us; 935us; 1us; 167us; 1us; 167us; 2us; 168us; 169us; 3us; 168us; 934us; 935us; 1us; 168us; 1us; 168us; 1us; 169us; 3us; 169us; 934us; 935us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 2us; 172us; 933us; 1us; 172us; 1us; 173us; 1us; 173us; 4us; 174us; 215us; 221us; 224us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 179us; 1us; 179us; 1us; 179us; 4us; 181us; 182us; 183us; 184us; 1us; 182us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 4us; 185us; 186us; 195us; 196us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 190us; 1us; 190us; 1us; 191us; 3us; 192us; 193us; 194us; 2us; 192us; 193us; 1us; 192us; 1us; 193us; 2us; 194us; 201us; 1us; 194us; 2us; 195us; 196us; 2us; 195us; 196us; 1us; 195us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 201us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 204us; 1us; 204us; 2us; 205us; 206us; 2us; 205us; 206us; 1us; 205us; 1us; 206us; 2us; 207us; 208us; 1us; 208us; 1us; 208us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 2us; 210us; 211us; 2us; 210us; 211us; 2us; 210us; 211us; 1us; 210us; 1us; 210us; 1us; 211us; 2us; 212us; 213us; 1us; 213us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 264us; 265us; 266us; 267us; 268us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 264us; 265us; 266us; 267us; 268us; 1us; 214us; 1us; 215us; 2us; 216us; 222us; 1us; 216us; 1us; 216us; 1us; 217us; 4us; 217us; 853us; 854us; 855us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 228us; 1us; 228us; 1us; 229us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 231us; 1us; 231us; 1us; 233us; 1us; 234us; 1us; 235us; 1us; 236us; 1us; 237us; 1us; 239us; 1us; 239us; 1us; 239us; 1us; 241us; 1us; 241us; 1us; 241us; 3us; 243us; 244us; 245us; 2us; 243us; 244us; 1us; 243us; 1us; 244us; 1us; 244us; 1us; 244us; 1us; 245us; 1us; 246us; 1us; 248us; 1us; 248us; 1us; 249us; 2us; 251us; 252us; 1us; 251us; 1us; 252us; 2us; 253us; 254us; 2us; 253us; 254us; 1us; 253us; 1us; 254us; 1us; 255us; 2us; 256us; 257us; 2us; 256us; 257us; 1us; 256us; 4us; 258us; 259us; 260us; 261us; 5us; 258us; 259us; 260us; 261us; 376us; 3us; 258us; 259us; 260us; 1us; 258us; 1us; 258us; 1us; 259us; 1us; 259us; 1us; 260us; 1us; 261us; 1us; 261us; 1us; 261us; 1us; 262us; 1us; 263us; 5us; 264us; 265us; 266us; 267us; 268us; 5us; 264us; 265us; 266us; 267us; 268us; 4us; 264us; 849us; 934us; 935us; 1us; 264us; 1us; 264us; 1us; 264us; 1us; 265us; 1us; 266us; 1us; 267us; 5us; 268us; 856us; 882us; 883us; 894us; 1us; 268us; 1us; 268us; 3us; 269us; 270us; 271us; 2us; 269us; 270us; 1us; 269us; 1us; 270us; 1us; 271us; 1us; 271us; 2us; 272us; 879us; 2us; 272us; 407us; 1us; 272us; 1us; 273us; 1us; 274us; 1us; 275us; 1us; 276us; 1us; 277us; 3us; 278us; 279us; 280us; 4us; 278us; 280us; 934us; 935us; 1us; 279us; 3us; 279us; 934us; 935us; 1us; 280us; 1us; 281us; 1us; 282us; 2us; 282us; 283us; 1us; 282us; 2us; 283us; 286us; 3us; 283us; 287us; 288us; 1us; 283us; 2us; 283us; 287us; 1us; 283us; 1us; 284us; 1us; 285us; 1us; 285us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 286us; 1us; 287us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 290us; 1us; 291us; 2us; 293us; 444us; 1us; 296us; 2us; 296us; 297us; 2us; 297us; 820us; 2us; 297us; 822us; 1us; 297us; 1us; 297us; 1us; 298us; 1us; 299us; 1us; 299us; 1us; 299us; 1us; 299us; 8us; 300us; 301us; 302us; 303us; 304us; 306us; 307us; 308us; 1us; 300us; 1us; 300us; 7us; 301us; 302us; 303us; 304us; 306us; 307us; 308us; 1us; 301us; 3us; 302us; 307us; 308us; 1us; 302us; 1us; 303us; 1us; 304us; 1us; 304us; 1us; 304us; 1us; 305us; 2us; 305us; 309us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 305us; 1us; 306us; 1us; 306us; 1us; 307us; 1us; 309us; 4us; 309us; 853us; 854us; 855us; 4us; 310us; 853us; 854us; 855us; 1us; 311us; 1us; 311us; 1us; 312us; 1us; 312us; 1us; 312us; 2us; 313us; 326us; 1us; 314us; 2us; 315us; 316us; 1us; 315us; 1us; 315us; 4us; 317us; 318us; 319us; 320us; 4us; 317us; 318us; 319us; 320us; 4us; 317us; 318us; 319us; 320us; 1us; 317us; 1us; 318us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 1us; 320us; 1us; 320us; 1us; 320us; 1us; 321us; 6us; 322us; 323us; 936us; 937us; 939us; 940us; 1us; 322us; 1us; 322us; 1us; 323us; 1us; 323us; 1us; 323us; 5us; 324us; 325us; 327us; 328us; 933us; 1us; 324us; 2us; 325us; 328us; 2us; 325us; 328us; 2us; 325us; 328us; 1us; 326us; 1us; 327us; 1us; 327us; 2us; 329us; 330us; 1us; 329us; 1us; 329us; 2us; 331us; 933us; 1us; 331us; 4us; 331us; 853us; 854us; 855us; 4us; 332us; 853us; 854us; 855us; 1us; 333us; 1us; 334us; 2us; 335us; 336us; 2us; 335us; 1001us; 1us; 335us; 1us; 336us; 1us; 337us; 1us; 337us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 338us; 1us; 339us; 1us; 339us; 1us; 340us; 1us; 341us; 1us; 341us; 1us; 341us; 1us; 341us; 1us; 341us; 2us; 342us; 343us; 1us; 343us; 1us; 343us; 1us; 345us; 3us; 345us; 934us; 935us; 1us; 346us; 3us; 346us; 934us; 935us; 1us; 347us; 1us; 347us; 1us; 347us; 1us; 348us; 1us; 349us; 1us; 349us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 350us; 1us; 351us; 1us; 351us; 1us; 351us; 1us; 352us; 1us; 353us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 358us; 2us; 359us; 362us; 2us; 360us; 363us; 1us; 362us; 1us; 362us; 1us; 363us; 1us; 363us; 2us; 364us; 365us; 5us; 364us; 365us; 367us; 368us; 369us; 1us; 365us; 3us; 366us; 934us; 935us; 4us; 367us; 368us; 369us; 371us; 1us; 367us; 1us; 367us; 1us; 367us; 1us; 368us; 1us; 369us; 1us; 370us; 2us; 370us; 372us; 1us; 370us; 2us; 371us; 372us; 1us; 373us; 1us; 373us; 1us; 374us; 1us; 374us; 1us; 374us; 1us; 376us; 1us; 376us; 1us; 377us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 3us; 378us; 379us; 380us; 2us; 378us; 379us; 1us; 378us; 1us; 379us; 1us; 380us; 2us; 381us; 382us; 2us; 381us; 382us; 1us; 381us; 1us; 382us; 1us; 383us; 1us; 384us; 2us; 384us; 385us; 1us; 385us; 1us; 387us; 2us; 387us; 388us; 1us; 387us; 1us; 387us; 1us; 388us; 1us; 388us; 1us; 389us; 2us; 390us; 391us; 1us; 390us; 1us; 390us; 1us; 391us; 1us; 392us; 1us; 393us; 1us; 394us; 1us; 395us; 1us; 396us; 1us; 397us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 2us; 404us; 457us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 2us; 409us; 411us; 1us; 409us; 1us; 409us; 2us; 410us; 412us; 2us; 410us; 412us; 1us; 410us; 1us; 410us; 1us; 413us; 1us; 414us; 1us; 414us; 1us; 414us; 1us; 415us; 1us; 416us; 1us; 416us; 2us; 417us; 418us; 1us; 418us; 1us; 418us; 6us; 419us; 431us; 432us; 433us; 438us; 440us; 1us; 420us; 1us; 421us; 1us; 421us; 2us; 422us; 423us; 3us; 422us; 424us; 425us; 1us; 422us; 1us; 422us; 1us; 423us; 1us; 425us; 1us; 425us; 5us; 426us; 427us; 428us; 429us; 430us; 2us; 426us; 428us; 1us; 426us; 1us; 427us; 1us; 428us; 2us; 429us; 513us; 1us; 429us; 1us; 430us; 6us; 431us; 432us; 432us; 433us; 438us; 440us; 6us; 431us; 432us; 433us; 433us; 438us; 440us; 6us; 431us; 432us; 433us; 437us; 438us; 440us; 6us; 431us; 432us; 433us; 438us; 438us; 440us; 6us; 431us; 432us; 433us; 438us; 439us; 440us; 6us; 431us; 432us; 433us; 438us; 440us; 440us; 6us; 431us; 432us; 433us; 438us; 440us; 560us; 7us; 431us; 432us; 433us; 438us; 440us; 561us; 562us; 1us; 431us; 1us; 431us; 1us; 432us; 1us; 433us; 2us; 434us; 437us; 2us; 435us; 439us; 1us; 436us; 1us; 437us; 1us; 438us; 1us; 439us; 1us; 440us; 2us; 441us; 442us; 1us; 441us; 2us; 442us; 1001us; 1us; 442us; 1us; 443us; 4us; 443us; 972us; 974us; 975us; 1us; 443us; 7us; 443us; 478us; 479us; 482us; 484us; 487us; 489us; 5us; 444us; 445us; 446us; 447us; 463us; 3us; 445us; 446us; 447us; 1us; 445us; 1us; 446us; 1us; 446us; 1us; 447us; 1us; 447us; 1us; 448us; 3us; 448us; 896us; 897us; 1us; 449us; 9us; 450us; 468us; 469us; 470us; 471us; 936us; 937us; 939us; 940us; 1us; 450us; 1us; 450us; 1us; 451us; 4us; 452us; 453us; 454us; 455us; 1us; 452us; 1us; 453us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 456us; 1us; 457us; 1us; 457us; 1us; 458us; 1us; 458us; 1us; 458us; 1us; 459us; 1us; 459us; 1us; 459us; 1us; 460us; 1us; 460us; 1us; 460us; 1us; 461us; 1us; 462us; 2us; 462us; 957us; 1us; 462us; 1us; 463us; 1us; 464us; 1us; 465us; 1us; 466us; 1us; 467us; 8us; 468us; 469us; 470us; 471us; 936us; 937us; 939us; 940us; 2us; 468us; 469us; 1us; 468us; 1us; 469us; 3us; 470us; 513us; 937us; 2us; 470us; 937us; 1us; 471us; 4us; 472us; 473us; 474us; 475us; 4us; 472us; 473us; 474us; 475us; 4us; 472us; 473us; 480us; 486us; 1us; 472us; 1us; 473us; 2us; 474us; 513us; 1us; 474us; 1us; 475us; 7us; 476us; 478us; 479us; 482us; 484us; 487us; 489us; 7us; 478us; 479us; 479us; 482us; 484us; 487us; 489us; 7us; 478us; 479us; 482us; 483us; 484us; 487us; 489us; 7us; 478us; 479us; 482us; 484us; 484us; 487us; 489us; 7us; 478us; 479us; 482us; 484us; 486us; 487us; 489us; 7us; 478us; 479us; 482us; 484us; 487us; 487us; 489us; 7us; 478us; 479us; 482us; 484us; 487us; 488us; 489us; 6us; 478us; 479us; 482us; 484us; 487us; 489us; 7us; 478us; 479us; 482us; 484us; 487us; 489us; 489us; 7us; 478us; 479us; 482us; 484us; 487us; 489us; 493us; 8us; 478us; 479us; 482us; 484us; 487us; 489us; 495us; 496us; 14us; 478us; 479us; 482us; 484us; 487us; 489us; 556us; 557us; 752us; 753us; 754us; 755us; 756us; 757us; 7us; 478us; 479us; 482us; 484us; 487us; 489us; 625us; 1us; 478us; 1us; 478us; 1us; 479us; 2us; 480us; 486us; 2us; 481us; 488us; 1us; 482us; 1us; 482us; 1us; 483us; 1us; 484us; 1us; 485us; 1us; 486us; 1us; 487us; 1us; 488us; 1us; 489us; 1us; 490us; 2us; 491us; 492us; 1us; 491us; 2us; 492us; 1001us; 1us; 492us; 3us; 493us; 934us; 935us; 1us; 493us; 1us; 495us; 2us; 496us; 1001us; 1us; 496us; 2us; 497us; 498us; 2us; 497us; 498us; 1us; 497us; 1us; 498us; 1us; 499us; 1us; 500us; 1us; 500us; 1us; 500us; 48us; 501us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 2us; 502us; 503us; 1us; 502us; 2us; 504us; 505us; 1us; 504us; 1us; 504us; 1us; 506us; 1us; 506us; 52us; 507us; 508us; 509us; 510us; 511us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 55us; 507us; 508us; 509us; 510us; 511us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 694us; 695us; 698us; 55us; 507us; 508us; 509us; 510us; 511us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 748us; 749us; 750us; 2us; 507us; 508us; 1us; 507us; 1us; 510us; 1us; 510us; 1us; 511us; 1us; 511us; 1us; 511us; 1us; 511us; 5us; 512us; 517us; 518us; 519us; 520us; 1us; 513us; 2us; 513us; 543us; 2us; 513us; 546us; 2us; 513us; 551us; 2us; 513us; 554us; 2us; 513us; 556us; 2us; 513us; 676us; 2us; 513us; 690us; 2us; 513us; 714us; 2us; 513us; 718us; 2us; 513us; 723us; 3us; 513us; 723us; 937us; 2us; 513us; 738us; 1us; 514us; 2us; 515us; 516us; 2us; 515us; 516us; 1us; 515us; 1us; 516us; 4us; 517us; 518us; 519us; 520us; 1us; 517us; 1us; 518us; 2us; 519us; 520us; 1us; 519us; 1us; 520us; 1us; 521us; 1us; 522us; 1us; 523us; 2us; 524us; 525us; 2us; 524us; 525us; 1us; 524us; 1us; 525us; 3us; 526us; 527us; 528us; 3us; 526us; 527us; 528us; 1us; 526us; 1us; 527us; 1us; 528us; 1us; 528us; 3us; 529us; 530us; 531us; 49us; 529us; 530us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 529us; 1us; 530us; 1us; 531us; 1us; 532us; 48us; 532us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 2us; 533us; 534us; 48us; 533us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 535us; 1us; 535us; 2us; 536us; 537us; 1us; 536us; 6us; 538us; 539us; 540us; 541us; 542us; 543us; 51us; 538us; 539us; 540us; 541us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 3us; 538us; 539us; 540us; 2us; 538us; 539us; 1us; 538us; 1us; 539us; 1us; 540us; 1us; 540us; 1us; 541us; 1us; 542us; 1us; 543us; 15us; 544us; 545us; 546us; 547us; 548us; 549us; 550us; 551us; 552us; 553us; 554us; 555us; 556us; 557us; 565us; 6us; 544us; 545us; 546us; 547us; 548us; 565us; 4us; 544us; 545us; 546us; 547us; 2us; 544us; 545us; 1us; 544us; 1us; 545us; 1us; 546us; 1us; 547us; 1us; 548us; 5us; 549us; 550us; 551us; 552us; 553us; 4us; 549us; 550us; 551us; 552us; 2us; 549us; 550us; 1us; 549us; 1us; 550us; 1us; 551us; 1us; 552us; 1us; 553us; 1us; 554us; 1us; 554us; 1us; 554us; 1us; 555us; 1us; 556us; 2us; 557us; 1053us; 1us; 558us; 48us; 558us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 559us; 48us; 559us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 560us; 1us; 560us; 1us; 560us; 1us; 560us; 1us; 560us; 1us; 560us; 2us; 561us; 562us; 2us; 561us; 562us; 2us; 561us; 562us; 2us; 561us; 562us; 2us; 561us; 562us; 1us; 561us; 1us; 562us; 1us; 563us; 1us; 563us; 1us; 563us; 1us; 563us; 1us; 563us; 1us; 564us; 1us; 564us; 1us; 564us; 1us; 565us; 1us; 565us; 1us; 566us; 48us; 566us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 1us; 567us; 1us; 567us; 48us; 568us; 569us; 570us; 571us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 631us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 635us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 639us; 646us; 647us; 49us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 642us; 643us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 644us; 646us; 647us; 47us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 647us; 50us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 694us; 695us; 698us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 694us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 696us; 51us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 748us; 749us; 750us; 752us; 51us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 748us; 749us; 750us; 756us; 49us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 748us; 749us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 749us; 48us; 568us; 569us; 570us; 571us; 574us; 575us; 576us; 577us; 578us; 579us; 580us; 581us; 582us; 583us; 584us; 585us; 586us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 646us; 647us; 756us; 1us; 568us; 1us; 568us; 1us; 569us; 1us; 569us; 1us; 570us; 1us; 570us; 1us; 571us; 2us; 572us; 615us; 1us; 572us; 1us; 572us; 3us; 573us; 644us; 645us; 5us; 573us; 644us; 645us; 678us; 679us; 2us; 574us; 595us; 2us; 575us; 596us; 2us; 576us; 597us; 2us; 577us; 598us; 2us; 578us; 599us; 2us; 579us; 600us; 2us; 580us; 601us; 2us; 581us; 602us; 2us; 582us; 603us; 2us; 583us; 604us; 3us; 584us; 585us; 605us; 1us; 585us; 2us; 586us; 606us; 2us; 587us; 607us; 2us; 588us; 608us; 2us; 589us; 609us; 2us; 590us; 610us; 2us; 591us; 611us; 2us; 592us; 612us; 2us; 593us; 613us; 2us; 594us; 614us; 1us; 595us; 1us; 596us; 1us; 597us; 1us; 598us; 1us; 599us; 1us; 600us; 1us; 601us; 1us; 602us; 1us; 603us; 1us; 604us; 1us; 605us; 1us; 606us; 1us; 607us; 1us; 608us; 1us; 609us; 1us; 610us; 1us; 611us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 616us; 1us; 617us; 1us; 617us; 1us; 617us; 1us; 618us; 1us; 618us; 2us; 619us; 620us; 2us; 619us; 620us; 1us; 619us; 1us; 620us; 1us; 621us; 2us; 622us; 623us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 5us; 626us; 627us; 628us; 629us; 630us; 4us; 626us; 627us; 628us; 629us; 2us; 627us; 628us; 1us; 627us; 1us; 628us; 1us; 629us; 1us; 630us; 1us; 631us; 1us; 633us; 1us; 633us; 1us; 634us; 1us; 634us; 1us; 635us; 2us; 636us; 637us; 2us; 636us; 637us; 2us; 636us; 637us; 1us; 636us; 1us; 637us; 1us; 639us; 2us; 640us; 641us; 2us; 640us; 641us; 2us; 640us; 641us; 1us; 640us; 1us; 641us; 2us; 642us; 643us; 1us; 642us; 1us; 643us; 2us; 644us; 645us; 1us; 645us; 2us; 646us; 647us; 1us; 646us; 1us; 648us; 2us; 648us; 951us; 1us; 648us; 1us; 649us; 2us; 649us; 947us; 1us; 649us; 1us; 650us; 2us; 650us; 950us; 1us; 650us; 1us; 651us; 2us; 651us; 963us; 1us; 651us; 1us; 652us; 2us; 652us; 958us; 1us; 652us; 1us; 653us; 2us; 653us; 959us; 1us; 653us; 3us; 654us; 655us; 656us; 7us; 654us; 655us; 656us; 793us; 794us; 795us; 796us; 2us; 654us; 655us; 6us; 654us; 655us; 793us; 794us; 795us; 796us; 2us; 654us; 655us; 4us; 654us; 655us; 794us; 795us; 1us; 654us; 3us; 654us; 794us; 795us; 1us; 655us; 1us; 656us; 1us; 657us; 1us; 657us; 1us; 658us; 1us; 658us; 2us; 659us; 660us; 6us; 659us; 660us; 769us; 773us; 774us; 775us; 1us; 660us; 6us; 661us; 664us; 665us; 666us; 668us; 671us; 1us; 662us; 6us; 662us; 664us; 665us; 666us; 668us; 671us; 6us; 663us; 664us; 665us; 666us; 668us; 671us; 6us; 664us; 664us; 665us; 666us; 668us; 671us; 6us; 664us; 665us; 665us; 666us; 668us; 671us; 6us; 664us; 665us; 666us; 667us; 668us; 671us; 6us; 664us; 665us; 666us; 668us; 671us; 891us; 1us; 664us; 1us; 665us; 1us; 666us; 1us; 666us; 1us; 667us; 2us; 667us; 941us; 1us; 668us; 1us; 668us; 1us; 669us; 1us; 669us; 1us; 669us; 1us; 670us; 2us; 670us; 957us; 1us; 670us; 1us; 671us; 1us; 671us; 1us; 672us; 1us; 673us; 4us; 674us; 675us; 676us; 677us; 2us; 674us; 675us; 1us; 674us; 1us; 675us; 1us; 676us; 1us; 677us; 2us; 678us; 679us; 2us; 678us; 679us; 1us; 678us; 1us; 679us; 1us; 680us; 1us; 681us; 1us; 683us; 6us; 684us; 685us; 936us; 937us; 939us; 940us; 1us; 684us; 1us; 684us; 1us; 684us; 1us; 684us; 1us; 685us; 1us; 685us; 6us; 686us; 687us; 688us; 689us; 690us; 691us; 2us; 686us; 687us; 1us; 686us; 1us; 687us; 2us; 688us; 689us; 1us; 688us; 1us; 689us; 1us; 690us; 1us; 691us; 2us; 692us; 693us; 1us; 692us; 1us; 692us; 2us; 694us; 695us; 1us; 696us; 1us; 697us; 1us; 699us; 1us; 700us; 1us; 701us; 1us; 702us; 1us; 703us; 1us; 704us; 1us; 705us; 1us; 706us; 1us; 707us; 4us; 708us; 709us; 710us; 711us; 2us; 708us; 709us; 1us; 708us; 1us; 709us; 1us; 710us; 1us; 710us; 1us; 711us; 4us; 712us; 713us; 714us; 715us; 5us; 712us; 713us; 714us; 715us; 966us; 2us; 712us; 713us; 1us; 712us; 1us; 713us; 1us; 714us; 1us; 715us; 4us; 716us; 717us; 718us; 719us; 2us; 716us; 717us; 1us; 716us; 1us; 717us; 1us; 718us; 1us; 719us; 9us; 720us; 721us; 722us; 723us; 724us; 725us; 726us; 727us; 728us; 14us; 720us; 721us; 722us; 723us; 724us; 725us; 726us; 727us; 728us; 733us; 936us; 937us; 939us; 940us; 13us; 720us; 721us; 722us; 723us; 724us; 725us; 726us; 727us; 728us; 936us; 937us; 939us; 940us; 1us; 720us; 2us; 721us; 722us; 1us; 721us; 1us; 722us; 1us; 723us; 2us; 723us; 937us; 1us; 724us; 1us; 725us; 1us; 726us; 1us; 727us; 1us; 728us; 1us; 729us; 1us; 729us; 1us; 729us; 1us; 729us; 1us; 729us; 1us; 729us; 1us; 730us; 1us; 731us; 1us; 732us; 2us; 732us; 735us; 2us; 733us; 734us; 1us; 733us; 1us; 734us; 1us; 734us; 5us; 736us; 737us; 738us; 739us; 740us; 2us; 736us; 737us; 1us; 736us; 1us; 737us; 1us; 738us; 1us; 739us; 1us; 740us; 1us; 741us; 1us; 742us; 1us; 743us; 1us; 744us; 1us; 746us; 1us; 747us; 3us; 748us; 749us; 750us; 1us; 749us; 1us; 750us; 1us; 751us; 1us; 751us; 3us; 752us; 753us; 754us; 1us; 753us; 1us; 754us; 1us; 755us; 2us; 756us; 757us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 758us; 1us; 758us; 2us; 758us; 759us; 1us; 758us; 1us; 758us; 1us; 759us; 1us; 762us; 1us; 764us; 1us; 764us; 1us; 764us; 1us; 764us; 2us; 766us; 767us; 1us; 766us; 5us; 767us; 856us; 882us; 883us; 894us; 1us; 767us; 1us; 768us; 1us; 768us; 1us; 768us; 1us; 768us; 2us; 768us; 784us; 1us; 768us; 1us; 769us; 1us; 769us; 2us; 769us; 784us; 1us; 769us; 3us; 770us; 771us; 772us; 2us; 771us; 772us; 1us; 772us; 2us; 772us; 784us; 1us; 772us; 1us; 773us; 1us; 773us; 2us; 773us; 784us; 1us; 773us; 2us; 774us; 775us; 1us; 774us; 1us; 774us; 1us; 775us; 2us; 775us; 784us; 1us; 775us; 1us; 775us; 1us; 776us; 2us; 776us; 784us; 2us; 778us; 781us; 2us; 779us; 780us; 1us; 780us; 1us; 781us; 3us; 782us; 934us; 935us; 1us; 783us; 1us; 784us; 5us; 786us; 787us; 788us; 789us; 790us; 3us; 786us; 787us; 788us; 1us; 786us; 1us; 788us; 1us; 790us; 2us; 791us; 792us; 1us; 791us; 1us; 791us; 1us; 791us; 1us; 792us; 1us; 792us; 1us; 794us; 1us; 797us; 2us; 799us; 801us; 1us; 799us; 1us; 800us; 1us; 800us; 1us; 800us; 1us; 801us; 1us; 801us; 1us; 802us; 1us; 802us; 1us; 804us; 1us; 804us; 1us; 805us; 1us; 805us; 1us; 806us; 4us; 806us; 853us; 854us; 855us; 1us; 806us; 1us; 806us; 1us; 806us; 1us; 807us; 1us; 808us; 2us; 809us; 810us; 2us; 809us; 810us; 2us; 809us; 810us; 1us; 809us; 1us; 810us; 6us; 811us; 812us; 813us; 814us; 815us; 816us; 5us; 811us; 812us; 813us; 814us; 815us; 4us; 811us; 812us; 813us; 814us; 2us; 811us; 812us; 1us; 811us; 1us; 812us; 1us; 813us; 1us; 813us; 1us; 814us; 1us; 815us; 1us; 815us; 1us; 816us; 1us; 816us; 1us; 817us; 1us; 817us; 1us; 818us; 1us; 818us; 1us; 818us; 2us; 819us; 820us; 1us; 820us; 2us; 821us; 822us; 1us; 822us; 1us; 824us; 1us; 824us; 2us; 825us; 826us; 1us; 825us; 1us; 825us; 2us; 827us; 828us; 1us; 827us; 1us; 827us; 2us; 829us; 830us; 1us; 829us; 1us; 829us; 3us; 831us; 832us; 833us; 5us; 831us; 833us; 853us; 854us; 855us; 1us; 831us; 4us; 831us; 853us; 854us; 855us; 1us; 832us; 1us; 832us; 1us; 832us; 4us; 832us; 853us; 854us; 855us; 5us; 834us; 836us; 853us; 854us; 855us; 1us; 834us; 4us; 834us; 853us; 854us; 855us; 1us; 835us; 1us; 835us; 1us; 835us; 4us; 835us; 853us; 854us; 855us; 2us; 837us; 838us; 1us; 837us; 1us; 837us; 1us; 839us; 1us; 839us; 6us; 840us; 842us; 843us; 853us; 854us; 855us; 1us; 840us; 1us; 840us; 1us; 841us; 1us; 841us; 1us; 842us; 1us; 842us; 6us; 844us; 845us; 846us; 853us; 854us; 855us; 1us; 844us; 1us; 844us; 1us; 845us; 1us; 845us; 3us; 849us; 934us; 935us; 1us; 850us; 2us; 850us; 858us; 3us; 850us; 858us; 875us; 2us; 851us; 852us; 4us; 851us; 852us; 895us; 898us; 1us; 851us; 1us; 851us; 6us; 853us; 854us; 855us; 870us; 871us; 872us; 7us; 853us; 854us; 855us; 884us; 885us; 886us; 887us; 1us; 853us; 2us; 853us; 870us; 1us; 854us; 2us; 854us; 871us; 1us; 854us; 2us; 854us; 871us; 1us; 855us; 2us; 855us; 872us; 5us; 856us; 873us; 882us; 883us; 894us; 4us; 856us; 882us; 883us; 894us; 1us; 856us; 2us; 856us; 873us; 1us; 856us; 2us; 856us; 873us; 1us; 856us; 2us; 856us; 873us; 1us; 857us; 1us; 858us; 2us; 858us; 875us; 1us; 858us; 2us; 858us; 875us; 3us; 859us; 876us; 881us; 2us; 859us; 881us; 1us; 859us; 2us; 859us; 876us; 1us; 859us; 2us; 859us; 876us; 4us; 860us; 861us; 862us; 863us; 1us; 860us; 3us; 861us; 862us; 863us; 1us; 861us; 2us; 862us; 863us; 1us; 862us; 1us; 863us; 1us; 863us; 1us; 864us; 1us; 864us; 1us; 864us; 3us; 864us; 865us; 866us; 4us; 865us; 866us; 901us; 902us; 2us; 865us; 866us; 1us; 865us; 1us; 866us; 6us; 868us; 869us; 877us; 878us; 896us; 897us; 4us; 868us; 869us; 896us; 897us; 1us; 869us; 2us; 869us; 878us; 1us; 869us; 2us; 869us; 878us; 1us; 874us; 1us; 879us; 3us; 879us; 896us; 897us; 1us; 880us; 1us; 881us; 3us; 882us; 883us; 894us; 2us; 882us; 883us; 5us; 882us; 883us; 908us; 909us; 910us; 1us; 882us; 1us; 883us; 5us; 884us; 885us; 886us; 887us; 888us; 5us; 884us; 885us; 886us; 887us; 888us; 3us; 884us; 885us; 886us; 2us; 884us; 885us; 1us; 884us; 1us; 885us; 1us; 886us; 1us; 887us; 1us; 888us; 1us; 889us; 1us; 890us; 1us; 891us; 1us; 892us; 1us; 893us; 1us; 894us; 1us; 894us; 1us; 895us; 2us; 896us; 897us; 4us; 896us; 897us; 934us; 935us; 1us; 897us; 1us; 898us; 1us; 898us; 1us; 899us; 1us; 900us; 1us; 900us; 7us; 901us; 902us; 903us; 904us; 905us; 906us; 907us; 3us; 901us; 902us; 903us; 3us; 901us; 902us; 903us; 2us; 901us; 902us; 1us; 901us; 1us; 902us; 1us; 903us; 3us; 904us; 905us; 911us; 1us; 904us; 1us; 905us; 1us; 906us; 1us; 907us; 3us; 908us; 909us; 910us; 2us; 909us; 910us; 1us; 909us; 1us; 911us; 1us; 912us; 2us; 914us; 915us; 3us; 914us; 925us; 926us; 1us; 914us; 1us; 915us; 1us; 915us; 3us; 916us; 934us; 935us; 1us; 917us; 1us; 918us; 3us; 918us; 925us; 926us; 1us; 918us; 2us; 919us; 920us; 1us; 920us; 1us; 920us; 1us; 921us; 2us; 922us; 923us; 1us; 923us; 1us; 924us; 3us; 925us; 925us; 926us; 3us; 925us; 926us; 926us; 3us; 925us; 926us; 927us; 1us; 925us; 1us; 926us; 1us; 927us; 1us; 928us; 1us; 928us; 1us; 929us; 1us; 930us; 2us; 930us; 944us; 1us; 930us; 1us; 931us; 1us; 932us; 1us; 933us; 2us; 934us; 935us; 1us; 934us; 1us; 935us; 4us; 936us; 937us; 939us; 940us; 1us; 936us; 1us; 936us; 1us; 937us; 1us; 937us; 1us; 938us; 3us; 939us; 940us; 969us; 3us; 939us; 940us; 969us; 1us; 939us; 1us; 940us; 1us; 940us; 1us; 940us; 1us; 941us; 1us; 942us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 946us; 1us; 947us; 1us; 948us; 1us; 949us; 1us; 950us; 1us; 951us; 1us; 952us; 1us; 953us; 1us; 954us; 1us; 955us; 1us; 956us; 1us; 957us; 1us; 958us; 1us; 959us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 2us; 964us; 965us; 1us; 965us; 1us; 966us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 971us; 3us; 972us; 974us; 975us; 1us; 973us; 2us; 974us; 975us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 1us; 979us; 2us; 980us; 981us; 1us; 981us; 1us; 982us; 1us; 982us; 2us; 984us; 986us; 2us; 985us; 987us; 1us; 986us; 1us; 987us; 1us; 988us; 1us; 989us; 1us; 990us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 995us; 1us; 997us; 1us; 999us; 1us; 1001us; 1us; 1003us; 1us; 1007us; 1us; 1009us; 1us; 1011us; 1us; 1012us; 1us; 1013us; 1us; 1014us; 1us; 1015us; 1us; 1016us; 1us; 1017us; 1us; 1018us; 1us; 1019us; 1us; 1020us; 1us; 1021us; 1us; 1022us; 1us; 1023us; 1us; 1024us; 1us; 1026us; 1us; 1028us; 2us; 1028us; 1048us; 1us; 1028us; 1us; 1029us; 1us; 1030us; 1us; 1031us; 2us; 1031us; 1049us; 1us; 1031us; 1us; 1032us; 1us; 1033us; 1us; 1034us; 1us; 1034us; 1us; 1035us; 1us; 1036us; 1us; 1037us; 1us; 1037us; 1us; 1038us; 1us; 1039us; 1us; 1040us; 1us; 1040us; 1us; 1041us; 1us; 1042us; 1us; 1043us; 1us; 1044us; 1us; 1045us; 1us; 1046us; 1us; 1047us; 1us; 1048us; 1us; 1049us; 1us; 1050us; 1us; 1051us; 1us; 1052us; 1us; 1053us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 129us; 131us; 134us; 136us; 138us; 140us; 142us; 144us; 147us; 149us; 151us; 154us; 156us; 158us; 160us; 164us; 166us; 168us; 170us; 172us; 176us; 178us; 180us; 184us; 187us; 189us; 192us; 194us; 196us; 198us; 200us; 207us; 214us; 218us; 220us; 222us; 224us; 228us; 231us; 233us; 235us; 237us; 241us; 243us; 245us; 248us; 251us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 272us; 278us; 281us; 284us; 286us; 288us; 290us; 292us; 294us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 321us; 370us; 372us; 421us; 423us; 427us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 449us; 452us; 454us; 456us; 459us; 461us; 463us; 465us; 469us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 497us; 501us; 504us; 506us; 508us; 510us; 512us; 515us; 518us; 520us; 522us; 525us; 528us; 530us; 532us; 535us; 538us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 560us; 573us; 581us; 594us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 614us; 619us; 621us; 626us; 628us; 630us; 634us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 652us; 655us; 658us; 660us; 662us; 665us; 667us; 669us; 671us; 674us; 676us; 678us; 680us; 682us; 684us; 686us; 689us; 691us; 693us; 695us; 698us; 700us; 703us; 705us; 708us; 710us; 712us; 714us; 716us; 728us; 739us; 742us; 744us; 746us; 750us; 753us; 755us; 757us; 759us; 762us; 764us; 766us; 768us; 779us; 789us; 840us; 843us; 845us; 847us; 849us; 854us; 856us; 859us; 861us; 863us; 866us; 869us; 871us; 873us; 875us; 877us; 884us; 891us; 893us; 897us; 899us; 905us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 924us; 926us; 928us; 932us; 934us; 938us; 944us; 947us; 949us; 951us; 954us; 956us; 958us; 960us; 962us; 966us; 970us; 973us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 990us; 992us; 997us; 1001us; 1004us; 1006us; 1008us; 1011us; 1013us; 1015us; 1017us; 1019us; 1021us; 1024us; 1026us; 1030us; 1032us; 1034us; 1037us; 1041us; 1043us; 1045us; 1047us; 1051us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1068us; 1070us; 1072us; 1074us; 1079us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1099us; 1104us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1129us; 1132us; 1135us; 1138us; 1141us; 1143us; 1145us; 1147us; 1149us; 1151us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1167us; 1170us; 1172us; 1174us; 1177us; 1179us; 1182us; 1185us; 1187us; 1189us; 1192us; 1195us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1220us; 1223us; 1225us; 1227us; 1230us; 1232us; 1234us; 1236us; 1238us; 1240us; 1242us; 1244us; 1246us; 1249us; 1252us; 1255us; 1257us; 1259us; 1261us; 1264us; 1266us; 1278us; 1295us; 1307us; 1324us; 1326us; 1328us; 1331us; 1333us; 1335us; 1337us; 1342us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1426us; 1428us; 1430us; 1432us; 1434us; 1436us; 1438us; 1440us; 1442us; 1444us; 1446us; 1448us; 1450us; 1452us; 1454us; 1456us; 1460us; 1463us; 1465us; 1467us; 1469us; 1471us; 1473us; 1475us; 1477us; 1479us; 1481us; 1484us; 1486us; 1488us; 1491us; 1494us; 1496us; 1498us; 1500us; 1503us; 1506us; 1508us; 1513us; 1519us; 1523us; 1525us; 1527us; 1529us; 1531us; 1533us; 1535us; 1537us; 1539us; 1541us; 1543us; 1549us; 1555us; 1560us; 1562us; 1564us; 1566us; 1568us; 1570us; 1572us; 1578us; 1580us; 1582us; 1586us; 1589us; 1591us; 1593us; 1595us; 1597us; 1600us; 1603us; 1605us; 1607us; 1609us; 1611us; 1613us; 1615us; 1619us; 1624us; 1626us; 1630us; 1632us; 1634us; 1636us; 1639us; 1641us; 1644us; 1648us; 1650us; 1653us; 1655us; 1657us; 1659us; 1661us; 1663us; 1665us; 1667us; 1669us; 1671us; 1673us; 1675us; 1677us; 1679us; 1681us; 1683us; 1686us; 1688us; 1691us; 1694us; 1697us; 1699us; 1701us; 1703us; 1705us; 1707us; 1709us; 1711us; 1720us; 1722us; 1724us; 1732us; 1734us; 1738us; 1740us; 1742us; 1744us; 1746us; 1748us; 1750us; 1753us; 1755us; 1757us; 1759us; 1761us; 1763us; 1765us; 1767us; 1769us; 1771us; 1776us; 1781us; 1783us; 1785us; 1787us; 1789us; 1791us; 1794us; 1796us; 1799us; 1801us; 1803us; 1808us; 1813us; 1818us; 1820us; 1822us; 1824us; 1826us; 1828us; 1830us; 1832us; 1834us; 1836us; 1838us; 1840us; 1847us; 1849us; 1851us; 1853us; 1855us; 1857us; 1863us; 1865us; 1868us; 1871us; 1874us; 1876us; 1878us; 1880us; 1883us; 1885us; 1887us; 1890us; 1892us; 1897us; 1902us; 1904us; 1906us; 1909us; 1912us; 1914us; 1916us; 1918us; 1920us; 1922us; 1924us; 1926us; 1928us; 1930us; 1932us; 1934us; 1936us; 1938us; 1940us; 1942us; 1944us; 1946us; 1949us; 1951us; 1953us; 1955us; 1959us; 1961us; 1965us; 1967us; 1969us; 1971us; 1973us; 1975us; 1977us; 1979us; 1981us; 1983us; 1985us; 1987us; 1989us; 1991us; 1993us; 1995us; 1997us; 1999us; 2001us; 2003us; 2005us; 2007us; 2009us; 2011us; 2013us; 2015us; 2017us; 2019us; 2022us; 2025us; 2027us; 2029us; 2031us; 2033us; 2036us; 2042us; 2044us; 2048us; 2053us; 2055us; 2057us; 2059us; 2061us; 2063us; 2065us; 2068us; 2070us; 2073us; 2075us; 2077us; 2079us; 2081us; 2083us; 2085us; 2087us; 2089us; 2093us; 2097us; 2101us; 2105us; 2108us; 2110us; 2112us; 2114us; 2117us; 2120us; 2122us; 2124us; 2126us; 2128us; 2131us; 2133us; 2135us; 2138us; 2140us; 2142us; 2144us; 2146us; 2148us; 2151us; 2153us; 2155us; 2157us; 2159us; 2161us; 2163us; 2165us; 2167us; 2169us; 2171us; 2173us; 2175us; 2177us; 2179us; 2181us; 2183us; 2186us; 2188us; 2190us; 2192us; 2194us; 2197us; 2199us; 2201us; 2204us; 2207us; 2209us; 2211us; 2213us; 2215us; 2217us; 2219us; 2221us; 2223us; 2225us; 2228us; 2230us; 2232us; 2239us; 2241us; 2243us; 2245us; 2248us; 2252us; 2254us; 2256us; 2258us; 2260us; 2262us; 2268us; 2271us; 2273us; 2275us; 2277us; 2280us; 2282us; 2284us; 2291us; 2298us; 2305us; 2312us; 2319us; 2326us; 2333us; 2341us; 2343us; 2345us; 2347us; 2349us; 2352us; 2355us; 2357us; 2359us; 2361us; 2363us; 2365us; 2368us; 2370us; 2373us; 2375us; 2377us; 2382us; 2384us; 2392us; 2398us; 2402us; 2404us; 2406us; 2408us; 2410us; 2412us; 2414us; 2418us; 2420us; 2430us; 2432us; 2434us; 2436us; 2441us; 2443us; 2445us; 2447us; 2449us; 2451us; 2453us; 2455us; 2457us; 2459us; 2461us; 2463us; 2465us; 2467us; 2469us; 2471us; 2473us; 2475us; 2477us; 2479us; 2482us; 2484us; 2486us; 2488us; 2490us; 2492us; 2494us; 2503us; 2506us; 2508us; 2510us; 2514us; 2517us; 2519us; 2524us; 2529us; 2534us; 2536us; 2538us; 2541us; 2543us; 2545us; 2553us; 2561us; 2569us; 2577us; 2585us; 2593us; 2601us; 2608us; 2616us; 2624us; 2633us; 2648us; 2656us; 2658us; 2660us; 2662us; 2665us; 2668us; 2670us; 2672us; 2674us; 2676us; 2678us; 2680us; 2682us; 2684us; 2686us; 2688us; 2691us; 2693us; 2696us; 2698us; 2702us; 2704us; 2706us; 2709us; 2711us; 2714us; 2717us; 2719us; 2721us; 2723us; 2725us; 2727us; 2729us; 2778us; 2781us; 2783us; 2786us; 2788us; 2790us; 2792us; 2794us; 2847us; 2903us; 2959us; 2962us; 2964us; 2966us; 2968us; 2970us; 2972us; 2974us; 2976us; 2982us; 2984us; 2987us; 2990us; 2993us; 2996us; 2999us; 3002us; 3005us; 3008us; 3011us; 3014us; 3018us; 3021us; 3023us; 3026us; 3029us; 3031us; 3033us; 3038us; 3040us; 3042us; 3045us; 3047us; 3049us; 3051us; 3053us; 3055us; 3058us; 3061us; 3063us; 3065us; 3069us; 3073us; 3075us; 3077us; 3079us; 3081us; 3085us; 3135us; 3137us; 3139us; 3141us; 3143us; 3192us; 3195us; 3244us; 3246us; 3248us; 3251us; 3253us; 3260us; 3312us; 3316us; 3319us; 3321us; 3323us; 3325us; 3327us; 3329us; 3331us; 3333us; 3349us; 3356us; 3361us; 3364us; 3366us; 3368us; 3370us; 3372us; 3374us; 3380us; 3385us; 3388us; 3390us; 3392us; 3394us; 3396us; 3398us; 3400us; 3402us; 3404us; 3406us; 3408us; 3411us; 3413us; 3462us; 3464us; 3513us; 3515us; 3517us; 3519us; 3521us; 3523us; 3525us; 3528us; 3531us; 3534us; 3537us; 3540us; 3542us; 3544us; 3546us; 3548us; 3550us; 3552us; 3554us; 3556us; 3558us; 3560us; 3562us; 3564us; 3566us; 3615us; 3617us; 3619us; 3668us; 3717us; 3766us; 3815us; 3864us; 3913us; 3962us; 4011us; 4060us; 4109us; 4158us; 4207us; 4256us; 4305us; 4354us; 4403us; 4452us; 4501us; 4550us; 4599us; 4648us; 4697us; 4746us; 4795us; 4845us; 4894us; 4942us; 4991us; 5042us; 5091us; 5140us; 5192us; 5244us; 5294us; 5343us; 5392us; 5394us; 5396us; 5398us; 5400us; 5402us; 5404us; 5406us; 5409us; 5411us; 5413us; 5417us; 5423us; 5426us; 5429us; 5432us; 5435us; 5438us; 5441us; 5444us; 5447us; 5450us; 5453us; 5457us; 5459us; 5462us; 5465us; 5468us; 5471us; 5474us; 5477us; 5480us; 5483us; 5486us; 5488us; 5490us; 5492us; 5494us; 5496us; 5498us; 5500us; 5502us; 5504us; 5506us; 5508us; 5510us; 5512us; 5514us; 5516us; 5518us; 5520us; 5522us; 5524us; 5526us; 5528us; 5530us; 5532us; 5534us; 5536us; 5538us; 5541us; 5544us; 5546us; 5548us; 5550us; 5553us; 5555us; 5557us; 5559us; 5561us; 5567us; 5572us; 5575us; 5577us; 5579us; 5581us; 5583us; 5585us; 5587us; 5589us; 5591us; 5593us; 5595us; 5598us; 5601us; 5604us; 5606us; 5608us; 5610us; 5613us; 5616us; 5619us; 5621us; 5623us; 5626us; 5628us; 5630us; 5633us; 5635us; 5638us; 5640us; 5642us; 5645us; 5647us; 5649us; 5652us; 5654us; 5656us; 5659us; 5661us; 5663us; 5666us; 5668us; 5670us; 5673us; 5675us; 5677us; 5680us; 5682us; 5686us; 5694us; 5697us; 5704us; 5707us; 5712us; 5714us; 5718us; 5720us; 5722us; 5724us; 5726us; 5728us; 5730us; 5733us; 5740us; 5742us; 5749us; 5751us; 5758us; 5765us; 5772us; 5779us; 5786us; 5793us; 5795us; 5797us; 5799us; 5801us; 5803us; 5806us; 5808us; 5810us; 5812us; 5814us; 5816us; 5818us; 5821us; 5823us; 5825us; 5827us; 5829us; 5831us; 5836us; 5839us; 5841us; 5843us; 5845us; 5847us; 5850us; 5853us; 5855us; 5857us; 5859us; 5861us; 5863us; 5870us; 5872us; 5874us; 5876us; 5878us; 5880us; 5882us; 5889us; 5892us; 5894us; 5896us; 5899us; 5901us; 5903us; 5905us; 5907us; 5910us; 5912us; 5914us; 5917us; 5919us; 5921us; 5923us; 5925us; 5927us; 5929us; 5931us; 5933us; 5935us; 5937us; 5939us; 5944us; 5947us; 5949us; 5951us; 5953us; 5955us; 5957us; 5962us; 5968us; 5971us; 5973us; 5975us; 5977us; 5979us; 5984us; 5987us; 5989us; 5991us; 5993us; 5995us; 6005us; 6020us; 6034us; 6036us; 6039us; 6041us; 6043us; 6045us; 6048us; 6050us; 6052us; 6054us; 6056us; 6058us; 6060us; 6062us; 6064us; 6066us; 6068us; 6070us; 6072us; 6074us; 6076us; 6079us; 6082us; 6084us; 6086us; 6088us; 6094us; 6097us; 6099us; 6101us; 6103us; 6105us; 6107us; 6109us; 6111us; 6113us; 6115us; 6117us; 6119us; 6123us; 6125us; 6127us; 6129us; 6131us; 6135us; 6137us; 6139us; 6141us; 6144us; 6146us; 6148us; 6150us; 6152us; 6154us; 6157us; 6159us; 6161us; 6163us; 6165us; 6167us; 6169us; 6171us; 6173us; 6176us; 6178us; 6184us; 6186us; 6188us; 6190us; 6192us; 6194us; 6197us; 6199us; 6201us; 6203us; 6206us; 6208us; 6212us; 6215us; 6217us; 6220us; 6222us; 6224us; 6226us; 6229us; 6231us; 6234us; 6236us; 6238us; 6240us; 6243us; 6245us; 6247us; 6249us; 6252us; 6255us; 6258us; 6260us; 6262us; 6266us; 6268us; 6270us; 6276us; 6280us; 6282us; 6284us; 6286us; 6289us; 6291us; 6293us; 6295us; 6297us; 6299us; 6301us; 6303us; 6306us; 6308us; 6310us; 6312us; 6314us; 6316us; 6318us; 6320us; 6322us; 6324us; 6326us; 6328us; 6330us; 6332us; 6337us; 6339us; 6341us; 6343us; 6345us; 6347us; 6350us; 6353us; 6356us; 6358us; 6360us; 6367us; 6373us; 6378us; 6381us; 6383us; 6385us; 6387us; 6389us; 6391us; 6393us; 6395us; 6397us; 6399us; 6401us; 6403us; 6405us; 6407us; 6409us; 6412us; 6414us; 6417us; 6419us; 6421us; 6423us; 6426us; 6428us; 6430us; 6433us; 6435us; 6437us; 6440us; 6442us; 6444us; 6448us; 6454us; 6456us; 6461us; 6463us; 6465us; 6467us; 6472us; 6478us; 6480us; 6485us; 6487us; 6489us; 6491us; 6496us; 6499us; 6501us; 6503us; 6505us; 6507us; 6514us; 6516us; 6518us; 6520us; 6522us; 6524us; 6526us; 6533us; 6535us; 6537us; 6539us; 6541us; 6545us; 6547us; 6550us; 6554us; 6557us; 6562us; 6564us; 6566us; 6573us; 6581us; 6583us; 6586us; 6588us; 6591us; 6593us; 6596us; 6598us; 6601us; 6607us; 6612us; 6614us; 6617us; 6619us; 6622us; 6624us; 6627us; 6629us; 6631us; 6634us; 6636us; 6639us; 6643us; 6646us; 6648us; 6651us; 6653us; 6656us; 6661us; 6663us; 6667us; 6669us; 6672us; 6674us; 6676us; 6678us; 6680us; 6682us; 6684us; 6688us; 6693us; 6696us; 6698us; 6700us; 6707us; 6712us; 6714us; 6717us; 6719us; 6722us; 6724us; 6726us; 6730us; 6732us; 6734us; 6738us; 6741us; 6747us; 6749us; 6751us; 6757us; 6763us; 6767us; 6770us; 6772us; 6774us; 6776us; 6778us; 6780us; 6782us; 6784us; 6786us; 6788us; 6790us; 6792us; 6794us; 6796us; 6799us; 6804us; 6806us; 6808us; 6810us; 6812us; 6814us; 6816us; 6824us; 6828us; 6832us; 6835us; 6837us; 6839us; 6841us; 6845us; 6847us; 6849us; 6851us; 6853us; 6857us; 6860us; 6862us; 6864us; 6866us; 6869us; 6873us; 6875us; 6877us; 6879us; 6883us; 6885us; 6887us; 6891us; 6893us; 6896us; 6898us; 6900us; 6902us; 6905us; 6907us; 6909us; 6913us; 6917us; 6921us; 6923us; 6925us; 6927us; 6929us; 6931us; 6933us; 6935us; 6938us; 6940us; 6942us; 6944us; 6946us; 6949us; 6951us; 6953us; 6958us; 6960us; 6962us; 6964us; 6966us; 6968us; 6972us; 6976us; 6978us; 6980us; 6982us; 6984us; 6986us; 6988us; 6990us; 6992us; 6994us; 6996us; 6998us; 7000us; 7002us; 7004us; 7006us; 7008us; 7010us; 7012us; 7014us; 7016us; 7018us; 7020us; 7022us; 7024us; 7026us; 7028us; 7030us; 7033us; 7035us; 7037us; 7039us; 7041us; 7043us; 7045us; 7047us; 7049us; 7051us; 7055us; 7057us; 7060us; 7062us; 7064us; 7066us; 7068us; 7070us; 7072us; 7075us; 7077us; 7079us; 7081us; 7084us; 7087us; 7089us; 7091us; 7093us; 7095us; 7097us; 7099us; 7101us; 7103us; 7105us; 7107us; 7109us; 7111us; 7113us; 7115us; 7117us; 7119us; 7121us; 7123us; 7125us; 7127us; 7129us; 7131us; 7133us; 7135us; 7137us; 7139us; 7141us; 7143us; 7145us; 7147us; 7149us; 7152us; 7154us; 7156us; 7158us; 7160us; 7163us; 7165us; 7167us; 7169us; 7171us; 7173us; 7175us; 7177us; 7179us; 7181us; 7183us; 7185us; 7187us; 7189us; 7191us; 7193us; 7195us; 7197us; 7199us; 7201us; 7203us; 7205us; 7207us; 7209us; 7211us; 7213us; |]
let _fsyacc_action_rows = 1815
let _fsyacc_actionTableElements = [|16us; 16431us; 22us; 69us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 47us; 0us; 49152us; 84us; 16507us; 13us; 16542us; 22us; 230us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 216us; 0us; 49152us; 7us; 16542us; 10us; 14us; 21us; 12us; 68us; 13us; 73us; 298us; 84us; 11us; 88us; 38us; 101us; 677us; 0us; 49152us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 49152us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 84us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 84us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 84us; 36us; 0us; 16397us; 5us; 16542us; 10us; 14us; 68us; 13us; 73us; 298us; 88us; 38us; 101us; 677us; 0us; 16398us; 5us; 16542us; 10us; 14us; 68us; 13us; 73us; 298us; 88us; 38us; 101us; 677us; 0us; 16399us; 5us; 16542us; 10us; 14us; 68us; 13us; 73us; 298us; 88us; 38us; 101us; 677us; 0us; 16400us; 16us; 16401us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 101us; 677us; 108us; 16542us; 120us; 16542us; 136us; 16542us; 148us; 16542us; 160us; 16542us; 0us; 16402us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 76us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 108us; 1786us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 120us; 666us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 136us; 683us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 148us; 1791us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 25us; 16403us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 0us; 16404us; 2us; 16405us; 21us; 37us; 84us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 189us; 39us; 0us; 16410us; 2us; 16409us; 190us; 1778us; 191us; 1777us; 0us; 16411us; 0us; 16412us; 2us; 32768us; 10us; 44us; 193us; 45us; 0us; 16413us; 1us; 32768us; 10us; 46us; 0us; 16414us; 4us; 16430us; 10us; 48us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 16415us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 17388us; 103us; 1764us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16416us; 77us; 1689us; 1us; 17388us; 103us; 1764us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16417us; 77us; 1689us; 1us; 16418us; 149us; 53us; 0us; 16419us; 1us; 16421us; 149us; 53us; 0us; 16420us; 1us; 17382us; 70us; 1761us; 16us; 16431us; 22us; 69us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 77us; 0us; 16422us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 8us; 32768us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 108us; 1786us; 109us; 96us; 120us; 666us; 148us; 1791us; 18us; 16431us; 22us; 69us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 70us; 1776us; 73us; 298us; 78us; 1775us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 77us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 15us; 16431us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 74us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 1us; 17384us; 21us; 1762us; 0us; 16426us; 0us; 16427us; 6us; 16430us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 16428us; 0us; 16429us; 3us; 16430us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 3us; 17367us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 15us; 16434us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 81us; 0us; 16432us; 3us; 32768us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 4us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 193us; 81us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 8us; 32768us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 108us; 1786us; 109us; 96us; 120us; 666us; 148us; 1791us; 2us; 32768us; 70us; 1776us; 78us; 1775us; 5us; 32768us; 22us; 111us; 45us; 1687us; 56us; 1773us; 135us; 1774us; 189us; 1686us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16441us; 77us; 1689us; 1us; 16542us; 73us; 298us; 1us; 17392us; 110us; 1765us; 1us; 17394us; 117us; 1766us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 2us; 16676us; 33us; 1781us; 158us; 17411us; 1us; 32768us; 78us; 103us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16443us; 70us; 106us; 0us; 16442us; 69us; 32768us; 13us; 1074us; 22us; 108us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 25us; 16444us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 28us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 0us; 16445us; 8us; 16542us; 45us; 1687us; 56us; 1773us; 73us; 298us; 88us; 38us; 101us; 94us; 135us; 1774us; 189us; 1686us; 193us; 81us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 0us; 16446us; 15us; 16431us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 77us; 1us; 32768us; 141us; 116us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 0us; 16447us; 15us; 16431us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 73us; 298us; 88us; 38us; 101us; 94us; 108us; 16542us; 109us; 16542us; 120us; 16542us; 148us; 16542us; 193us; 77us; 1us; 32768us; 141us; 120us; 0us; 16448us; 1us; 16542us; 73us; 298us; 0us; 16449us; 1us; 16451us; 130us; 124us; 1us; 16542us; 73us; 298us; 0us; 16450us; 2us; 16491us; 70us; 127us; 87us; 209us; 7us; 16542us; 22us; 130us; 48us; 537us; 55us; 539us; 73us; 298us; 111us; 538us; 135us; 155us; 150us; 141us; 0us; 16452us; 0us; 16453us; 51us; 16471us; 14us; 16542us; 22us; 151us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 47us; 16542us; 48us; 537us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 55us; 539us; 57us; 16542us; 67us; 16542us; 73us; 298us; 74us; 16542us; 88us; 16542us; 91us; 16542us; 92us; 16542us; 106us; 16542us; 109us; 16542us; 111us; 538us; 113us; 16542us; 118us; 16542us; 121us; 16542us; 135us; 155us; 146us; 16542us; 150us; 141us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 183us; 16542us; 186us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 1us; 17384us; 21us; 1762us; 14us; 16471us; 14us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 1us; 16491us; 87us; 209us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 1us; 16491us; 87us; 209us; 0us; 16454us; 1us; 16491us; 87us; 209us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 119us; 142us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 14us; 16542us; 22us; 159us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 193us; 149us; 3us; 32768us; 10us; 976us; 141us; 147us; 193us; 963us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 141us; 150us; 0us; 16462us; 14us; 16471us; 14us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 14us; 16542us; 22us; 159us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 3us; 32768us; 10us; 976us; 141us; 157us; 193us; 963us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 14us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 14us; 16471us; 14us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 0us; 16472us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 10us; 32768us; 14us; 541us; 46us; 187us; 47us; 333us; 49us; 205us; 50us; 334us; 51us; 335us; 53us; 183us; 109us; 185us; 111us; 540us; 118us; 192us; 43us; 32768us; 14us; 541us; 45us; 1687us; 46us; 187us; 47us; 333us; 49us; 205us; 50us; 334us; 51us; 335us; 53us; 183us; 55us; 1615us; 57us; 612us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 525us; 106us; 1628us; 109us; 185us; 111us; 540us; 113us; 1626us; 118us; 192us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17392us; 110us; 1765us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 2us; 16676us; 33us; 1781us; 158us; 17411us; 1us; 32768us; 78us; 177us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 16480us; 26us; 197us; 87us; 195us; 1us; 16443us; 70us; 106us; 0us; 16473us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 16474us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 16475us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 1us; 17394us; 117us; 1766us; 0us; 16476us; 5us; 32768us; 36us; 1782us; 37us; 1785us; 47us; 332us; 108us; 1786us; 109us; 188us; 1us; 17394us; 117us; 1766us; 0us; 16477us; 1us; 16542us; 73us; 298us; 0us; 16478us; 1us; 32768us; 78us; 193us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16479us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 0us; 16481us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 2us; 32768us; 20us; 199us; 193us; 200us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 97us; 202us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 47us; 206us; 0us; 16488us; 1us; 16491us; 87us; 209us; 0us; 16489us; 15us; 16471us; 14us; 16542us; 22us; 159us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 46us; 16542us; 47us; 16542us; 49us; 16542us; 50us; 16542us; 51us; 16542us; 53us; 16542us; 73us; 298us; 109us; 16542us; 111us; 16542us; 118us; 16542us; 3us; 32768us; 19us; 1754us; 20us; 1755us; 141us; 1756us; 0us; 16490us; 2us; 32768us; 10us; 213us; 193us; 214us; 0us; 16492us; 1us; 32768us; 10us; 215us; 0us; 16493us; 4us; 32768us; 10us; 217us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 16494us; 1us; 16495us; 149us; 53us; 0us; 16496us; 1us; 16498us; 149us; 53us; 0us; 16497us; 1us; 17382us; 70us; 1761us; 84us; 16507us; 13us; 16542us; 22us; 230us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 250us; 0us; 16499us; 4us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 193us; 245us; 76us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 108us; 1786us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 120us; 666us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 136us; 683us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 148us; 1791us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 85us; 16507us; 13us; 16542us; 22us; 230us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 70us; 269us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 250us; 0us; 16500us; 0us; 16501us; 83us; 16507us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 235us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 1us; 17384us; 21us; 1762us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 193us; 245us; 76us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 108us; 1786us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 120us; 666us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 136us; 683us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 148us; 1791us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 28us; 16510us; 21us; 1745us; 62us; 1143us; 63us; 1135us; 68us; 1744us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 84us; 1743us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 83us; 16509us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 250us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 21us; 1745us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 68us; 1744us; 73us; 298us; 84us; 1743us; 88us; 38us; 101us; 677us; 108us; 16542us; 120us; 16542us; 136us; 16542us; 148us; 16542us; 160us; 16542us; 193us; 250us; 0us; 16513us; 83us; 16516us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 250us; 0us; 16514us; 3us; 32768us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 6us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 4us; 32768us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 141us; 291us; 4us; 16542us; 73us; 298us; 88us; 38us; 101us; 677us; 193us; 250us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 11us; 32768us; 32us; 685us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 40us; 698us; 108us; 1786us; 120us; 666us; 136us; 683us; 148us; 1791us; 160us; 679us; 0us; 16520us; 1us; 16520us; 126us; 978us; 0us; 16521us; 69us; 16521us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 983us; 0us; 16522us; 1us; 16542us; 73us; 298us; 1us; 16564us; 130us; 339us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 70us; 269us; 5us; 32768us; 22us; 277us; 45us; 1687us; 55us; 1771us; 135us; 1772us; 189us; 1686us; 0us; 16525us; 2us; 16541us; 10us; 976us; 193us; 963us; 0us; 16526us; 0us; 16527us; 4us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 77us; 1689us; 0us; 16528us; 1us; 16529us; 77us; 1689us; 6us; 16542us; 55us; 1771us; 73us; 298us; 88us; 38us; 101us; 677us; 135us; 1772us; 193us; 251us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16530us; 0us; 16531us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 1us; 16536us; 77us; 1689us; 83us; 16507us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 31us; 16542us; 32us; 16542us; 36us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 42us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 55us; 16542us; 62us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 298us; 74us; 16542us; 75us; 16542us; 86us; 16542us; 88us; 38us; 89us; 16542us; 90us; 16542us; 92us; 16542us; 98us; 16542us; 100us; 16542us; 101us; 677us; 106us; 16542us; 107us; 16542us; 108us; 16542us; 114us; 16542us; 115us; 16542us; 116us; 16542us; 118us; 16542us; 120us; 16542us; 121us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 129us; 16542us; 132us; 16542us; 133us; 16542us; 135us; 16542us; 136us; 16542us; 144us; 16542us; 145us; 16542us; 146us; 16542us; 148us; 16542us; 152us; 16542us; 153us; 16542us; 156us; 16542us; 157us; 16542us; 160us; 16542us; 161us; 16542us; 162us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 166us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 177us; 16542us; 178us; 16542us; 180us; 16542us; 181us; 16542us; 184us; 16542us; 189us; 16542us; 190us; 16542us; 191us; 16542us; 192us; 16542us; 193us; 252us; 3us; 32768us; 10us; 976us; 141us; 289us; 193us; 963us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 6us; 16542us; 19us; 16586us; 20us; 16586us; 22us; 379us; 73us; 298us; 141us; 16586us; 193us; 385us; 3us; 32768us; 19us; 1754us; 20us; 1755us; 141us; 1756us; 0us; 16540us; 0us; 16541us; 1us; 16543us; 73us; 298us; 0us; 16544us; 14us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1783us; 37us; 1785us; 38us; 1788us; 39us; 1790us; 45us; 1687us; 60us; 1811us; 94us; 1812us; 108us; 1786us; 148us; 1791us; 161us; 329us; 189us; 1686us; 193us; 303us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 8us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 54us; 301us; 60us; 1811us; 94us; 1812us; 193us; 963us; 1us; 17384us; 21us; 1762us; 0us; 16545us; 1us; 16897us; 54us; 304us; 1us; 17384us; 21us; 1762us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 9us; 17385us; 36us; 1782us; 37us; 1785us; 38us; 1787us; 39us; 1790us; 45us; 1687us; 108us; 1786us; 148us; 1791us; 161us; 329us; 189us; 1686us; 0us; 16550us; 3us; 17409us; 34us; 1780us; 35us; 1779us; 77us; 1689us; 26us; 17145us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16551us; 3us; 32768us; 22us; 318us; 45us; 1687us; 189us; 1686us; 3us; 17409us; 34us; 1780us; 35us; 1779us; 77us; 1689us; 26us; 17145us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16552us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 4us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 77us; 1689us; 2us; 17409us; 34us; 1780us; 35us; 1779us; 26us; 17145us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16553us; 1us; 32768us; 78us; 324us; 0us; 16554us; 1us; 32768us; 78us; 326us; 0us; 16555us; 1us; 17317us; 78us; 328us; 0us; 16556us; 1us; 32768us; 78us; 330us; 0us; 16557us; 10us; 32768us; 30us; 689us; 32us; 685us; 36us; 1782us; 37us; 1785us; 40us; 698us; 47us; 332us; 108us; 1786us; 109us; 448us; 136us; 683us; 160us; 679us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 16679us; 85us; 571us; 0us; 16562us; 1us; 16542us; 73us; 298us; 1us; 16564us; 130us; 339us; 0us; 16563us; 40us; 16542us; 10us; 16565us; 14us; 16565us; 15us; 16565us; 16us; 16565us; 17us; 16565us; 19us; 16565us; 20us; 16565us; 21us; 16565us; 30us; 16565us; 32us; 16565us; 36us; 16565us; 37us; 16565us; 38us; 16565us; 39us; 16565us; 40us; 16565us; 46us; 16565us; 47us; 16565us; 49us; 16565us; 50us; 16565us; 51us; 16565us; 53us; 16565us; 68us; 16565us; 70us; 343us; 73us; 298us; 84us; 16565us; 87us; 292us; 88us; 16565us; 101us; 16565us; 108us; 16565us; 109us; 16565us; 111us; 16565us; 118us; 16565us; 120us; 16565us; 130us; 16565us; 136us; 16565us; 141us; 16565us; 148us; 16565us; 149us; 16565us; 160us; 16565us; 193us; 16565us; 6us; 16542us; 22us; 353us; 48us; 537us; 55us; 539us; 73us; 298us; 111us; 538us; 150us; 365us; 0us; 16566us; 0us; 16567us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 2us; 17409us; 34us; 1780us; 35us; 1779us; 1us; 32768us; 92us; 807us; 1us; 16631us; 131us; 489us; 1us; 32768us; 70us; 351us; 6us; 16542us; 22us; 353us; 48us; 537us; 55us; 539us; 73us; 298us; 111us; 538us; 150us; 365us; 0us; 16568us; 11us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 22us; 375us; 48us; 537us; 55us; 539us; 73us; 298us; 111us; 538us; 150us; 365us; 193us; 385us; 1us; 17384us; 21us; 1762us; 7us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 73us; 298us; 87us; 16586us; 193us; 385us; 1us; 16626us; 87us; 478us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 1us; 16626us; 87us; 478us; 0us; 16569us; 0us; 16570us; 1us; 16626us; 87us; 478us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 1us; 32768us; 119us; 366us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16574us; 0us; 16575us; 5us; 16542us; 10us; 16586us; 22us; 379us; 73us; 298us; 141us; 16586us; 193us; 373us; 3us; 32768us; 10us; 976us; 141us; 371us; 193us; 963us; 0us; 16576us; 0us; 16577us; 4us; 16542us; 10us; 16586us; 73us; 298us; 141us; 374us; 193us; 385us; 0us; 16578us; 6us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 73us; 298us; 193us; 385us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16579us; 0us; 16580us; 6us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 73us; 298us; 193us; 385us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 0us; 16584us; 10us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 19us; 16586us; 20us; 16586us; 73us; 298us; 87us; 16586us; 141us; 16586us; 193us; 385us; 0us; 16585us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 10us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 19us; 16586us; 20us; 16586us; 73us; 298us; 87us; 16586us; 141us; 16586us; 193us; 385us; 0us; 16587us; 1us; 17392us; 110us; 1765us; 0us; 16588us; 1us; 17392us; 110us; 1765us; 2us; 32768us; 20us; 394us; 193us; 395us; 0us; 16589us; 0us; 16590us; 1us; 16591us; 130us; 397us; 1us; 17392us; 110us; 1765us; 0us; 16592us; 1us; 16542us; 73us; 298us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17207us; 78us; 1503us; 1us; 32768us; 70us; 403us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16593us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17207us; 78us; 1503us; 3us; 32768us; 26us; 392us; 70us; 408us; 87us; 390us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16594us; 0us; 16595us; 1us; 16596us; 47us; 412us; 0us; 16597us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 15us; 32768us; 14us; 541us; 30us; 689us; 32us; 685us; 40us; 698us; 46us; 331us; 47us; 333us; 49us; 411us; 50us; 334us; 51us; 335us; 53us; 481us; 109us; 448us; 111us; 540us; 118us; 440us; 136us; 683us; 160us; 679us; 48us; 32768us; 14us; 541us; 30us; 689us; 32us; 685us; 40us; 698us; 45us; 1687us; 46us; 331us; 47us; 333us; 49us; 411us; 50us; 334us; 51us; 335us; 53us; 481us; 55us; 1615us; 57us; 612us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 525us; 106us; 1628us; 109us; 448us; 111us; 540us; 113us; 1626us; 118us; 440us; 121us; 1627us; 136us; 683us; 146us; 1625us; 160us; 679us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16598us; 0us; 16599us; 2us; 17392us; 109us; 454us; 110us; 1765us; 1us; 17380us; 19us; 1760us; 0us; 16600us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 7us; 16624us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 87us; 475us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 0us; 16601us; 1us; 17392us; 110us; 1765us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 2us; 16676us; 33us; 1781us; 158us; 17411us; 1us; 32768us; 78us; 429us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 16480us; 26us; 197us; 87us; 195us; 1us; 17380us; 19us; 1760us; 0us; 16602us; 0us; 16603us; 1us; 17380us; 19us; 1760us; 0us; 16604us; 1us; 17380us; 19us; 1760us; 0us; 16605us; 1us; 17380us; 19us; 1760us; 0us; 16606us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16631us; 131us; 489us; 1us; 32768us; 70us; 443us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17380us; 19us; 1760us; 0us; 16607us; 1us; 16542us; 73us; 298us; 0us; 16608us; 1us; 17394us; 117us; 1766us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 32768us; 189us; 1686us; 1us; 32768us; 78us; 452us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16609us; 1us; 17394us; 117us; 1766us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 32768us; 189us; 1686us; 1us; 16611us; 78us; 462us; 1us; 32768us; 70us; 459us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 16480us; 26us; 197us; 87us; 195us; 0us; 16610us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16612us; 1us; 32768us; 77us; 465us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 0us; 16613us; 0us; 16614us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 0us; 16615us; 0us; 16617us; 0us; 16618us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 2us; 16542us; 22us; 495us; 73us; 298us; 3us; 32768us; 19us; 1754us; 20us; 1755us; 141us; 1756us; 0us; 16623us; 6us; 16542us; 19us; 16586us; 20us; 16586us; 22us; 379us; 73us; 298us; 141us; 16586us; 193us; 385us; 3us; 32768us; 19us; 1754us; 20us; 1755us; 141us; 1756us; 0us; 16625us; 37us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 45us; 1687us; 55us; 1615us; 60us; 1811us; 67us; 1577us; 88us; 1606us; 91us; 1680us; 92us; 1564us; 94us; 1812us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 29us; 16634us; 34us; 1780us; 35us; 1779us; 72us; 17409us; 74us; 17409us; 92us; 17409us; 106us; 17409us; 121us; 17409us; 131us; 492us; 135us; 17409us; 146us; 17409us; 153us; 17409us; 163us; 17409us; 164us; 17409us; 165us; 17409us; 166us; 17409us; 167us; 17409us; 168us; 17409us; 169us; 17409us; 170us; 17409us; 171us; 17409us; 172us; 17409us; 173us; 17409us; 174us; 17409us; 175us; 17409us; 177us; 17409us; 178us; 17409us; 190us; 17409us; 191us; 17409us; 192us; 17409us; 0us; 16627us; 26us; 32768us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16634us; 131us; 492us; 0us; 16628us; 0us; 16629us; 0us; 16630us; 1us; 32768us; 189us; 1686us; 0us; 16632us; 0us; 16633us; 2us; 32768us; 152us; 494us; 189us; 1686us; 0us; 16635us; 0us; 16636us; 1us; 16542us; 73us; 298us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16637us; 0us; 16638us; 0us; 16639us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 14us; 16542us; 10us; 16641us; 14us; 16641us; 15us; 16641us; 16us; 16641us; 17us; 16641us; 19us; 16641us; 20us; 16641us; 21us; 16641us; 59us; 16641us; 60us; 16641us; 61us; 16641us; 73us; 298us; 111us; 16641us; 141us; 16641us; 0us; 16640us; 3us; 32768us; 47us; 514us; 50us; 515us; 193us; 511us; 4us; 17392us; 47us; 514us; 50us; 515us; 110us; 1765us; 193us; 511us; 3us; 17392us; 109us; 454us; 110us; 1765us; 193us; 510us; 1us; 17380us; 19us; 1760us; 0us; 16642us; 1us; 17380us; 19us; 1760us; 0us; 16643us; 0us; 16644us; 1us; 17392us; 110us; 1765us; 1us; 17380us; 19us; 1760us; 0us; 16645us; 0us; 16646us; 0us; 16647us; 3us; 16622us; 42us; 472us; 43us; 471us; 44us; 473us; 33us; 32768us; 45us; 1687us; 55us; 1615us; 57us; 612us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 525us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 17233us; 77us; 1689us; 153us; 519us; 1us; 32768us; 191us; 520us; 2us; 32768us; 10us; 976us; 193us; 963us; 0us; 16648us; 0us; 16649us; 0us; 16650us; 0us; 16651us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 534us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1629us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16652us; 2us; 16542us; 73us; 298us; 193us; 532us; 5us; 32768us; 10us; 976us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 193us; 963us; 0us; 16653us; 0us; 16654us; 3us; 32768us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 0us; 16655us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1609us; 88us; 1606us; 91us; 1680us; 92us; 1610us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16791us; 88us; 536us; 0us; 16656us; 0us; 16657us; 0us; 16658us; 0us; 16659us; 0us; 16660us; 0us; 16661us; 5us; 32768us; 45us; 1687us; 91us; 1680us; 92us; 548us; 186us; 1683us; 189us; 1686us; 3us; 16662us; 33us; 1781us; 77us; 1689us; 158us; 17411us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16663us; 77us; 1689us; 0us; 16664us; 0us; 16665us; 1us; 16542us; 73us; 298us; 4us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 97us; 553us; 0us; 16666us; 2us; 16679us; 85us; 571us; 97us; 553us; 1us; 16672us; 97us; 554us; 1us; 16542us; 73us; 298us; 2us; 16542us; 73us; 298us; 142us; 563us; 0us; 16667us; 0us; 16668us; 2us; 32768us; 91us; 1680us; 186us; 1683us; 0us; 16669us; 1us; 32768us; 158us; 560us; 1us; 16542us; 73us; 298us; 1us; 32768us; 159us; 562us; 0us; 16670us; 0us; 16671us; 1us; 32768us; 158us; 565us; 3us; 16542us; 73us; 298us; 85us; 16673us; 159us; 16673us; 1us; 16679us; 85us; 571us; 1us; 32768us; 159us; 568us; 0us; 16674us; 0us; 16675us; 27us; 16677us; 10us; 16828us; 16us; 16828us; 21us; 16828us; 26us; 16828us; 36us; 16828us; 38us; 16828us; 57us; 16828us; 58us; 16828us; 59us; 16828us; 60us; 16828us; 61us; 16828us; 65us; 16828us; 70us; 16828us; 78us; 16828us; 79us; 16828us; 84us; 16828us; 85us; 16828us; 87us; 16828us; 89us; 16828us; 93us; 16828us; 94us; 16828us; 95us; 16828us; 97us; 16828us; 98us; 16828us; 126us; 16828us; 131us; 16828us; 193us; 16828us; 4us; 32768us; 51us; 578us; 91us; 1680us; 92us; 593us; 186us; 1683us; 1us; 16680us; 130us; 575us; 1us; 17204us; 130us; 575us; 1us; 17206us; 130us; 575us; 4us; 32768us; 51us; 578us; 91us; 1680us; 92us; 593us; 186us; 1683us; 0us; 16681us; 0us; 16682us; 2us; 32768us; 91us; 1680us; 186us; 1683us; 1us; 32768us; 78us; 580us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16683us; 2us; 32768us; 78us; 585us; 80us; 583us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16684us; 5us; 32768us; 55us; 586us; 92us; 590us; 146us; 589us; 150us; 600us; 189us; 587us; 0us; 16685us; 3us; 16692us; 33us; 1638us; 55us; 588us; 158us; 1640us; 0us; 16686us; 0us; 16687us; 1us; 16542us; 73us; 298us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16688us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 4us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 102us; 603us; 1us; 32768us; 78us; 596us; 1us; 32768us; 92us; 597us; 1us; 16542us; 73us; 298us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16689us; 2us; 32768us; 33us; 1638us; 158us; 1640us; 0us; 16690us; 0us; 16691us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 16693us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 6us; 16694us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 1us; 16542us; 73us; 298us; 0us; 16695us; 1us; 32768us; 57us; 612us; 1us; 16542us; 73us; 298us; 0us; 16696us; 2us; 16697us; 21us; 1762us; 57us; 17384us; 0us; 16698us; 1us; 16700us; 57us; 612us; 1us; 16542us; 73us; 298us; 0us; 16699us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 3us; 32768us; 92us; 630us; 100us; 1697us; 189us; 1686us; 4us; 17384us; 21us; 1762us; 70us; 626us; 78us; 623us; 119us; 620us; 0us; 16701us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17384us; 21us; 1762us; 0us; 16702us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17384us; 21us; 1762us; 0us; 16703us; 18us; 32768us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17384us; 21us; 1762us; 0us; 16704us; 0us; 16705us; 29us; 32768us; 57us; 1732us; 62us; 1714us; 63us; 1712us; 70us; 1716us; 71us; 633us; 75us; 1720us; 79us; 631us; 83us; 1724us; 89us; 1721us; 90us; 1722us; 96us; 1715us; 102us; 1717us; 142us; 1727us; 143us; 1723us; 153us; 1729us; 156us; 1726us; 158us; 1718us; 159us; 1719us; 179us; 1725us; 180us; 1713us; 181us; 1710us; 182us; 1709us; 183us; 1711us; 184us; 1704us; 185us; 1708us; 186us; 1707us; 187us; 1706us; 188us; 1705us; 193us; 1695us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16706us; 1us; 32768us; 58us; 634us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16707us; 4us; 17317us; 21us; 1762us; 57us; 17384us; 70us; 638us; 119us; 642us; 0us; 16708us; 18us; 32768us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17384us; 21us; 1762us; 45us; 16709us; 10us; 16712us; 14us; 16712us; 15us; 16712us; 16us; 16712us; 17us; 16712us; 19us; 16712us; 20us; 16712us; 21us; 16712us; 30us; 16712us; 32us; 16712us; 36us; 16712us; 37us; 16712us; 38us; 16712us; 39us; 16712us; 40us; 16712us; 42us; 16712us; 43us; 16712us; 44us; 16712us; 46us; 16712us; 47us; 16712us; 49us; 16712us; 50us; 16712us; 51us; 16712us; 53us; 16712us; 68us; 16712us; 73us; 16712us; 84us; 16712us; 87us; 16712us; 88us; 16712us; 93us; 16712us; 94us; 16712us; 95us; 16712us; 101us; 16712us; 108us; 16712us; 109us; 16712us; 111us; 16712us; 118us; 16712us; 120us; 16712us; 130us; 16712us; 136us; 16712us; 141us; 16712us; 148us; 16712us; 149us; 16712us; 160us; 16712us; 193us; 16712us; 0us; 16710us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16711us; 1us; 16714us; 96us; 645us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16713us; 1us; 17317us; 78us; 648us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 16715us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 6us; 16716us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 0us; 16717us; 0us; 16718us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 6us; 16542us; 10us; 17385us; 59us; 17385us; 60us; 17385us; 61us; 17385us; 73us; 298us; 193us; 17385us; 0us; 16719us; 0us; 16720us; 1us; 17394us; 117us; 1766us; 0us; 16721us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 32768us; 189us; 1686us; 1us; 32768us; 78us; 662us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16722us; 1us; 16626us; 87us; 478us; 0us; 16723us; 0us; 16724us; 1us; 16542us; 73us; 298us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 32768us; 189us; 1686us; 1us; 16728us; 70us; 675us; 0us; 16725us; 1us; 16726us; 119us; 673us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 74us; 528us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16727us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16729us; 77us; 1689us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 1us; 16730us; 77us; 1689us; 1us; 17388us; 103us; 1764us; 2us; 16542us; 73us; 298us; 193us; 733us; 0us; 16731us; 0us; 16732us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16733us; 1us; 17388us; 103us; 1764us; 2us; 16542us; 73us; 298us; 193us; 733us; 3us; 32768us; 10us; 976us; 19us; 696us; 193us; 963us; 0us; 16734us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 10us; 976us; 19us; 696us; 193us; 963us; 0us; 16735us; 0us; 16736us; 0us; 16737us; 0us; 16738us; 0us; 16739us; 0us; 16740us; 0us; 16741us; 1us; 16542us; 73us; 298us; 3us; 16616us; 42us; 472us; 43us; 471us; 44us; 473us; 1us; 32768us; 189us; 1686us; 2us; 17409us; 34us; 1780us; 35us; 1779us; 1us; 32768us; 92us; 703us; 4us; 16542us; 73us; 298us; 93us; 16745us; 94us; 16745us; 95us; 16745us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16742us; 1us; 16743us; 97us; 708us; 1us; 16744us; 97us; 710us; 1us; 16542us; 73us; 298us; 0us; 16746us; 1us; 16542us; 73us; 298us; 0us; 16747us; 3us; 32768us; 41us; 722us; 45us; 1687us; 189us; 1686us; 6us; 16748us; 34us; 1780us; 35us; 1779us; 71us; 17409us; 89us; 721us; 96us; 720us; 189us; 1686us; 0us; 16749us; 1us; 16750us; 77us; 1689us; 5us; 16755us; 34us; 1780us; 35us; 1779us; 71us; 17409us; 89us; 721us; 96us; 720us; 1us; 32768us; 71us; 718us; 1us; 32768us; 58us; 719us; 0us; 16751us; 0us; 16752us; 0us; 16753us; 1us; 32768us; 96us; 724us; 1us; 16756us; 96us; 724us; 0us; 16754us; 3us; 32768us; 41us; 723us; 45us; 1687us; 189us; 1686us; 1us; 16759us; 130us; 728us; 0us; 16757us; 2us; 16542us; 73us; 298us; 193us; 733us; 1us; 16759us; 130us; 728us; 0us; 16758us; 1us; 17392us; 110us; 1765us; 0us; 16760us; 0us; 16761us; 1us; 17394us; 117us; 1766us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17207us; 78us; 1503us; 3us; 32768us; 10us; 976us; 70us; 738us; 193us; 963us; 70us; 32768us; 13us; 1074us; 22us; 742us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 740us; 0us; 16762us; 0us; 16763us; 0us; 16764us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16765us; 0us; 16766us; 0us; 16767us; 0us; 16770us; 1us; 16768us; 85us; 750us; 0us; 16769us; 2us; 32768us; 91us; 1680us; 186us; 1683us; 2us; 32768us; 70us; 752us; 130us; 754us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16771us; 2us; 32768us; 91us; 1680us; 186us; 1683us; 0us; 16772us; 0us; 16773us; 2us; 32768us; 55us; 760us; 78us; 758us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16774us; 0us; 16775us; 0us; 16776us; 0us; 16777us; 0us; 16778us; 0us; 16779us; 0us; 16780us; 0us; 16781us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 1us; 16788us; 142us; 863us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 1us; 16795us; 183us; 780us; 1us; 32768us; 175us; 781us; 0us; 16793us; 1us; 32768us; 175us; 783us; 1us; 16796us; 183us; 784us; 1us; 32768us; 175us; 785us; 0us; 16794us; 0us; 16797us; 2us; 32768us; 62us; 782us; 175us; 779us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16798us; 0us; 16799us; 2us; 32768us; 92us; 787us; 175us; 786us; 0us; 16800us; 1us; 16801us; 33us; 794us; 1us; 32768us; 158us; 1657us; 0us; 16802us; 5us; 16803us; 57us; 825us; 79us; 826us; 89us; 833us; 97us; 831us; 131us; 823us; 0us; 16804us; 1us; 32768us; 189us; 1686us; 0us; 16805us; 1us; 16807us; 78us; 802us; 2us; 16808us; 78us; 802us; 97us; 805us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16806us; 3us; 32768us; 73us; 298us; 75us; 798us; 189us; 1686us; 3us; 32768us; 73us; 298us; 75us; 798us; 189us; 1686us; 0us; 16809us; 8us; 32768us; 10us; 976us; 73us; 298us; 75us; 798us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 189us; 1686us; 193us; 812us; 5us; 32768us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 0us; 16810us; 0us; 16811us; 0us; 16812us; 3us; 16897us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16813us; 0us; 16814us; 3us; 16816us; 79us; 826us; 89us; 833us; 97us; 831us; 1us; 16817us; 79us; 826us; 2us; 16821us; 79us; 826us; 89us; 833us; 2us; 16822us; 79us; 826us; 89us; 833us; 1us; 16823us; 79us; 826us; 1us; 16824us; 79us; 826us; 6us; 32768us; 57us; 825us; 70us; 1052us; 79us; 826us; 89us; 833us; 97us; 831us; 131us; 823us; 6us; 32768us; 57us; 825us; 70us; 1058us; 79us; 826us; 89us; 833us; 97us; 831us; 131us; 823us; 1us; 32768us; 189us; 1686us; 0us; 16815us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16818us; 97us; 830us; 0us; 16819us; 0us; 16820us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 0us; 16825us; 1us; 17385us; 189us; 1686us; 0us; 16826us; 1us; 32768us; 70us; 840us; 2us; 17356us; 70us; 840us; 77us; 1739us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 16827us; 57us; 913us; 78us; 916us; 79us; 919us; 89us; 924us; 97us; 922us; 131us; 911us; 29us; 16678us; 10us; 16847us; 16us; 16847us; 21us; 16847us; 26us; 16847us; 33us; 1781us; 36us; 16847us; 38us; 16847us; 57us; 16847us; 58us; 16847us; 59us; 16847us; 60us; 16847us; 61us; 16847us; 65us; 16847us; 70us; 16847us; 78us; 16847us; 79us; 16847us; 84us; 16847us; 85us; 16847us; 87us; 16847us; 89us; 16847us; 93us; 16847us; 94us; 16847us; 95us; 16847us; 97us; 16847us; 98us; 16847us; 126us; 16847us; 131us; 16847us; 158us; 17411us; 193us; 16847us; 37us; 32768us; 34us; 845us; 35us; 847us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 852us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16829us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 852us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16830us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 852us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16831us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1609us; 88us; 1606us; 91us; 1680us; 92us; 1610us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16832us; 77us; 1632us; 0us; 16833us; 63us; 16861us; 10us; 976us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1732us; 62us; 1714us; 63us; 1712us; 67us; 874us; 70us; 1716us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 876us; 82us; 849us; 83us; 1724us; 89us; 1721us; 90us; 1722us; 92us; 883us; 96us; 1715us; 100us; 1697us; 102us; 1717us; 106us; 881us; 121us; 880us; 142us; 1727us; 143us; 1723us; 146us; 882us; 153us; 1327us; 156us; 1726us; 158us; 1718us; 159us; 1719us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 179us; 1725us; 180us; 1713us; 181us; 1710us; 182us; 1709us; 183us; 1711us; 184us; 1704us; 185us; 1708us; 186us; 1707us; 187us; 1706us; 188us; 1705us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 887us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16834us; 0us; 16835us; 37us; 16839us; 34us; 860us; 35us; 858us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16836us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16837us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16838us; 0us; 16840us; 1us; 32768us; 165us; 864us; 0us; 16841us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 3us; 32768us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 0us; 16842us; 37us; 16878us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 58us; 870us; 0us; 16843us; 37us; 16878us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 65us; 873us; 0us; 16844us; 0us; 16845us; 1us; 32768us; 189us; 1686us; 1us; 17341us; 189us; 1686us; 0us; 16846us; 0us; 16847us; 0us; 16848us; 0us; 16849us; 0us; 16850us; 0us; 16851us; 63us; 16861us; 10us; 976us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1732us; 62us; 1714us; 63us; 1712us; 67us; 874us; 70us; 1716us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 876us; 82us; 849us; 83us; 1724us; 89us; 1721us; 90us; 1722us; 92us; 883us; 96us; 1715us; 100us; 1697us; 102us; 1717us; 106us; 881us; 121us; 880us; 142us; 1727us; 143us; 1723us; 146us; 882us; 153us; 1327us; 156us; 1726us; 158us; 1718us; 159us; 1719us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 179us; 1725us; 180us; 1713us; 181us; 1710us; 182us; 1709us; 183us; 1711us; 184us; 1704us; 185us; 1708us; 186us; 1707us; 187us; 1706us; 188us; 1705us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 887us; 5us; 32768us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 0us; 16852us; 0us; 16853us; 3us; 16897us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 2us; 16854us; 33us; 17321us; 158us; 17321us; 0us; 16855us; 1us; 32768us; 92us; 891us; 39us; 32768us; 10us; 976us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 895us; 6us; 16864us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 97us; 921us; 193us; 963us; 0us; 16856us; 0us; 16857us; 3us; 16897us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 16858us; 0us; 16859us; 6us; 16860us; 57us; 913us; 78us; 916us; 79us; 919us; 89us; 924us; 97us; 922us; 131us; 911us; 4us; 16863us; 78us; 916us; 79us; 919us; 89us; 924us; 97us; 922us; 3us; 16867us; 78us; 916us; 79us; 919us; 89us; 924us; 2us; 16868us; 78us; 916us; 79us; 919us; 3us; 16870us; 78us; 916us; 79us; 919us; 89us; 924us; 3us; 16871us; 78us; 916us; 79us; 919us; 89us; 924us; 2us; 16872us; 78us; 916us; 79us; 919us; 6us; 32768us; 57us; 913us; 78us; 916us; 79us; 919us; 89us; 924us; 97us; 922us; 131us; 911us; 2us; 16873us; 78us; 916us; 79us; 919us; 6us; 16877us; 57us; 913us; 78us; 916us; 79us; 919us; 89us; 924us; 97us; 922us; 131us; 911us; 8us; 17386us; 21us; 1750us; 57us; 913us; 78us; 916us; 79us; 919us; 84us; 1751us; 89us; 924us; 97us; 922us; 131us; 911us; 15us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 57us; 913us; 60us; 1811us; 70us; 1389us; 78us; 916us; 79us; 919us; 89us; 924us; 94us; 1812us; 97us; 922us; 126us; 1385us; 131us; 911us; 193us; 968us; 7us; 17016us; 57us; 913us; 78us; 916us; 79us; 919us; 85us; 1190us; 89us; 924us; 97us; 922us; 131us; 911us; 1us; 32768us; 189us; 1686us; 0us; 16862us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16864us; 97us; 921us; 1us; 16865us; 89us; 923us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16866us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16869us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16874us; 2us; 17386us; 21us; 1750us; 84us; 1751us; 0us; 16875us; 2us; 17385us; 45us; 1687us; 189us; 1686us; 0us; 16876us; 2us; 32768us; 70us; 931us; 77us; 1689us; 37us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16879us; 37us; 16878us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16880us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 16881us; 0us; 16882us; 0us; 16883us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 0us; 16884us; 25us; 16885us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 1us; 16887us; 18us; 945us; 0us; 16886us; 1us; 16889us; 78us; 947us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16888us; 1us; 32768us; 10us; 950us; 0us; 16890us; 29us; 16893us; 21us; 1750us; 28us; 958us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 84us; 1751us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 104us; 956us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 30us; 16893us; 21us; 1750us; 28us; 958us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 84us; 1751us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 17082us; 102us; 1129us; 104us; 956us; 127us; 1126us; 142us; 1307us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 30us; 16893us; 21us; 1750us; 28us; 958us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 84us; 1751us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 104us; 956us; 127us; 1126us; 142us; 1380us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 68us; 16892us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16891us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16894us; 1us; 32768us; 22us; 959us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 0us; 16895us; 71us; 16896us; 13us; 1074us; 21us; 984us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 983us; 0us; 16897us; 2us; 16897us; 19us; 1770us; 137us; 1769us; 2us; 16897us; 19us; 1770us; 137us; 1769us; 2us; 16897us; 19us; 1770us; 137us; 1769us; 2us; 16897us; 30us; 1768us; 136us; 1767us; 2us; 16897us; 19us; 1770us; 137us; 1769us; 1us; 16897us; 58us; 1279us; 1us; 16897us; 58us; 1302us; 1us; 16897us; 154us; 1331us; 1us; 16897us; 65us; 1337us; 3us; 16897us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 3us; 16897us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 3us; 16897us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 0us; 16898us; 1us; 32768us; 126us; 978us; 69us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 980us; 0us; 16899us; 0us; 16900us; 71us; 32768us; 13us; 1074us; 21us; 984us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 983us; 0us; 16901us; 0us; 16902us; 70us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 986us; 0us; 16903us; 0us; 16904us; 0us; 16905us; 0us; 16906us; 0us; 16907us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 4us; 32768us; 10us; 976us; 26us; 1173us; 87us; 1171us; 193us; 963us; 0us; 16908us; 0us; 16909us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 32768us; 10us; 976us; 26us; 1173us; 87us; 1171us; 128us; 998us; 193us; 963us; 0us; 16910us; 0us; 16911us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16912us; 70us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 29us; 32768us; 10us; 976us; 28us; 1196us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 104us; 1195us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 193us; 963us; 0us; 16913us; 0us; 16914us; 0us; 16915us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16916us; 60us; 16918us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 157us; 1051us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16917us; 69us; 32768us; 13us; 1074us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16919us; 61us; 16921us; 13us; 1074us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 157us; 1051us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16920us; 70us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 964us; 29us; 32768us; 10us; 976us; 30us; 1768us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 136us; 1767us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 193us; 963us; 70us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1019us; 4us; 32768us; 10us; 976us; 19us; 1770us; 137us; 1769us; 193us; 963us; 0us; 16922us; 0us; 16923us; 2us; 32768us; 19us; 1770us; 137us; 1769us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 0us; 16927us; 44us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 60us; 1811us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 94us; 1812us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 967us; 10us; 17384us; 10us; 976us; 16us; 1813us; 21us; 1762us; 30us; 1768us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 94us; 1812us; 136us; 1767us; 193us; 963us; 76us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1813us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1809us; 38us; 1810us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1811us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 94us; 1812us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 965us; 9us; 32768us; 10us; 976us; 16us; 1813us; 19us; 1770us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 94us; 1812us; 137us; 1769us; 193us; 963us; 0us; 16928us; 0us; 16929us; 0us; 16930us; 0us; 16931us; 0us; 16932us; 4us; 32768us; 10us; 976us; 30us; 1768us; 136us; 1767us; 193us; 963us; 71us; 32768us; 10us; 976us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 966us; 4us; 32768us; 10us; 976us; 19us; 1770us; 137us; 1769us; 193us; 963us; 0us; 16933us; 0us; 16934us; 0us; 16935us; 0us; 16936us; 0us; 16937us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 32768us; 19us; 1770us; 137us; 1769us; 0us; 16938us; 0us; 16939us; 0us; 16940us; 0us; 16941us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 25us; 16942us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 25us; 16943us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 126us; 1054us; 1us; 17384us; 21us; 1762us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16944us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 10us; 976us; 19us; 696us; 193us; 963us; 1us; 17384us; 21us; 1762us; 70us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1063us; 0us; 16945us; 0us; 16946us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 126us; 1066us; 1us; 17384us; 21us; 1762us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16947us; 69us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 10us; 976us; 19us; 696us; 193us; 963us; 0us; 16948us; 1us; 32768us; 98us; 1383us; 0us; 16949us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 25us; 16950us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16951us; 25us; 16955us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 20us; 16958us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 20us; 16959us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 9us; 16960us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 20us; 16961us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 18us; 16962us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 18us; 16963us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 9us; 16964us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16965us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16966us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16967us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16968us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16970us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 9us; 16971us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 186us; 1139us; 188us; 1146us; 1us; 16972us; 188us; 1146us; 8us; 16973us; 62us; 1143us; 79us; 1141us; 82us; 1114us; 96us; 1144us; 156us; 1140us; 181us; 1142us; 183us; 1145us; 188us; 1146us; 4us; 16974us; 96us; 1144us; 156us; 1140us; 183us; 1145us; 188us; 1146us; 4us; 16975us; 96us; 1144us; 156us; 1140us; 183us; 1145us; 188us; 1146us; 1us; 16976us; 188us; 1146us; 1us; 16977us; 188us; 1146us; 1us; 16978us; 188us; 1146us; 25us; 17015us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 17019us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 17023us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 29us; 32768us; 10us; 976us; 28us; 1196us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 104us; 1195us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 193us; 963us; 23us; 17028us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 32768us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 23us; 17031us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 17082us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 102us; 1129us; 127us; 1126us; 142us; 1307us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 24us; 17078us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 24us; 17080us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 26us; 17136us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 142us; 1380us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 28us; 32768us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 105us; 1474us; 127us; 1126us; 138us; 1475us; 142us; 1380us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 26us; 17132us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 142us; 1381us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 17133us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 25us; 17140us; 62us; 1143us; 63us; 1135us; 70us; 1133us; 79us; 1141us; 80us; 1116us; 81us; 1118us; 82us; 1114us; 83us; 1120us; 89us; 1130us; 90us; 1131us; 96us; 1144us; 97us; 1212us; 102us; 1129us; 127us; 1126us; 143us; 1127us; 156us; 1140us; 158us; 1136us; 159us; 1138us; 181us; 1142us; 182us; 1132us; 183us; 1145us; 185us; 1128us; 186us; 1139us; 187us; 1134us; 188us; 1146us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16952us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16953us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16954us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 16999us; 69us; 1122us; 69us; 32768us; 13us; 1074us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16956us; 1us; 16957us; 97us; 1210us; 6us; 16957us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 97us; 1210us; 193us; 963us; 69us; 32768us; 13us; 1074us; 16us; 1147us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1148us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1149us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1150us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1151us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1152us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1153us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1154us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1155us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1156us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 71us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1157us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 16969us; 69us; 32768us; 13us; 1074us; 16us; 1158us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1159us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1160us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1161us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1162us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1163us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1164us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1165us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 69us; 32768us; 13us; 1074us; 16us; 1166us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 16979us; 0us; 16980us; 0us; 16981us; 0us; 16982us; 0us; 16983us; 0us; 16984us; 0us; 16985us; 0us; 16986us; 0us; 16987us; 0us; 16988us; 0us; 16989us; 0us; 16990us; 0us; 16991us; 0us; 16992us; 0us; 16993us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 17000us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17001us; 39us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1178us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1181us; 0us; 17002us; 39us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1178us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1181us; 3us; 32768us; 10us; 976us; 20us; 1175us; 193us; 963us; 0us; 17003us; 0us; 17004us; 0us; 17005us; 38us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1180us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 2us; 32768us; 98us; 1191us; 193us; 1189us; 2us; 17010us; 57us; 1185us; 193us; 1188us; 38us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1187us; 0us; 17011us; 0us; 17012us; 0us; 17013us; 0us; 17014us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17017us; 3us; 17022us; 27us; 1202us; 139us; 1201us; 140us; 1207us; 0us; 17018us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 22us; 1197us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 17020us; 0us; 17021us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 22us; 1203us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 32768us; 10us; 976us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 193us; 963us; 0us; 17024us; 0us; 17025us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17026us; 0us; 17027us; 75us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1813us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1809us; 38us; 1810us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1811us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 94us; 1812us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 17029us; 75us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1813us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1809us; 38us; 1810us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1811us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 94us; 1812us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 17030us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17335us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17032us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17331us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17033us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17334us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17034us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17347us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17035us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17342us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17036us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 43us; 17343us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17037us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1577us; 88us; 1606us; 91us; 1680us; 92us; 1564us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1241us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1577us; 88us; 1606us; 91us; 1680us; 92us; 1564us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1241us; 2us; 17409us; 34us; 1780us; 35us; 1779us; 33us; 17177us; 14us; 17180us; 21us; 17180us; 26us; 17180us; 34us; 1780us; 35us; 1779us; 72us; 17409us; 74us; 17409us; 87us; 17180us; 92us; 17409us; 106us; 17409us; 111us; 17180us; 121us; 17409us; 135us; 17409us; 146us; 17409us; 153us; 17409us; 163us; 17409us; 164us; 17409us; 165us; 17409us; 166us; 17409us; 167us; 17409us; 168us; 17409us; 169us; 17409us; 170us; 17409us; 171us; 17409us; 172us; 17409us; 173us; 17409us; 174us; 17409us; 175us; 17409us; 177us; 17409us; 178us; 17409us; 190us; 17409us; 191us; 17409us; 192us; 17409us; 27us; 32768us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1240us; 27us; 32768us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1240us; 0us; 17038us; 5us; 17038us; 14us; 17179us; 26us; 17179us; 87us; 17179us; 111us; 17179us; 131us; 492us; 0us; 17039us; 0us; 17040us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17041us; 43us; 32768us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 118us; 1232us; 121us; 1314us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17042us; 35us; 17043us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1250us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 38us; 17043us; 26us; 1427us; 45us; 1273us; 55us; 1281us; 70us; 1414us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 87us; 1423us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1250us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17044us; 5us; 17045us; 33us; 1259us; 34us; 1258us; 35us; 1257us; 75us; 1271us; 77us; 1263us; 34us; 32768us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 5us; 17046us; 33us; 1259us; 34us; 1258us; 35us; 1257us; 75us; 1271us; 77us; 1263us; 5us; 17047us; 33us; 1259us; 34us; 1258us; 35us; 1257us; 75us; 1271us; 77us; 1263us; 2us; 17048us; 33us; 1259us; 34us; 1258us; 1us; 17049us; 33us; 1259us; 5us; 17051us; 33us; 1259us; 34us; 1258us; 35us; 1257us; 75us; 1271us; 77us; 1263us; 5us; 17275us; 33us; 1259us; 34us; 1258us; 35us; 1257us; 75us; 1271us; 77us; 1263us; 34us; 32768us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 34us; 32768us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 158us; 1640us; 0us; 17050us; 34us; 32768us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 34us; 17325us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 17066us; 10us; 976us; 71us; 1295us; 92us; 1288us; 100us; 1697us; 189us; 1686us; 193us; 963us; 0us; 17052us; 1us; 32768us; 77us; 1266us; 6us; 17066us; 10us; 976us; 71us; 1295us; 92us; 1288us; 100us; 1697us; 189us; 1686us; 193us; 963us; 0us; 17053us; 3us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 3us; 17341us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 0us; 17054us; 2us; 32768us; 92us; 1168us; 189us; 1167us; 0us; 17055us; 0us; 17056us; 0us; 17057us; 70us; 17129us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 969us; 3us; 32768us; 10us; 976us; 58us; 1277us; 193us; 963us; 0us; 17058us; 0us; 17059us; 0us; 17060us; 0us; 17061us; 1us; 32768us; 92us; 1282us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17062us; 0us; 17063us; 0us; 17064us; 0us; 17065us; 0us; 17067us; 87us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 57us; 1732us; 62us; 1215us; 63us; 1712us; 70us; 1716us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1269us; 79us; 1289us; 83us; 1724us; 86us; 1013us; 89us; 1227us; 90us; 1230us; 92us; 1341us; 96us; 1715us; 98us; 1076us; 100us; 1697us; 102us; 1717us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 142us; 1727us; 143us; 1723us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1327us; 156us; 1224us; 157us; 1051us; 158us; 1718us; 159us; 1719us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 179us; 1725us; 180us; 1221us; 181us; 1218us; 182us; 1709us; 183us; 1711us; 184us; 1262us; 185us; 1708us; 186us; 1707us; 187us; 1706us; 188us; 1705us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1695us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 1us; 32768us; 77us; 1291us; 1us; 32768us; 175us; 1292us; 0us; 17068us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17069us; 72us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 96us; 1309us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 142us; 1308us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 970us; 3us; 32768us; 10us; 976us; 58us; 1297us; 193us; 963us; 0us; 17070us; 0us; 17071us; 3us; 32768us; 10us; 976us; 58us; 1300us; 193us; 963us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 0us; 17075us; 1us; 17077us; 97us; 1305us; 70us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 96us; 1309us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 142us; 1308us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17076us; 68us; 17079us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17081us; 0us; 17083us; 0us; 17084us; 0us; 17085us; 0us; 17086us; 0us; 17087us; 0us; 17088us; 0us; 17089us; 0us; 17090us; 0us; 17091us; 70us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 141us; 1325us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1323us; 3us; 32768us; 10us; 976us; 141us; 1321us; 193us; 963us; 0us; 17092us; 0us; 17093us; 1us; 32768us; 141us; 1324us; 0us; 17094us; 0us; 17095us; 70us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 971us; 71us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 154us; 1730us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 971us; 3us; 32768us; 10us; 976us; 154us; 1329us; 193us; 963us; 0us; 17096us; 0us; 17097us; 0us; 17098us; 0us; 17099us; 70us; 17129us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 972us; 3us; 32768us; 10us; 976us; 65us; 1335us; 193us; 963us; 0us; 17100us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 79us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1351us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1348us; 38us; 1349us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1350us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 88us; 1392us; 89us; 1226us; 90us; 1229us; 92us; 1340us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 973us; 95us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1351us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1348us; 38us; 1349us; 40us; 698us; 45us; 1273us; 55us; 1281us; 57us; 1732us; 60us; 1350us; 62us; 1215us; 63us; 1712us; 70us; 1716us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1269us; 83us; 1724us; 86us; 1013us; 88us; 1392us; 89us; 1227us; 90us; 1230us; 92us; 1340us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 96us; 1715us; 98us; 1076us; 100us; 1697us; 102us; 1717us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 142us; 1727us; 143us; 1723us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1327us; 156us; 1224us; 157us; 1051us; 158us; 1718us; 159us; 1719us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 179us; 1725us; 180us; 1221us; 181us; 1218us; 182us; 1709us; 183us; 1711us; 184us; 1262us; 185us; 1708us; 186us; 1684us; 187us; 1706us; 188us; 1705us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 974us; 95us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1351us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1348us; 38us; 1349us; 40us; 698us; 45us; 1273us; 55us; 1281us; 57us; 1732us; 60us; 1350us; 62us; 1215us; 63us; 1712us; 70us; 1716us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1269us; 83us; 1724us; 86us; 1013us; 88us; 1392us; 89us; 1227us; 90us; 1230us; 92us; 1340us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 96us; 1715us; 98us; 1076us; 100us; 1697us; 102us; 1717us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 142us; 1727us; 143us; 1723us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1327us; 156us; 1224us; 157us; 1051us; 158us; 1718us; 159us; 1719us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 179us; 1725us; 180us; 1221us; 181us; 1218us; 182us; 1709us; 183us; 1711us; 184us; 1262us; 185us; 1708us; 186us; 1684us; 187us; 1706us; 188us; 1705us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 974us; 0us; 17104us; 9us; 32768us; 10us; 976us; 16us; 1807us; 36us; 1804us; 38us; 1805us; 60us; 1806us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 0us; 17107us; 0us; 17108us; 0us; 17109us; 0us; 17110us; 0us; 17111us; 0us; 17112us; 1us; 32768us; 78us; 1354us; 1us; 32768us; 92us; 1355us; 1us; 16542us; 73us; 298us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17113us; 0us; 17114us; 0us; 17115us; 0us; 17116us; 4us; 17116us; 93us; 17119us; 94us; 17119us; 95us; 17119us; 102us; 17119us; 4us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 102us; 1365us; 0us; 17117us; 1us; 32768us; 186us; 1683us; 0us; 17118us; 75us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 53us; 1408us; 55us; 1281us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 62us; 1214us; 67us; 1418us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1233us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 975us; 5us; 32768us; 10us; 976us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 193us; 963us; 0us; 17120us; 0us; 17121us; 0us; 17122us; 0us; 17123us; 0us; 17124us; 0us; 17125us; 0us; 17126us; 0us; 17127us; 0us; 17128us; 0us; 17130us; 0us; 17131us; 70us; 32768us; 10us; 976us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17134us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17135us; 75us; 32768us; 10us; 976us; 13us; 1074us; 16us; 1813us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1809us; 38us; 1810us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1811us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 94us; 1812us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 17137us; 0us; 17138us; 0us; 17139us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 68us; 32768us; 13us; 1074us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17141us; 2us; 32768us; 190us; 1778us; 191us; 1777us; 3us; 17147us; 36us; 1782us; 37us; 1785us; 108us; 1786us; 0us; 17144us; 36us; 17149us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 78us; 1404us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1250us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 88us; 1397us; 0us; 17142us; 0us; 17143us; 0us; 17146us; 1us; 32768us; 92us; 1401us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17148us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1406us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17150us; 35us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1629us; 0us; 17151us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1577us; 88us; 1606us; 91us; 1680us; 92us; 1564us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 2us; 17409us; 34us; 1780us; 35us; 1779us; 26us; 17145us; 72us; 1333us; 74us; 1367us; 92us; 1339us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17169us; 2us; 17161us; 21us; 1436us; 84us; 1437us; 0us; 17152us; 69us; 32768us; 13us; 1074us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17169us; 2us; 17161us; 21us; 1436us; 84us; 1437us; 0us; 17153us; 1us; 17154us; 70us; 1419us; 69us; 17155us; 13us; 1074us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17169us; 2us; 17161us; 21us; 1436us; 84us; 1437us; 0us; 17156us; 3us; 32768us; 45us; 1687us; 67us; 1441us; 189us; 1686us; 0us; 17169us; 2us; 17161us; 21us; 1436us; 84us; 1437us; 0us; 17157us; 5us; 17161us; 21us; 1436us; 45us; 1687us; 67us; 1441us; 84us; 1437us; 189us; 1686us; 1us; 32768us; 20us; 1429us; 0us; 17158us; 0us; 17169us; 2us; 17161us; 21us; 1436us; 84us; 1437us; 1us; 32768us; 20us; 1433us; 0us; 17159us; 0us; 17160us; 3us; 17160us; 45us; 1687us; 67us; 1441us; 189us; 1686us; 1us; 17162us; 84us; 1439us; 1us; 17163us; 21us; 1438us; 0us; 17164us; 0us; 17165us; 1us; 17166us; 77us; 1689us; 0us; 17167us; 0us; 17168us; 8us; 17173us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 70us; 1444us; 94us; 1812us; 193us; 963us; 76us; 17171us; 10us; 976us; 13us; 1074us; 16us; 1813us; 22us; 940us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 36us; 1809us; 38us; 1810us; 40us; 698us; 45us; 1273us; 55us; 1281us; 60us; 1811us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 94us; 1812us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 17170us; 0us; 17172us; 0us; 17174us; 3us; 17384us; 21us; 1762us; 26us; 1458us; 87us; 1456us; 1us; 17384us; 21us; 1762us; 3us; 17187us; 14us; 541us; 111us; 540us; 193us; 1467us; 0us; 17175us; 2us; 32768us; 14us; 541us; 111us; 540us; 0us; 17176us; 0us; 17178us; 0us; 17181us; 3us; 16542us; 22us; 495us; 73us; 298us; 193us; 733us; 0us; 17183us; 2us; 16542us; 73us; 298us; 193us; 733us; 1us; 32768us; 20us; 1460us; 0us; 17184us; 3us; 17378us; 19us; 1757us; 20us; 1758us; 141us; 1759us; 0us; 17185us; 3us; 17187us; 14us; 541us; 111us; 540us; 193us; 1467us; 0us; 17186us; 3us; 17187us; 14us; 541us; 111us; 540us; 193us; 1467us; 0us; 17188us; 3us; 17187us; 14us; 541us; 111us; 540us; 193us; 1467us; 0us; 17189us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 8us; 17182us; 26us; 1458us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 87us; 1456us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 3us; 17378us; 19us; 1757us; 20us; 1758us; 141us; 1759us; 1us; 17384us; 21us; 1762us; 0us; 17190us; 0us; 17191us; 0us; 17192us; 35us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 32768us; 98us; 1478us; 70us; 32768us; 13us; 1074us; 22us; 935us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1480us; 0us; 17193us; 0us; 17194us; 36us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 67us; 874us; 71us; 868us; 72us; 871us; 74us; 865us; 75us; 875us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1492us; 2us; 32768us; 98us; 1483us; 193us; 1490us; 71us; 32768us; 10us; 976us; 13us; 1074us; 18us; 1487us; 24us; 1481us; 25us; 1496us; 29us; 1069us; 30us; 689us; 31us; 1057us; 32us; 685us; 40us; 698us; 45us; 1273us; 55us; 1281us; 62us; 1214us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 86us; 1013us; 89us; 1226us; 90us; 1229us; 92us; 1341us; 98us; 1076us; 100us; 1697us; 106us; 1315us; 107us; 994us; 114us; 1005us; 115us; 1009us; 116us; 990us; 118us; 1232us; 121us; 1314us; 122us; 1024us; 123us; 1476us; 124us; 1494us; 125us; 1000us; 129us; 1064us; 132us; 1007us; 133us; 1011us; 135us; 1319us; 144us; 1242us; 145us; 1244us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 156us; 1223us; 157us; 1051us; 160us; 679us; 161us; 1047us; 162us; 1049us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 180us; 1220us; 181us; 1217us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 3us; 32768us; 10us; 976us; 20us; 1485us; 193us; 963us; 0us; 17195us; 0us; 17196us; 1us; 32768us; 20us; 1488us; 0us; 17197us; 0us; 17198us; 1us; 32768us; 20us; 1491us; 0us; 17199us; 1us; 32768us; 20us; 1493us; 0us; 17200us; 39us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1178us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1181us; 0us; 17201us; 39us; 32768us; 42us; 472us; 43us; 471us; 44us; 473us; 45us; 464us; 55us; 890us; 57us; 1178us; 67us; 874us; 71us; 868us; 72us; 871us; 73us; 298us; 74us; 865us; 75us; 875us; 82us; 849us; 92us; 883us; 100us; 1697us; 106us; 881us; 121us; 880us; 146us; 882us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 774us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1181us; 1us; 32768us; 20us; 1498us; 0us; 17202us; 1us; 17203us; 85us; 1500us; 4us; 32768us; 51us; 578us; 91us; 1680us; 92us; 593us; 186us; 1683us; 1us; 17205us; 85us; 1502us; 4us; 32768us; 51us; 578us; 91us; 1680us; 92us; 593us; 186us; 1683us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17208us; 1us; 17210us; 98us; 1506us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17209us; 1us; 17212us; 96us; 1509us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17211us; 1us; 17214us; 96us; 1512us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 73us; 298us; 75us; 1525us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17213us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 75us; 1518us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 7us; 17217us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 78us; 1516us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 17215us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 1us; 32768us; 189us; 1686us; 1us; 32768us; 78us; 1520us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 17216us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 7us; 17220us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 78us; 1523us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 17218us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 1us; 32768us; 189us; 1686us; 1us; 32768us; 78us; 1527us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 6us; 17219us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 1us; 17222us; 98us; 1530us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17221us; 1us; 32768us; 10us; 1533us; 0us; 17223us; 8us; 17227us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 96us; 1535us; 183us; 1539us; 186us; 1683us; 189us; 1686us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17224us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17225us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17226us; 8us; 17230us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 96us; 1542us; 183us; 1544us; 186us; 1683us; 189us; 1686us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17228us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17229us; 1us; 17233us; 77us; 1689us; 0us; 17234us; 1us; 17234us; 80us; 1573us; 1us; 17234us; 80us; 1574us; 1us; 17236us; 186us; 1552us; 4us; 17236us; 33us; 1638us; 77us; 1635us; 158us; 1640us; 186us; 1552us; 3us; 32768us; 62us; 791us; 92us; 787us; 175us; 786us; 0us; 17235us; 6us; 32768us; 35us; 1559us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 9us; 32768us; 10us; 976us; 35us; 1558us; 45us; 1687us; 71us; 1583us; 91us; 1680us; 96us; 1617us; 186us; 1683us; 189us; 1686us; 193us; 963us; 0us; 17237us; 62us; 17237us; 10us; 17254us; 14us; 17254us; 15us; 17254us; 16us; 17254us; 17us; 17254us; 19us; 17254us; 20us; 17254us; 21us; 17254us; 26us; 17254us; 30us; 17254us; 32us; 17254us; 34us; 17254us; 40us; 17254us; 42us; 17254us; 43us; 17254us; 44us; 17254us; 46us; 17254us; 47us; 17254us; 49us; 17254us; 50us; 17254us; 51us; 17254us; 53us; 17254us; 59us; 17254us; 60us; 17254us; 61us; 17254us; 72us; 17254us; 73us; 17254us; 74us; 17254us; 84us; 17254us; 87us; 17254us; 92us; 17254us; 106us; 17254us; 109us; 17254us; 111us; 17254us; 118us; 17254us; 121us; 17254us; 131us; 17254us; 135us; 17254us; 136us; 17254us; 141us; 17254us; 146us; 17254us; 153us; 17254us; 160us; 17254us; 163us; 17254us; 164us; 17254us; 165us; 17254us; 166us; 17254us; 167us; 17254us; 168us; 17254us; 169us; 17254us; 170us; 17254us; 171us; 17254us; 172us; 17254us; 173us; 17254us; 174us; 17254us; 175us; 17254us; 177us; 17254us; 178us; 17254us; 190us; 17254us; 191us; 17254us; 192us; 17254us; 193us; 17254us; 1us; 32768us; 71us; 1583us; 1us; 32768us; 71us; 1583us; 0us; 17238us; 62us; 17238us; 10us; 17255us; 14us; 17255us; 15us; 17255us; 16us; 17255us; 17us; 17255us; 19us; 17255us; 20us; 17255us; 21us; 17255us; 26us; 17255us; 30us; 17255us; 32us; 17255us; 34us; 17255us; 40us; 17255us; 42us; 17255us; 43us; 17255us; 44us; 17255us; 46us; 17255us; 47us; 17255us; 49us; 17255us; 50us; 17255us; 51us; 17255us; 53us; 17255us; 59us; 17255us; 60us; 17255us; 61us; 17255us; 72us; 17255us; 73us; 17255us; 74us; 17255us; 84us; 17255us; 87us; 17255us; 92us; 17255us; 106us; 17255us; 109us; 17255us; 111us; 17255us; 118us; 17255us; 121us; 17255us; 131us; 17255us; 135us; 17255us; 136us; 17255us; 141us; 17255us; 146us; 17255us; 153us; 17255us; 160us; 17255us; 163us; 17255us; 164us; 17255us; 165us; 17255us; 166us; 17255us; 167us; 17255us; 168us; 17255us; 169us; 17255us; 170us; 17255us; 171us; 17255us; 172us; 17255us; 173us; 17255us; 174us; 17255us; 175us; 17255us; 177us; 17255us; 178us; 17255us; 190us; 17255us; 191us; 17255us; 192us; 17255us; 193us; 17255us; 0us; 17239us; 62us; 17239us; 10us; 17256us; 14us; 17256us; 15us; 17256us; 16us; 17256us; 17us; 17256us; 19us; 17256us; 20us; 17256us; 21us; 17256us; 26us; 17256us; 30us; 17256us; 32us; 17256us; 34us; 17256us; 40us; 17256us; 42us; 17256us; 43us; 17256us; 44us; 17256us; 46us; 17256us; 47us; 17256us; 49us; 17256us; 50us; 17256us; 51us; 17256us; 53us; 17256us; 59us; 17256us; 60us; 17256us; 61us; 17256us; 72us; 17256us; 73us; 17256us; 74us; 17256us; 84us; 17256us; 87us; 17256us; 92us; 17256us; 106us; 17256us; 109us; 17256us; 111us; 17256us; 118us; 17256us; 121us; 17256us; 131us; 17256us; 135us; 17256us; 136us; 17256us; 141us; 17256us; 146us; 17256us; 153us; 17256us; 160us; 17256us; 163us; 17256us; 164us; 17256us; 165us; 17256us; 166us; 17256us; 167us; 17256us; 168us; 17256us; 169us; 17256us; 170us; 17256us; 171us; 17256us; 172us; 17256us; 173us; 17256us; 174us; 17256us; 175us; 17256us; 177us; 17256us; 178us; 17256us; 190us; 17256us; 191us; 17256us; 192us; 17256us; 193us; 17256us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1629us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1629us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 4us; 32768us; 45us; 1687us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 4us; 32768us; 45us; 1687us; 91us; 1680us; 186us; 1683us; 189us; 1686us; 0us; 17240us; 62us; 17240us; 10us; 17257us; 14us; 17257us; 15us; 17257us; 16us; 17257us; 17us; 17257us; 19us; 17257us; 20us; 17257us; 21us; 17257us; 26us; 17257us; 30us; 17257us; 32us; 17257us; 34us; 17257us; 40us; 17257us; 42us; 17257us; 43us; 17257us; 44us; 17257us; 46us; 17257us; 47us; 17257us; 49us; 17257us; 50us; 17257us; 51us; 17257us; 53us; 17257us; 59us; 17257us; 60us; 17257us; 61us; 17257us; 72us; 17257us; 73us; 17257us; 74us; 17257us; 84us; 17257us; 87us; 17257us; 92us; 17257us; 106us; 17257us; 109us; 17257us; 111us; 17257us; 118us; 17257us; 121us; 17257us; 131us; 17257us; 135us; 17257us; 136us; 17257us; 141us; 17257us; 146us; 17257us; 153us; 17257us; 160us; 17257us; 163us; 17257us; 164us; 17257us; 165us; 17257us; 166us; 17257us; 167us; 17257us; 168us; 17257us; 169us; 17257us; 170us; 17257us; 171us; 17257us; 172us; 17257us; 173us; 17257us; 174us; 17257us; 175us; 17257us; 177us; 17257us; 178us; 17257us; 190us; 17257us; 191us; 17257us; 192us; 17257us; 193us; 17257us; 0us; 17241us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17242us; 62us; 17242us; 10us; 17259us; 14us; 17259us; 15us; 17259us; 16us; 17259us; 17us; 17259us; 19us; 17259us; 20us; 17259us; 21us; 17259us; 26us; 17259us; 30us; 17259us; 32us; 17259us; 34us; 17259us; 40us; 17259us; 42us; 17259us; 43us; 17259us; 44us; 17259us; 46us; 17259us; 47us; 17259us; 49us; 17259us; 50us; 17259us; 51us; 17259us; 53us; 17259us; 59us; 17259us; 60us; 17259us; 61us; 17259us; 72us; 17259us; 73us; 17259us; 74us; 17259us; 84us; 17259us; 87us; 17259us; 92us; 17259us; 106us; 17259us; 109us; 17259us; 111us; 17259us; 118us; 17259us; 121us; 17259us; 131us; 17259us; 135us; 17259us; 136us; 17259us; 141us; 17259us; 146us; 17259us; 153us; 17259us; 160us; 17259us; 163us; 17259us; 164us; 17259us; 165us; 17259us; 166us; 17259us; 167us; 17259us; 168us; 17259us; 169us; 17259us; 170us; 17259us; 171us; 17259us; 172us; 17259us; 173us; 17259us; 174us; 17259us; 175us; 17259us; 177us; 17259us; 178us; 17259us; 190us; 17259us; 191us; 17259us; 192us; 17259us; 193us; 17259us; 1us; 17265us; 80us; 1580us; 1us; 17265us; 80us; 1579us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17243us; 62us; 17243us; 10us; 17260us; 14us; 17260us; 15us; 17260us; 16us; 17260us; 17us; 17260us; 19us; 17260us; 20us; 17260us; 21us; 17260us; 26us; 17260us; 30us; 17260us; 32us; 17260us; 34us; 17260us; 40us; 17260us; 42us; 17260us; 43us; 17260us; 44us; 17260us; 46us; 17260us; 47us; 17260us; 49us; 17260us; 50us; 17260us; 51us; 17260us; 53us; 17260us; 59us; 17260us; 60us; 17260us; 61us; 17260us; 72us; 17260us; 73us; 17260us; 74us; 17260us; 84us; 17260us; 87us; 17260us; 92us; 17260us; 106us; 17260us; 109us; 17260us; 111us; 17260us; 118us; 17260us; 121us; 17260us; 131us; 17260us; 135us; 17260us; 136us; 17260us; 141us; 17260us; 146us; 17260us; 153us; 17260us; 160us; 17260us; 163us; 17260us; 164us; 17260us; 165us; 17260us; 166us; 17260us; 167us; 17260us; 168us; 17260us; 169us; 17260us; 170us; 17260us; 171us; 17260us; 172us; 17260us; 173us; 17260us; 174us; 17260us; 175us; 17260us; 177us; 17260us; 178us; 17260us; 190us; 17260us; 191us; 17260us; 192us; 17260us; 193us; 17260us; 2us; 32768us; 58us; 1584us; 97us; 1585us; 0us; 17244us; 2us; 32768us; 58us; 1586us; 97us; 1587us; 0us; 17245us; 2us; 32768us; 58us; 1588us; 97us; 1589us; 0us; 17246us; 1us; 32768us; 58us; 1590us; 0us; 17247us; 1us; 32768us; 97us; 1592us; 31us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17251us; 1us; 17248us; 97us; 1596us; 4us; 32768us; 10us; 976us; 97us; 1596us; 159us; 1644us; 193us; 963us; 31us; 17297us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17249us; 0us; 17250us; 64us; 17252us; 10us; 17261us; 14us; 17261us; 15us; 17261us; 16us; 17261us; 17us; 17261us; 19us; 17261us; 20us; 17261us; 21us; 17261us; 26us; 17261us; 30us; 17261us; 32us; 17261us; 34us; 17261us; 40us; 17261us; 42us; 17261us; 43us; 17261us; 44us; 17261us; 46us; 17261us; 47us; 17261us; 49us; 17261us; 50us; 17261us; 51us; 17261us; 53us; 17261us; 59us; 17261us; 60us; 17261us; 61us; 17261us; 72us; 17261us; 73us; 17261us; 74us; 17261us; 77us; 1632us; 84us; 17261us; 87us; 17261us; 92us; 17261us; 106us; 17261us; 109us; 17261us; 111us; 17261us; 118us; 17261us; 121us; 17261us; 131us; 17261us; 135us; 17261us; 136us; 17261us; 141us; 17261us; 146us; 17261us; 153us; 17261us; 160us; 17261us; 163us; 17261us; 164us; 17261us; 165us; 17261us; 166us; 17261us; 167us; 17261us; 168us; 17261us; 169us; 17261us; 170us; 17261us; 171us; 17261us; 172us; 17261us; 173us; 17261us; 174us; 17261us; 175us; 17261us; 177us; 17261us; 178us; 17261us; 186us; 1602us; 190us; 17261us; 191us; 17261us; 192us; 17261us; 193us; 17261us; 2us; 17252us; 77us; 1632us; 186us; 1601us; 3us; 32768us; 62us; 791us; 92us; 787us; 175us; 786us; 3us; 32768us; 62us; 791us; 92us; 787us; 175us; 786us; 0us; 17253us; 62us; 17253us; 10us; 17262us; 14us; 17262us; 15us; 17262us; 16us; 17262us; 17us; 17262us; 19us; 17262us; 20us; 17262us; 21us; 17262us; 26us; 17262us; 30us; 17262us; 32us; 17262us; 34us; 17262us; 40us; 17262us; 42us; 17262us; 43us; 17262us; 44us; 17262us; 46us; 17262us; 47us; 17262us; 49us; 17262us; 50us; 17262us; 51us; 17262us; 53us; 17262us; 59us; 17262us; 60us; 17262us; 61us; 17262us; 72us; 17262us; 73us; 17262us; 74us; 17262us; 84us; 17262us; 87us; 17262us; 92us; 17262us; 106us; 17262us; 109us; 17262us; 111us; 17262us; 118us; 17262us; 121us; 17262us; 131us; 17262us; 135us; 17262us; 136us; 17262us; 141us; 17262us; 146us; 17262us; 153us; 17262us; 160us; 17262us; 163us; 17262us; 164us; 17262us; 165us; 17262us; 166us; 17262us; 167us; 17262us; 168us; 17262us; 169us; 17262us; 170us; 17262us; 171us; 17262us; 172us; 17262us; 173us; 17262us; 174us; 17262us; 175us; 17262us; 177us; 17262us; 178us; 17262us; 190us; 17262us; 191us; 17262us; 192us; 17262us; 193us; 17262us; 0us; 17258us; 30us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1609us; 88us; 1606us; 91us; 1680us; 92us; 1610us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 1us; 17263us; 77us; 1632us; 0us; 17264us; 0us; 17265us; 32us; 32768us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 1629us; 5us; 32768us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 6us; 17292us; 10us; 976us; 70us; 1653us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 0us; 17266us; 0us; 17267us; 1us; 32768us; 92us; 1616us; 32us; 32768us; 10us; 976us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 32us; 32768us; 10us; 976us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 5us; 32768us; 10us; 976us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 193us; 963us; 0us; 17268us; 0us; 17269us; 0us; 17270us; 0us; 17271us; 0us; 17272us; 0us; 17273us; 0us; 17274us; 34us; 32768us; 45us; 1273us; 55us; 1281us; 71us; 1275us; 72us; 1333us; 74us; 1367us; 75us; 1268us; 92us; 1341us; 100us; 1697us; 106us; 1315us; 121us; 1314us; 135us; 1319us; 146us; 1313us; 152us; 1265us; 153us; 1326us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 184us; 1261us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17276us; 0us; 17277us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17278us; 0us; 17279us; 2us; 32768us; 45us; 1687us; 189us; 1686us; 3us; 17280us; 33us; 1638us; 77us; 1689us; 158us; 1640us; 0us; 17281us; 7us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 94us; 1812us; 193us; 963us; 0us; 17282us; 0us; 17283us; 1us; 32768us; 158us; 1640us; 0us; 17284us; 34us; 17297us; 10us; 976us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 159us; 1650us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 1us; 32768us; 97us; 1642us; 38us; 17297us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 45us; 1687us; 55us; 1615us; 60us; 1811us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 94us; 1812us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 193us; 963us; 0us; 17251us; 0us; 17285us; 0us; 17286us; 0us; 17287us; 8us; 17295us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 94us; 1812us; 159us; 1648us; 193us; 963us; 0us; 17288us; 0us; 17289us; 0us; 17290us; 0us; 17291us; 1us; 17292us; 70us; 1653us; 31us; 17294us; 45us; 1687us; 55us; 1615us; 67us; 1578us; 88us; 1606us; 91us; 1680us; 92us; 1565us; 106us; 1628us; 113us; 1626us; 121us; 1627us; 146us; 1625us; 163us; 776us; 164us; 775us; 165us; 773us; 166us; 772us; 167us; 771us; 168us; 769us; 169us; 770us; 170us; 768us; 171us; 766us; 172us; 764us; 173us; 762us; 174us; 767us; 175us; 765us; 177us; 763us; 178us; 761us; 183us; 1537us; 186us; 1683us; 189us; 1686us; 190us; 1778us; 191us; 1777us; 192us; 778us; 0us; 17293us; 0us; 17295us; 0us; 17296us; 8us; 32768us; 45us; 1687us; 67us; 1660us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 183us; 1679us; 186us; 1683us; 189us; 1686us; 3us; 32768us; 96us; 1677us; 159us; 1659us; 183us; 1678us; 0us; 17298us; 1us; 32768us; 159us; 1661us; 0us; 17299us; 1us; 17300us; 77us; 1689us; 0us; 17301us; 7us; 32768us; 45us; 1687us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 183us; 1679us; 186us; 1683us; 189us; 1686us; 5us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 96us; 1677us; 183us; 1678us; 0us; 17302us; 1us; 17303us; 186us; 1668us; 3us; 32768us; 62us; 791us; 92us; 787us; 175us; 786us; 0us; 17304us; 0us; 17305us; 6us; 17306us; 45us; 1687us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 186us; 1683us; 189us; 1686us; 0us; 17307us; 0us; 17308us; 0us; 17309us; 0us; 17310us; 0us; 17311us; 7us; 32768us; 45us; 1687us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 183us; 1679us; 186us; 1683us; 189us; 1686us; 7us; 32768us; 45us; 1687us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 183us; 1679us; 186us; 1683us; 189us; 1686us; 7us; 32768us; 45us; 1687us; 91us; 1680us; 92us; 1664us; 175us; 1670us; 183us; 1679us; 186us; 1683us; 189us; 1686us; 1us; 32768us; 189us; 1686us; 0us; 17312us; 0us; 17313us; 1us; 32768us; 189us; 1686us; 1us; 17328us; 189us; 1686us; 0us; 17314us; 0us; 17315us; 0us; 17316us; 0us; 17317us; 8us; 32768us; 10us; 976us; 16us; 1813us; 36us; 1809us; 38us; 1810us; 60us; 1811us; 94us; 1812us; 189us; 1686us; 193us; 963us; 0us; 17318us; 0us; 17319us; 27us; 32768us; 57us; 1732us; 62us; 1714us; 63us; 1712us; 70us; 1716us; 75us; 1720us; 83us; 1724us; 89us; 1721us; 90us; 1722us; 96us; 1715us; 102us; 1717us; 142us; 1727us; 143us; 1723us; 153us; 1729us; 156us; 1726us; 158us; 1718us; 159us; 1719us; 179us; 1725us; 180us; 1713us; 181us; 1710us; 182us; 1709us; 183us; 1711us; 184us; 1704us; 185us; 1708us; 186us; 1707us; 187us; 1706us; 188us; 1705us; 193us; 1695us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17320us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17321us; 0us; 17322us; 1us; 32768us; 57us; 1699us; 5us; 32768us; 67us; 1701us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 189us; 1731us; 0us; 17323us; 1us; 32768us; 57us; 1702us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17324us; 0us; 17325us; 0us; 17326us; 0us; 17327us; 0us; 17328us; 0us; 17329us; 0us; 17330us; 0us; 17331us; 0us; 17332us; 0us; 17333us; 0us; 17334us; 0us; 17335us; 0us; 17336us; 0us; 17337us; 0us; 17338us; 0us; 17339us; 0us; 17340us; 0us; 17341us; 0us; 17342us; 0us; 17343us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 1us; 17348us; 142us; 1728us; 0us; 17349us; 1us; 32768us; 154us; 1730us; 0us; 17350us; 0us; 17351us; 1us; 32768us; 189us; 1731us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17355us; 1us; 17356us; 77us; 1739us; 0us; 17357us; 4us; 32768us; 92us; 1692us; 100us; 1697us; 189us; 1686us; 193us; 1741us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 0us; 17363us; 3us; 17364us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 17365us; 3us; 17367us; 21us; 1745us; 68us; 1744us; 84us; 1743us; 0us; 17366us; 1us; 17368us; 84us; 1752us; 1us; 17369us; 21us; 1753us; 0us; 17370us; 0us; 17371us; 0us; 17372us; 0us; 17373us; 0us; 17374us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17379us; 0us; 17381us; 0us; 17383us; 0us; 17385us; 0us; 17387us; 0us; 17391us; 0us; 17393us; 0us; 17395us; 0us; 17396us; 0us; 17397us; 0us; 17398us; 0us; 17399us; 0us; 17400us; 0us; 17401us; 0us; 17402us; 0us; 17403us; 0us; 17404us; 0us; 17405us; 0us; 17406us; 0us; 17407us; 0us; 17408us; 0us; 17410us; 3us; 32768us; 36us; 1782us; 37us; 1785us; 108us; 1786us; 3us; 17432us; 36us; 1782us; 37us; 1785us; 108us; 1786us; 0us; 17412us; 0us; 17413us; 0us; 17414us; 3us; 32768us; 38us; 1787us; 39us; 1790us; 148us; 1791us; 3us; 17433us; 38us; 1787us; 39us; 1790us; 148us; 1791us; 0us; 17415us; 0us; 17416us; 0us; 17417us; 3us; 32768us; 59us; 1795us; 60us; 1792us; 61us; 1794us; 0us; 17418us; 0us; 17419us; 0us; 17420us; 3us; 32768us; 93us; 1799us; 94us; 1796us; 95us; 1798us; 0us; 17421us; 0us; 17422us; 0us; 17423us; 3us; 32768us; 15us; 1803us; 16us; 1800us; 17us; 1802us; 0us; 17424us; 0us; 17425us; 0us; 17426us; 0us; 17427us; 0us; 17428us; 0us; 17429us; 0us; 17430us; 0us; 17431us; 0us; 17432us; 0us; 17433us; 0us; 17434us; 0us; 17435us; 0us; 17436us; 0us; 17437us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 103us; 104us; 112us; 113us; 182us; 183us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 227us; 228us; 233us; 234us; 239us; 240us; 246us; 247us; 253us; 254us; 260us; 261us; 278us; 279us; 283us; 360us; 386us; 387us; 390us; 391us; 392us; 393us; 395us; 396us; 399us; 400us; 401us; 404us; 405us; 407us; 408us; 413us; 414us; 418us; 420us; 423us; 425us; 427us; 430us; 432us; 434us; 435us; 437us; 438us; 440us; 457us; 458us; 462us; 471us; 490us; 491us; 492us; 493us; 509us; 515us; 517us; 518us; 519us; 526us; 527us; 528us; 532us; 536us; 552us; 553us; 557us; 562us; 563us; 564us; 565us; 569us; 578us; 581us; 587us; 588us; 589us; 590us; 591us; 594us; 596us; 598us; 600us; 602us; 606us; 610us; 613us; 615us; 648us; 650us; 651us; 721us; 747us; 816us; 845us; 846us; 855us; 859us; 860us; 876us; 878us; 882us; 883us; 899us; 901us; 902us; 904us; 905us; 907us; 909us; 910us; 913us; 921us; 922us; 923us; 975us; 977us; 992us; 994us; 998us; 1000us; 1001us; 1003us; 1004us; 1005us; 1006us; 1008us; 1041us; 1042us; 1043us; 1060us; 1064us; 1065us; 1066us; 1068us; 1069us; 1084us; 1090us; 1091us; 1092us; 1108us; 1112us; 1113us; 1114us; 1129us; 1135us; 1136us; 1137us; 1138us; 1139us; 1142us; 1157us; 1158us; 1162us; 1166us; 1177us; 1221us; 1223us; 1227us; 1231us; 1234us; 1236us; 1269us; 1272us; 1274us; 1275us; 1306us; 1313us; 1344us; 1351us; 1353us; 1354us; 1360us; 1362us; 1363us; 1365us; 1366us; 1368us; 1401us; 1402us; 1406us; 1407us; 1411us; 1414us; 1415us; 1416us; 1418us; 1422us; 1423us; 1424us; 1426us; 1427us; 1429us; 1430us; 1446us; 1450us; 1451us; 1454us; 1455us; 1457us; 1458us; 1463us; 1464us; 1466us; 1467us; 1469us; 1470us; 1472us; 1557us; 1558us; 1563us; 1640us; 1726us; 1727us; 1728us; 1812us; 1818us; 1820us; 1821us; 1822us; 1829us; 1830us; 1831us; 1832us; 1837us; 1914us; 1943us; 2027us; 2028us; 2029us; 2030us; 2052us; 2053us; 2137us; 2138us; 2142us; 2149us; 2154us; 2159us; 2160us; 2161us; 2162us; 2166us; 2178us; 2179us; 2181us; 2182us; 2252us; 2253us; 2255us; 2257us; 2258us; 2259us; 2261us; 2267us; 2268us; 2271us; 2272us; 2273us; 2278us; 2279us; 2281us; 2288us; 2294us; 2295us; 2296us; 2302us; 2303us; 2304us; 2305us; 2306us; 2308us; 2392us; 2396us; 2397us; 2398us; 2399us; 2406us; 2410us; 2411us; 2412us; 2414us; 2415us; 2430us; 2433us; 2442us; 2444us; 2445us; 2447us; 2449us; 2450us; 2451us; 2452us; 2453us; 2463us; 2464us; 2468us; 2495us; 2496us; 2500us; 2504us; 2531us; 2532us; 2535us; 2540us; 2543us; 2570us; 2571us; 2573us; 2574us; 2576us; 2577us; 2579us; 2580us; 2582us; 2583us; 2594us; 2595us; 2596us; 2597us; 2598us; 2602us; 2604us; 2605us; 2607us; 2609us; 2610us; 2651us; 2658us; 2659us; 2660us; 2664us; 2667us; 2669us; 2671us; 2673us; 2680us; 2681us; 2693us; 2695us; 2703us; 2705us; 2711us; 2713us; 2714us; 2715us; 2717us; 2718us; 2719us; 2720us; 2722us; 2755us; 2756us; 2757us; 2763us; 2767us; 2768us; 2769us; 2774us; 2775us; 2782us; 2788us; 2789us; 2790us; 2797us; 2803us; 2804us; 2805us; 2806us; 2807us; 2818us; 2819us; 2822us; 2833us; 2834us; 2836us; 2837us; 2839us; 2842us; 2843us; 2844us; 2846us; 2848us; 2849us; 2851us; 2888us; 2890us; 2892us; 2962us; 2963us; 3000us; 3002us; 3006us; 3076us; 3077us; 3078us; 3080us; 3081us; 3085us; 3089us; 3105us; 3154us; 3155us; 3156us; 3159us; 3161us; 3162us; 3193us; 3201us; 3202us; 3204us; 3208us; 3211us; 3213us; 3246us; 3249us; 3251us; 3252us; 3253us; 3255us; 3256us; 3258us; 3259us; 3261us; 3262us; 3298us; 3300us; 3302us; 3372us; 3374us; 3375us; 3377us; 3378us; 3380us; 3384us; 3386us; 3388us; 3420us; 3421us; 3423us; 3427us; 3429us; 3431us; 3433us; 3503us; 3506us; 3507us; 3539us; 3540us; 3542us; 3546us; 3547us; 3548us; 3552us; 3553us; 3554us; 3555us; 3556us; 3557us; 3558us; 3561us; 3565us; 3566us; 3573us; 3577us; 3578us; 3616us; 3646us; 3647us; 3674us; 3676us; 3677us; 3678us; 3679us; 3681us; 3682us; 3683us; 3686us; 3687us; 3688us; 3690us; 3696us; 3697us; 3698us; 3699us; 3702us; 3717us; 3718us; 3722us; 3727us; 3731us; 3733us; 3734us; 3736us; 3737us; 3738us; 3740us; 3742us; 3743us; 3744us; 3745us; 3749us; 3783us; 3786us; 3788us; 3791us; 3792us; 3793us; 3794us; 3795us; 3828us; 3832us; 3833us; 3836us; 3842us; 3843us; 3844us; 3848us; 3849us; 3880us; 3882us; 3883us; 3884us; 3885us; 3886us; 3887us; 3888us; 3894us; 3898us; 3901us; 3903us; 3904us; 3905us; 3907us; 3912us; 3913us; 3916us; 3918us; 3920us; 3923us; 3924us; 3925us; 3928us; 3929us; 3931us; 3933us; 3935us; 3936us; 3937us; 3939us; 3943us; 3945us; 3947us; 3948us; 3949us; 3977us; 3982us; 3984us; 3986us; 3988us; 3993us; 3994us; 3995us; 3998us; 4000us; 4032us; 4033us; 4036us; 4068us; 4069us; 4075us; 4076us; 4080us; 4081us; 4082us; 4084us; 4088us; 4089us; 4120us; 4125us; 4127us; 4129us; 4131us; 4135us; 4136us; 4139us; 4140us; 4141us; 4172us; 4179us; 4186us; 4188us; 4189us; 4191us; 4193us; 4194us; 4197us; 4198us; 4200us; 4202us; 4203us; 4207us; 4211us; 4216us; 4217us; 4249us; 4251us; 4252us; 4285us; 4287us; 4288us; 4307us; 4309us; 4310us; 4311us; 4341us; 4345us; 4346us; 4348us; 4352us; 4353us; 4358us; 4359us; 4378us; 4380us; 4426us; 4427us; 4459us; 4460us; 4462us; 4493us; 4494us; 4496us; 4527us; 4534us; 4541us; 4542us; 4543us; 4546us; 4553us; 4554us; 4555us; 4557us; 4558us; 4562us; 4564us; 4566us; 4598us; 4599us; 4601us; 4602us; 4603us; 4605us; 4609us; 4611us; 4613us; 4614us; 4616us; 4648us; 4649us; 4652us; 4654us; 4657us; 4659us; 4661us; 4664us; 4665us; 4666us; 4736us; 4737us; 4739us; 4742us; 4746us; 4747us; 4817us; 4821us; 4822us; 4823us; 4824us; 4825us; 4826us; 4827us; 4828us; 4830us; 4834us; 4836us; 4839us; 4841us; 4846us; 4850us; 4851us; 4853us; 4855us; 4857us; 4858us; 4860us; 4861us; 4865us; 4872us; 4873us; 4875us; 4881us; 4883us; 4885us; 4886us; 4887us; 4888us; 4890us; 4892us; 4893us; 4897us; 4899us; 4900us; 4903us; 4905us; 4906us; 4908us; 4909us; 4910us; 4912us; 4949us; 4951us; 4955us; 5026us; 5027us; 5028us; 5029us; 5098us; 5104us; 5105us; 5106us; 5107us; 5108us; 5110us; 5111us; 5114us; 5117us; 5187us; 5188us; 5191us; 5192us; 5193us; 5196us; 5228us; 5229us; 5230us; 5231us; 5232us; 5233us; 5234us; 5235us; 5236us; 5237us; 5238us; 5239us; 5240us; 5241us; 5242us; 5243us; 5245us; 5246us; 5247us; 5248us; 5249us; 5251us; 5253us; 5254us; 5256us; 5258us; 5260us; 5261us; 5262us; 5265us; 5269us; 5270us; 5271us; 5274us; 5275us; 5277us; 5279us; 5280us; 5286us; 5287us; 5289us; 5290us; 5292us; 5295us; 5327us; 5328us; 5332us; 5336us; 5337us; 5346us; 5352us; 5353us; 5354us; 5355us; 5359us; 5360us; 5361us; 5365us; 5367us; 5370us; 5373us; 5375us; 5377us; 5384us; 5391us; 5393us; 5394us; 5431us; 5468us; 5470us; 5471us; 5472us; 5509us; 5546us; 5583us; 5620us; 5623us; 5624us; 5626us; 5627us; 5629us; 5632us; 5670us; 5677us; 5707us; 5745us; 5746us; 5782us; 5783us; 5819us; 5820us; 5851us; 5853us; 5854us; 5918us; 5922us; 5923us; 5924us; 5962us; 5963us; 5999us; 6000us; 6036us; 6037us; 6038us; 6040us; 6041us; 6044us; 6048us; 6049us; 6087us; 6089us; 6090us; 6128us; 6130us; 6131us; 6132us; 6134us; 6136us; 6137us; 6138us; 6139us; 6140us; 6141us; 6142us; 6206us; 6212us; 6213us; 6214us; 6218us; 6221us; 6222us; 6224us; 6264us; 6271us; 6272us; 6273us; 6277us; 6278us; 6279us; 6286us; 6291us; 6295us; 6298us; 6302us; 6306us; 6309us; 6316us; 6319us; 6326us; 6335us; 6351us; 6359us; 6361us; 6362us; 6400us; 6402us; 6404us; 6436us; 6437us; 6475us; 6513us; 6514us; 6552us; 6590us; 6628us; 6666us; 6667us; 6670us; 6671us; 6674us; 6675us; 6678us; 6716us; 6717us; 6755us; 6756us; 6825us; 6831us; 6832us; 6833us; 6834us; 6903us; 6907us; 6908us; 6934us; 6936us; 6937us; 6939us; 6971us; 6972us; 6974us; 6975us; 7005us; 7036us; 7067us; 7136us; 7137us; 7206us; 7207us; 7209us; 7278us; 7282us; 7283us; 7355us; 7356us; 7359us; 7362us; 7365us; 7368us; 7371us; 7373us; 7375us; 7377us; 7379us; 7383us; 7387us; 7391us; 7392us; 7394us; 7464us; 7465us; 7466us; 7538us; 7539us; 7540us; 7611us; 7612us; 7613us; 7614us; 7615us; 7616us; 7685us; 7690us; 7691us; 7692us; 7761us; 7767us; 7768us; 7769us; 7839us; 7840us; 7911us; 7941us; 7942us; 7943us; 7944us; 8013us; 8014us; 8075us; 8076us; 8146us; 8147us; 8209us; 8210us; 8281us; 8311us; 8382us; 8387us; 8388us; 8389us; 8392us; 8393us; 8394us; 8395us; 8396us; 8441us; 8452us; 8529us; 8539us; 8540us; 8541us; 8542us; 8543us; 8544us; 8549us; 8621us; 8626us; 8627us; 8628us; 8629us; 8630us; 8631us; 8701us; 8704us; 8705us; 8706us; 8707us; 8708us; 8777us; 8803us; 8872us; 8898us; 8935us; 9005us; 9007us; 9009us; 9079us; 9080us; 9117us; 9187us; 9191us; 9193us; 9264us; 9265us; 9266us; 9335us; 9337us; 9339us; 9409us; 9410us; 9480us; 9484us; 9485us; 9487us; 9488us; 9557us; 9583us; 9652us; 9653us; 9679us; 9700us; 9721us; 9731us; 9752us; 9771us; 9790us; 9800us; 9810us; 9820us; 9830us; 9840us; 9850us; 9860us; 9862us; 9871us; 9876us; 9881us; 9883us; 9885us; 9887us; 9913us; 9939us; 9965us; 9995us; 10019us; 10045us; 10069us; 10095us; 10120us; 10145us; 10172us; 10201us; 10228us; 10254us; 10280us; 10312us; 10313us; 10345us; 10346us; 10378us; 10379us; 10448us; 10450us; 10520us; 10521us; 10523us; 10530us; 10600us; 10670us; 10740us; 10810us; 10880us; 10950us; 11020us; 11090us; 11160us; 11230us; 11302us; 11303us; 11373us; 11443us; 11513us; 11583us; 11653us; 11723us; 11793us; 11863us; 11933us; 11934us; 11935us; 11936us; 11937us; 11938us; 11939us; 11940us; 11941us; 11942us; 11943us; 11944us; 11945us; 11946us; 11947us; 11948us; 11949us; 11950us; 11951us; 11952us; 11953us; 11954us; 12023us; 12027us; 12028us; 12068us; 12069us; 12109us; 12113us; 12114us; 12115us; 12116us; 12155us; 12156us; 12157us; 12158us; 12159us; 12162us; 12165us; 12204us; 12205us; 12206us; 12207us; 12208us; 12277us; 12346us; 12347us; 12351us; 12352us; 12421us; 12423us; 12492us; 12498us; 12499us; 12500us; 12569us; 12571us; 12640us; 12646us; 12647us; 12648us; 12717us; 12718us; 12719us; 12795us; 12796us; 12872us; 12873us; 12917us; 12961us; 12962us; 13006us; 13050us; 13051us; 13095us; 13139us; 13140us; 13184us; 13228us; 13229us; 13273us; 13317us; 13318us; 13362us; 13406us; 13407us; 13439us; 13471us; 13474us; 13508us; 13536us; 13564us; 13565us; 13571us; 13572us; 13573us; 13617us; 13618us; 13662us; 13663us; 13699us; 13738us; 13739us; 13745us; 13780us; 13786us; 13792us; 13795us; 13797us; 13803us; 13809us; 13844us; 13879us; 13881us; 13882us; 13917us; 13952us; 13959us; 13960us; 13962us; 13969us; 13970us; 13974us; 13978us; 13979us; 13982us; 13983us; 13984us; 13985us; 14056us; 14060us; 14061us; 14062us; 14063us; 14064us; 14066us; 14135us; 14136us; 14137us; 14138us; 14139us; 14140us; 14228us; 14232us; 14234us; 14236us; 14237us; 14241us; 14242us; 14315us; 14319us; 14320us; 14321us; 14325us; 14326us; 14327us; 14328us; 14329us; 14331us; 14402us; 14403us; 14472us; 14541us; 14542us; 14543us; 14544us; 14545us; 14546us; 14547us; 14548us; 14549us; 14550us; 14551us; 14622us; 14626us; 14627us; 14628us; 14630us; 14631us; 14632us; 14703us; 14775us; 14779us; 14780us; 14781us; 14782us; 14783us; 14854us; 14858us; 14859us; 14860us; 14861us; 14862us; 14942us; 15038us; 15134us; 15135us; 15145us; 15146us; 15147us; 15148us; 15149us; 15150us; 15151us; 15152us; 15153us; 15154us; 15156us; 15158us; 15160us; 15164us; 15233us; 15234us; 15235us; 15236us; 15237us; 15242us; 15247us; 15248us; 15250us; 15251us; 15327us; 15333us; 15334us; 15335us; 15336us; 15337us; 15338us; 15339us; 15340us; 15341us; 15342us; 15343us; 15344us; 15415us; 15484us; 15485us; 15554us; 15555us; 15631us; 15632us; 15633us; 15634us; 15703us; 15772us; 15773us; 15776us; 15780us; 15781us; 15818us; 15820us; 15821us; 15822us; 15823us; 15825us; 15857us; 15861us; 15862us; 15894us; 15895us; 15931us; 15932us; 15963us; 15966us; 15993us; 15994us; 15997us; 15998us; 16068us; 16069us; 16072us; 16073us; 16075us; 16145us; 16146us; 16149us; 16150us; 16154us; 16155us; 16158us; 16159us; 16165us; 16167us; 16168us; 16169us; 16172us; 16174us; 16175us; 16176us; 16180us; 16182us; 16184us; 16185us; 16186us; 16188us; 16189us; 16190us; 16199us; 16276us; 16277us; 16278us; 16279us; 16283us; 16285us; 16289us; 16290us; 16293us; 16294us; 16295us; 16296us; 16300us; 16301us; 16304us; 16306us; 16307us; 16311us; 16312us; 16316us; 16317us; 16321us; 16322us; 16326us; 16327us; 16358us; 16367us; 16371us; 16373us; 16374us; 16375us; 16376us; 16412us; 16414us; 16485us; 16486us; 16487us; 16524us; 16527us; 16599us; 16603us; 16604us; 16605us; 16607us; 16608us; 16609us; 16611us; 16612us; 16614us; 16615us; 16655us; 16656us; 16696us; 16698us; 16699us; 16701us; 16706us; 16708us; 16713us; 16746us; 16747us; 16749us; 16782us; 16783us; 16785us; 16818us; 16819us; 16821us; 16854us; 16855us; 16887us; 16895us; 16926us; 16933us; 16935us; 16937us; 16968us; 16975us; 16983us; 17014us; 17021us; 17023us; 17025us; 17056us; 17063us; 17065us; 17097us; 17098us; 17100us; 17101us; 17110us; 17141us; 17142us; 17173us; 17174us; 17205us; 17206us; 17215us; 17246us; 17247us; 17278us; 17279us; 17281us; 17282us; 17284us; 17286us; 17288us; 17293us; 17297us; 17298us; 17305us; 17315us; 17316us; 17379us; 17381us; 17383us; 17384us; 17447us; 17448us; 17511us; 17544us; 17577us; 17581us; 17585us; 17590us; 17595us; 17596us; 17659us; 17660us; 17692us; 17724us; 17725us; 17788us; 17790us; 17792us; 17824us; 17856us; 17857us; 17920us; 17923us; 17924us; 17927us; 17928us; 17931us; 17932us; 17934us; 17935us; 17937us; 17969us; 17970us; 17972us; 17977us; 18009us; 18010us; 18011us; 18076us; 18079us; 18083us; 18087us; 18088us; 18151us; 18152us; 18183us; 18185us; 18186us; 18187us; 18220us; 18226us; 18233us; 18234us; 18235us; 18237us; 18270us; 18303us; 18309us; 18310us; 18311us; 18312us; 18313us; 18314us; 18315us; 18316us; 18351us; 18352us; 18353us; 18357us; 18358us; 18359us; 18362us; 18366us; 18367us; 18375us; 18376us; 18377us; 18379us; 18380us; 18415us; 18417us; 18456us; 18457us; 18458us; 18459us; 18460us; 18469us; 18470us; 18471us; 18472us; 18473us; 18475us; 18507us; 18508us; 18509us; 18510us; 18519us; 18523us; 18524us; 18526us; 18527us; 18529us; 18530us; 18538us; 18544us; 18545us; 18547us; 18551us; 18552us; 18553us; 18560us; 18561us; 18562us; 18563us; 18564us; 18565us; 18573us; 18581us; 18589us; 18591us; 18592us; 18593us; 18595us; 18597us; 18598us; 18599us; 18600us; 18601us; 18610us; 18611us; 18612us; 18640us; 18644us; 18645us; 18649us; 18650us; 18651us; 18653us; 18659us; 18660us; 18662us; 18666us; 18667us; 18668us; 18669us; 18670us; 18671us; 18672us; 18673us; 18674us; 18675us; 18676us; 18677us; 18678us; 18679us; 18680us; 18681us; 18682us; 18683us; 18684us; 18685us; 18686us; 18687us; 18688us; 18689us; 18690us; 18692us; 18693us; 18695us; 18696us; 18697us; 18699us; 18700us; 18701us; 18702us; 18703us; 18705us; 18706us; 18711us; 18712us; 18713us; 18714us; 18715us; 18716us; 18717us; 18721us; 18722us; 18726us; 18727us; 18729us; 18731us; 18732us; 18733us; 18734us; 18735us; 18736us; 18737us; 18738us; 18739us; 18740us; 18741us; 18742us; 18743us; 18744us; 18745us; 18746us; 18747us; 18748us; 18749us; 18750us; 18751us; 18752us; 18753us; 18754us; 18755us; 18756us; 18757us; 18758us; 18759us; 18760us; 18761us; 18765us; 18769us; 18770us; 18771us; 18772us; 18776us; 18780us; 18781us; 18782us; 18783us; 18787us; 18788us; 18789us; 18790us; 18794us; 18795us; 18796us; 18797us; 18801us; 18802us; 18803us; 18804us; 18805us; 18806us; 18807us; 18808us; 18809us; 18810us; 18811us; 18812us; 18813us; 18814us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 4us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 4us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 1us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 4us; 3us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 7us; 7us; 7us; 5us; 3us; 4us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 3us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 1us; 1us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 1us; 3us; 2us; 1us; 1us; 3us; 3us; 6us; 6us; 5us; 4us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 36us; 37us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 69us; 69us; 70us; 70us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 75us; 76us; 76us; 76us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 84us; 85us; 86us; 86us; 87us; 87us; 87us; 88us; 88us; 89us; 89us; 89us; 90us; 90us; 91us; 91us; 92us; 92us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 101us; 102us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 104us; 105us; 105us; 105us; 106us; 106us; 107us; 107us; 107us; 108us; 108us; 109us; 109us; 110us; 111us; 112us; 112us; 112us; 113us; 114us; 114us; 115us; 115us; 116us; 116us; 117us; 117us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 118us; 119us; 119us; 120us; 120us; 120us; 121us; 122us; 122us; 123us; 123us; 123us; 123us; 124us; 124us; 124us; 125us; 125us; 125us; 126us; 126us; 127us; 127us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 132us; 133us; 134us; 135us; 136us; 136us; 137us; 137us; 138us; 139us; 139us; 140us; 141us; 142us; 143us; 143us; 143us; 143us; 144us; 144us; 145us; 146us; 146us; 146us; 147us; 147us; 148us; 148us; 149us; 149us; 149us; 149us; 149us; 150us; 150us; 151us; 152us; 152us; 153us; 153us; 154us; 154us; 154us; 155us; 155us; 155us; 156us; 157us; 157us; 158us; 159us; 159us; 160us; 160us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 161us; 162us; 162us; 162us; 162us; 163us; 163us; 164us; 164us; 165us; 165us; 166us; 167us; 167us; 167us; 167us; 168us; 168us; 169us; 169us; 169us; 169us; 169us; 170us; 170us; 170us; 170us; 170us; 170us; 171us; 171us; 172us; 172us; 173us; 173us; 174us; 175us; 175us; 175us; 175us; 175us; 175us; 176us; 176us; 177us; 177us; 177us; 177us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 178us; 179us; 179us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 181us; 181us; 182us; 182us; 183us; 184us; 184us; 185us; 186us; 186us; 186us; 187us; 187us; 187us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 192us; 192us; 192us; 192us; 192us; 192us; 193us; 193us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 194us; 195us; 195us; 196us; 196us; 196us; 197us; 197us; 197us; 197us; 198us; 199us; 199us; 199us; 199us; 199us; 200us; 200us; 201us; 202us; 203us; 203us; 203us; 204us; 204us; 204us; 204us; 204us; 204us; 205us; 205us; 205us; 205us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 206us; 207us; 207us; 208us; 208us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 209us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 210us; 211us; 211us; 212us; 212us; 212us; 212us; 212us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 213us; 214us; 214us; 214us; 214us; 215us; 215us; 215us; 215us; 216us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 219us; 219us; 220us; 220us; 221us; 221us; 221us; 221us; 221us; 222us; 222us; 222us; 223us; 223us; 224us; 224us; 225us; 225us; 225us; 226us; 227us; 227us; 227us; 227us; 228us; 228us; 229us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 233us; 233us; 234us; 234us; 234us; 234us; 234us; 234us; 234us; 234us; 235us; 235us; 236us; 236us; 236us; 236us; 237us; 237us; 238us; 238us; 239us; 239us; 239us; 239us; 239us; 240us; 240us; 240us; 241us; 241us; 241us; 242us; 242us; 243us; 243us; 243us; 244us; 245us; 245us; 245us; 246us; 247us; 247us; 248us; 248us; 248us; 248us; 248us; 248us; 248us; 248us; 249us; 249us; 250us; 250us; 251us; 251us; 252us; 252us; 253us; 253us; 254us; 254us; 255us; 255us; 256us; 256us; 256us; 256us; 256us; 256us; 257us; 257us; 258us; 259us; 259us; 259us; 259us; 260us; 260us; 260us; 261us; 261us; 262us; 262us; 263us; 263us; 264us; 264us; 264us; 264us; 264us; 264us; 264us; 265us; 265us; 265us; 265us; 266us; 267us; 267us; 267us; 268us; 268us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 270us; 270us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 271us; 272us; 272us; 273us; 273us; 273us; 273us; 273us; 273us; 273us; 274us; 274us; 274us; 275us; 275us; 276us; 277us; 277us; 278us; 278us; 278us; 279us; 279us; 279us; 280us; 280us; 281us; 281us; 281us; 281us; 282us; 282us; 283us; 284us; 285us; 285us; 285us; 285us; 286us; 286us; 286us; 286us; 286us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 287us; 288us; 289us; 289us; 290us; 290us; 291us; 291us; 291us; 291us; 292us; 293us; 293us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 296us; 296us; 297us; 297us; 297us; 298us; 298us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 302us; 302us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 312us; 313us; 313us; 313us; 314us; 314us; 315us; 315us; 315us; 316us; 316us; 316us; 317us; 317us; 317us; 318us; 318us; 318us; 319us; 319us; 319us; 320us; 320us; 320us; 320us; 320us; 321us; 321us; 321us; 321us; 321us; 321us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 16528us; 65535us; 65535us; 65535us; 16530us; 16531us; 65535us; 16532us; 16533us; 16534us; 16535us; 65535us; 65535us; 65535us; 16537us; 16538us; 16539us; 65535us; 65535us; 16540us; 16541us; 65535us; 16544us; 65535us; 65535us; 65535us; 65535us; 16545us; 65535us; 65535us; 16546us; 16547us; 16548us; 16549us; 65535us; 16550us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 65535us; 16553us; 65535us; 16554us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 16559us; 16560us; 16561us; 65535us; 65535us; 16562us; 65535us; 65535us; 16563us; 65535us; 65535us; 16566us; 16567us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16568us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16569us; 16570us; 65535us; 16571us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 16578us; 65535us; 65535us; 16579us; 16580us; 65535us; 65535us; 16581us; 16582us; 16583us; 16584us; 65535us; 16585us; 65535us; 65535us; 16587us; 65535us; 16588us; 65535us; 65535us; 16589us; 16590us; 65535us; 65535us; 16592us; 65535us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 65535us; 65535us; 16594us; 16595us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 16598us; 16599us; 65535us; 65535us; 16600us; 65535us; 65535us; 16601us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16602us; 16603us; 65535us; 16604us; 65535us; 16605us; 65535us; 16606us; 65535us; 65535us; 65535us; 65535us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16610us; 65535us; 16612us; 65535us; 65535us; 16613us; 16614us; 65535us; 16615us; 16617us; 16618us; 16619us; 16620us; 16621us; 65535us; 65535us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16628us; 16629us; 16630us; 65535us; 16632us; 16633us; 65535us; 16635us; 16636us; 65535us; 65535us; 16637us; 16638us; 16639us; 65535us; 65535us; 16640us; 65535us; 65535us; 65535us; 65535us; 16642us; 65535us; 16643us; 16644us; 65535us; 65535us; 16645us; 16646us; 16647us; 65535us; 65535us; 65535us; 65535us; 65535us; 16648us; 16649us; 16650us; 16651us; 65535us; 65535us; 16652us; 65535us; 65535us; 16653us; 16654us; 65535us; 16655us; 65535us; 65535us; 16656us; 16657us; 16658us; 16659us; 16660us; 16661us; 65535us; 65535us; 65535us; 65535us; 16664us; 16665us; 65535us; 65535us; 16666us; 65535us; 65535us; 65535us; 65535us; 16667us; 16668us; 65535us; 16669us; 65535us; 65535us; 65535us; 16670us; 16671us; 65535us; 65535us; 65535us; 65535us; 16674us; 16675us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16681us; 16682us; 65535us; 65535us; 65535us; 16683us; 65535us; 65535us; 16684us; 65535us; 16685us; 65535us; 16686us; 16687us; 65535us; 65535us; 16688us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16689us; 65535us; 16690us; 16691us; 65535us; 65535us; 65535us; 65535us; 16695us; 65535us; 65535us; 16696us; 65535us; 16698us; 65535us; 65535us; 16699us; 65535us; 65535us; 65535us; 16701us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 65535us; 16704us; 16705us; 65535us; 65535us; 16706us; 65535us; 65535us; 16707us; 65535us; 16708us; 65535us; 65535us; 65535us; 16710us; 65535us; 16711us; 65535us; 65535us; 16713us; 65535us; 65535us; 65535us; 65535us; 16717us; 16718us; 65535us; 65535us; 16719us; 16720us; 65535us; 16721us; 65535us; 65535us; 65535us; 65535us; 16722us; 65535us; 16723us; 16724us; 65535us; 65535us; 65535us; 65535us; 16725us; 65535us; 65535us; 16727us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16731us; 16732us; 65535us; 16733us; 65535us; 65535us; 65535us; 16734us; 65535us; 65535us; 16735us; 16736us; 16737us; 16738us; 16739us; 16740us; 16741us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16742us; 65535us; 65535us; 65535us; 16746us; 65535us; 16747us; 65535us; 65535us; 16749us; 65535us; 65535us; 65535us; 65535us; 16751us; 16752us; 16753us; 65535us; 65535us; 16754us; 65535us; 65535us; 16757us; 65535us; 65535us; 16758us; 65535us; 16760us; 16761us; 65535us; 65535us; 65535us; 65535us; 65535us; 16762us; 16763us; 16764us; 65535us; 65535us; 16765us; 16766us; 16767us; 65535us; 65535us; 16769us; 65535us; 65535us; 65535us; 16771us; 65535us; 16772us; 16773us; 65535us; 65535us; 16774us; 16775us; 16776us; 16777us; 16778us; 16779us; 16780us; 16781us; 16782us; 16783us; 16784us; 16785us; 16786us; 16787us; 16788us; 65535us; 16789us; 16790us; 16791us; 16792us; 65535us; 65535us; 16793us; 65535us; 65535us; 65535us; 16794us; 16797us; 65535us; 65535us; 16798us; 16799us; 65535us; 16800us; 65535us; 65535us; 16802us; 65535us; 16804us; 65535us; 16805us; 65535us; 65535us; 65535us; 16806us; 65535us; 65535us; 16809us; 65535us; 65535us; 16810us; 16811us; 16812us; 65535us; 16813us; 16814us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16815us; 65535us; 65535us; 65535us; 65535us; 16820us; 65535us; 65535us; 65535us; 65535us; 65535us; 16825us; 65535us; 16826us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16829us; 65535us; 16830us; 65535us; 16831us; 65535us; 65535us; 16833us; 65535us; 65535us; 16834us; 16835us; 65535us; 16836us; 65535us; 16837us; 65535us; 16838us; 16840us; 65535us; 16841us; 65535us; 65535us; 16842us; 65535us; 65535us; 16843us; 65535us; 65535us; 16844us; 16845us; 65535us; 65535us; 16846us; 16847us; 16848us; 16849us; 16850us; 16851us; 65535us; 65535us; 16852us; 16853us; 65535us; 65535us; 16855us; 65535us; 65535us; 65535us; 16856us; 16857us; 65535us; 16858us; 16859us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16862us; 65535us; 65535us; 65535us; 65535us; 16866us; 65535us; 65535us; 16869us; 65535us; 65535us; 65535us; 65535us; 16874us; 65535us; 16875us; 65535us; 16876us; 65535us; 65535us; 16879us; 65535us; 16880us; 65535us; 65535us; 16881us; 16882us; 16883us; 65535us; 65535us; 16884us; 65535us; 65535us; 16886us; 65535us; 65535us; 16888us; 65535us; 16890us; 65535us; 65535us; 65535us; 65535us; 16891us; 65535us; 16894us; 65535us; 65535us; 65535us; 16895us; 65535us; 16897us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16898us; 65535us; 65535us; 16899us; 16900us; 65535us; 16901us; 16902us; 65535us; 16903us; 16904us; 16905us; 16906us; 16907us; 65535us; 65535us; 16908us; 16909us; 65535us; 65535us; 16910us; 16911us; 65535us; 16912us; 65535us; 65535us; 16913us; 16914us; 16915us; 65535us; 65535us; 65535us; 65535us; 65535us; 16919us; 65535us; 16920us; 65535us; 65535us; 65535us; 65535us; 16922us; 16923us; 65535us; 16924us; 16925us; 16926us; 16927us; 65535us; 65535us; 65535us; 65535us; 16928us; 16929us; 16930us; 16931us; 16932us; 65535us; 65535us; 65535us; 16933us; 16934us; 16935us; 16936us; 16937us; 65535us; 65535us; 16938us; 16939us; 16940us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16944us; 65535us; 65535us; 65535us; 65535us; 65535us; 16945us; 16946us; 65535us; 65535us; 65535us; 65535us; 16947us; 65535us; 65535us; 16948us; 65535us; 16949us; 65535us; 65535us; 65535us; 16951us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16952us; 65535us; 16953us; 65535us; 16954us; 65535us; 65535us; 65535us; 16956us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16969us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16979us; 16980us; 16981us; 16982us; 16983us; 16984us; 16985us; 16986us; 16987us; 16988us; 16989us; 16990us; 16991us; 16992us; 16993us; 16994us; 16995us; 16996us; 16997us; 16998us; 17000us; 65535us; 65535us; 17001us; 65535us; 17002us; 65535us; 65535us; 17003us; 17004us; 17005us; 65535us; 17006us; 17007us; 17008us; 17009us; 65535us; 65535us; 65535us; 17011us; 17012us; 17013us; 17014us; 65535us; 65535us; 17017us; 65535us; 17018us; 65535us; 65535us; 65535us; 65535us; 17020us; 17021us; 65535us; 65535us; 65535us; 65535us; 17024us; 17025us; 65535us; 17026us; 17027us; 65535us; 17029us; 65535us; 17030us; 65535us; 65535us; 17032us; 65535us; 65535us; 17033us; 65535us; 65535us; 17034us; 65535us; 65535us; 17035us; 65535us; 65535us; 17036us; 65535us; 65535us; 17037us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17038us; 65535us; 17039us; 17040us; 65535us; 17041us; 65535us; 17042us; 65535us; 65535us; 17044us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17050us; 65535us; 65535us; 65535us; 17052us; 65535us; 65535us; 17053us; 65535us; 65535us; 17054us; 65535us; 17055us; 17056us; 17057us; 65535us; 65535us; 17058us; 17059us; 17060us; 17061us; 65535us; 65535us; 17062us; 17063us; 17064us; 17065us; 17067us; 65535us; 65535us; 65535us; 65535us; 17068us; 65535us; 17069us; 65535us; 65535us; 17070us; 17071us; 65535us; 17072us; 17073us; 17074us; 17075us; 65535us; 65535us; 17076us; 65535us; 65535us; 17081us; 17083us; 17084us; 17085us; 17086us; 17087us; 17088us; 17089us; 17090us; 17091us; 65535us; 65535us; 17092us; 17093us; 65535us; 17094us; 17095us; 65535us; 65535us; 65535us; 17096us; 17097us; 17098us; 17099us; 65535us; 65535us; 17100us; 17101us; 17102us; 17103us; 65535us; 65535us; 65535us; 17104us; 65535us; 17105us; 17106us; 17107us; 65535us; 17108us; 17109us; 17110us; 17111us; 17112us; 65535us; 65535us; 65535us; 65535us; 65535us; 17113us; 17114us; 17115us; 17116us; 65535us; 65535us; 17117us; 65535us; 17118us; 65535us; 65535us; 17120us; 17121us; 17122us; 17123us; 17124us; 17125us; 17126us; 17127us; 17128us; 17130us; 17131us; 65535us; 65535us; 17134us; 65535us; 17135us; 65535us; 17137us; 17138us; 17139us; 65535us; 65535us; 17141us; 65535us; 65535us; 65535us; 65535us; 65535us; 17142us; 17143us; 17146us; 65535us; 65535us; 65535us; 17148us; 65535us; 17150us; 65535us; 17151us; 65535us; 65535us; 65535us; 65535us; 65535us; 17152us; 65535us; 65535us; 65535us; 17153us; 65535us; 65535us; 65535us; 65535us; 17156us; 65535us; 65535us; 65535us; 17157us; 65535us; 65535us; 17158us; 65535us; 65535us; 65535us; 17159us; 17160us; 65535us; 65535us; 65535us; 17164us; 17165us; 65535us; 17167us; 17168us; 65535us; 65535us; 17170us; 17172us; 17174us; 65535us; 65535us; 65535us; 17175us; 65535us; 17176us; 17178us; 17181us; 65535us; 17183us; 65535us; 65535us; 17184us; 65535us; 17185us; 65535us; 17186us; 65535us; 17188us; 65535us; 17189us; 65535us; 65535us; 65535us; 65535us; 17190us; 17191us; 17192us; 65535us; 65535us; 65535us; 17193us; 17194us; 65535us; 65535us; 65535us; 65535us; 17195us; 17196us; 65535us; 17197us; 17198us; 65535us; 17199us; 65535us; 17200us; 65535us; 17201us; 65535us; 65535us; 17202us; 65535us; 65535us; 65535us; 65535us; 65535us; 17208us; 65535us; 65535us; 17209us; 65535us; 65535us; 17211us; 65535us; 65535us; 17213us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17221us; 65535us; 17223us; 65535us; 65535us; 17224us; 65535us; 17225us; 65535us; 17226us; 65535us; 65535us; 17228us; 65535us; 17229us; 65535us; 17234us; 65535us; 65535us; 65535us; 65535us; 65535us; 17235us; 65535us; 65535us; 17237us; 65535us; 65535us; 65535us; 17238us; 65535us; 17239us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17240us; 65535us; 17241us; 65535us; 65535us; 17242us; 65535us; 65535us; 65535us; 65535us; 65535us; 17243us; 65535us; 65535us; 17244us; 65535us; 17245us; 65535us; 17246us; 65535us; 17247us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17249us; 17250us; 65535us; 65535us; 65535us; 65535us; 17253us; 65535us; 17258us; 65535us; 65535us; 17264us; 17265us; 65535us; 65535us; 65535us; 17266us; 17267us; 65535us; 65535us; 65535us; 65535us; 17268us; 17269us; 17270us; 17271us; 17272us; 17273us; 17274us; 65535us; 17276us; 17277us; 65535us; 17278us; 17279us; 65535us; 65535us; 17281us; 65535us; 17282us; 17283us; 65535us; 17284us; 65535us; 65535us; 65535us; 65535us; 17285us; 17286us; 17287us; 65535us; 17288us; 17289us; 17290us; 17291us; 65535us; 65535us; 17293us; 17295us; 17296us; 65535us; 65535us; 17298us; 65535us; 17299us; 65535us; 17301us; 65535us; 65535us; 17302us; 65535us; 65535us; 17304us; 17305us; 65535us; 17307us; 17308us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17312us; 17313us; 65535us; 65535us; 17314us; 17315us; 17316us; 17317us; 65535us; 17318us; 17319us; 65535us; 65535us; 17320us; 65535us; 17321us; 17322us; 65535us; 65535us; 17323us; 65535us; 65535us; 17324us; 17325us; 17326us; 17327us; 17328us; 17329us; 17330us; 17331us; 17332us; 17333us; 17334us; 17335us; 17336us; 17337us; 17338us; 17339us; 17340us; 17341us; 17342us; 17343us; 17344us; 17345us; 17346us; 17347us; 65535us; 17349us; 65535us; 17350us; 17351us; 65535us; 17352us; 17353us; 17354us; 17355us; 65535us; 17357us; 65535us; 17358us; 17359us; 17360us; 17361us; 17362us; 17363us; 65535us; 17365us; 65535us; 17366us; 65535us; 65535us; 17370us; 17371us; 17372us; 17373us; 17374us; 17375us; 17376us; 17377us; 17379us; 17381us; 17383us; 17385us; 17387us; 17391us; 17393us; 17395us; 17396us; 17397us; 17398us; 17399us; 17400us; 17401us; 17402us; 17403us; 17404us; 17405us; 17406us; 17407us; 17408us; 17410us; 65535us; 65535us; 17412us; 17413us; 17414us; 65535us; 65535us; 17415us; 17416us; 17417us; 65535us; 17418us; 17419us; 17420us; 65535us; 17421us; 17422us; 17423us; 65535us; 17424us; 17425us; 17426us; 17427us; 17428us; 17429us; 17430us; 17431us; 17432us; 17433us; 17434us; 17435us; 17436us; 17437us; |]
let _fsyacc_reductions ()  =    [| 
# 2742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2769 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSeqExprEOF));
# 2778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
# 2787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            IDefns (_1,lhs parseState) 
                   )
# 493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 496 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(),rhs parseState 1))
                            IDefns ([],lhs parseState) 
                   )
# 496 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            IDefns ([],lhs parseState) 
                   )
# 500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedFsiInteraction));
# 2819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              
                   )
# 504 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveTerminator));
# 2829 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 505 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   checkEndOfFileError _1 
                   )
# 505 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveTerminator));
# 2840 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 519 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 519 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 522 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 522 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 525 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 525 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 531 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ _3 
                   )
# 531 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 534 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ _3 
                   )
# 534 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 537 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ _3 
                   )
# 537 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveItemsTerminator));
# 2926 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 543 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 543 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveDefns));
# 2937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 546 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 @ _2 
                   )
# 546 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveDefns));
# 2949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()),rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
# 552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveExpr));
# 2966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 562 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [SynModuleDecl.HashDirective(_1,rhs parseState 1)] 
                   )
# 562 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveHash));
# 2977 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 567 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    
                   )
# 567 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveSeparators));
# 2988 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                      
                   )
# 568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveSeparators));
# 3000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 573 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveSeparator));
# 3010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 574 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 574 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interactiveSeparator));
# 3020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 584 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            ParsedHashDirective (_2,_3,lhs parseState) 
                   )
# 584 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hashDirective));
# 3032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 590 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 590 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hashDirectiveArgs));
# 3042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ [_2] 
                   )
# 593 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hashDirectiveArgs));
# 3054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hashDirectiveArg));
# 3065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 608 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 608 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedSigFile));
# 3077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 611 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 611 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedSigFile));
# 3089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 617 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedSigFile([],[emptySigFileFrag]) 
                   )
# 617 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedSigFile));
# 3101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3, _4.Lid, grabXmlDoc(parseState,1), _2 
                   )
# 625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleIntro));
# 3115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 631 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2, _3.Lid, grabXmlDoc(parseState,1)  
                   )
# 631 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namespaceIntro));
# 3127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 637 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             ParsedSigFile([],[ (_1 (false,[],PreXmlDoc.Empty)) ]) 
                   )
# 637 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceSpecs));
# 3138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false,[],PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_,_,_, decls, _,_,_) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_,_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedSigFile(decls, _2) 
                   )
# 640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceSpecs));
# 3163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 658 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _2 
                   )
# 658 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceSpecList));
# 3175 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 661 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 661 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceSpecList));
# 3186 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 665 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let isRec,path,xml = _1 in (_3 (isRec,path,xml)) 
                   )
# 665 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceSpec));
# 3199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 671 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 3 4)
                           let isRec,path2,xml,vis = _3 
                           (fun (isRec2,path,_) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2))
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid, (isRec || isRec2), true, _4, xml,_1,vis,m)))  
                   )
# 671 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileModuleSpec));
# 3220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 681 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path, isRec, false, _1, xml,[],m))  
                   )
# 681 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileModuleSpec));
# 3235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 690 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 690 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 693 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 693 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 696 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                              _2 
                            
                   )
# 696 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 702 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              [] 
                   )
# 702 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 707 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 707 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3296 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 713 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 718 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 
                   )
# 718 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfns));
# 3329 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 721 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (* silent recovery *) _3 
                   )
# 721 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfns));
# 3341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfns));
# 3353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 729 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynModuleSigDecl.HashDirective (_1,rhs2 parseState 1 1)  
                   )
# 729 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3364 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 735 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let isRec, path, xml, vis = _3 
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                             if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             match vis with
                             | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                             | _ -> SynModuleSigDecl.ModuleAbbrev(List.head path,_5,rhs2 parseState 3 5) 
                   )
# 735 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 745 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let isRec, path, xml, vis = _3 
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName())
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             let info = ComponentInfo(_1,[],[],path,xml,false,vis,rhs parseState 3)
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             SynModuleSigDecl.NestedModule(info, isRec, _5, rhs2 parseState 3 5) 
                   )
# 745 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let (TypeDefnSig(ComponentInfo(cas,a,cs,b,c,d,d2,d3),e,f,g)),rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h::t -> h,t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))in 
                             SynModuleSigDecl.Types (tc::rest,rhs parseState 3) 
                   )
# 753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 762 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let (SynExceptionSig(SynExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let ec = (SynExceptionSig(SynExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 762 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 768 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynModuleSigDecl.Open (_2.Lid, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 768 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpfn));
# 3463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 772 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let attr1,attr2,isInline,isMutable,vis2,id,doc,explicitValTyparDecls,(ty,arity),konst = (_1),(_4),(_5),(_6),(_7),(_8),grabXmlDoc(parseState,3),(_9),(_11),(_12) 
                             if not (isNil attr2) then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(),rhs parseState 4))
                             let m = rhs2 parseState 3 11 
                             let valSpfn = ValSpfn((attr1@attr2),id,explicitValTyparDecls,ty,arity,isInline,isMutable,doc, vis2,konst,m) 
                             SynModuleSigDecl.Val(valSpfn,m)
                           
                   )
# 772 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'valSpfn));
# 3489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 783 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             None 
                   )
# 783 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optLiteralValueSpfn));
# 3499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 786 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some(_2) 
                   )
# 786 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optLiteralValueSpfn));
# 3510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 789 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some(_3) 
                   )
# 789 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optLiteralValueSpfn));
# 3522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 797 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 797 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpecBlock));
# 3534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 801 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 
                   )
# 801 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpecBlock));
# 3547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 805 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 805 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleSpecBlock));
# 3559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSig list));
# 3571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 
                   )
# 816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnList));
# 3583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnList));
# 3594 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfn));
# 3607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 828 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             TypeDefnSig(_1,SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState),lhs parseState),_2,lhs parseState) 
                   )
# 828 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfn));
# 3619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 847 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 847 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3651 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.Simple (_1,m),augmentation,m)) 
                   )
# 855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnRhs));
# 3664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            let needsCheck,(kind,decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (kind,decls,m),augmentation,m)) 
                   )
# 860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnRhs));
# 3680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m),AbstractMemberFlags MemberKind.Member,m) 
                            (fun nameRange nameInfo augmentation -> 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                TypeDefnSig(nameInfo,SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[],m)) 
                   )
# 868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconSpfnRhs));
# 3696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 879 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let needsCheck,decls = _1 
                            needsCheck,(TyconUnspecified, decls) 
                   )
# 879 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassSpfn));
# 3708 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 883 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            false,(_1,_2) 
                   )
# 883 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassSpfn));
# 3720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 886 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            false,(_1,_2) 
                   )
# 886 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassSpfn));
# 3734 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 890 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // silent recovery 
                            false,(_1,[]) 
                   )
# 890 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassSpfn));
# 3746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 897 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            true, _2 
                   )
# 897 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                            false, _2 
                   )
# 900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3771 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 905 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            false, _2 
                   )
# 905 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 908 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            false, _2 
                   )
# 908 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 914 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 914 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlock));
# 3806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                             _2 
                   )
# 917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlock));
# 3819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 920 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnBlock));
# 3830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 925 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 925 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnMembers));
# 3841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnMembers));
# 3851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 934 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 
                   )
# 934 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
# 3864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 940 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            let isInline,doc,vis2,id,explicitValTyparDecls,(ty,arity),optLiteralValue = _4,grabXmlDoc(parseState,3),_5,_6,_7,_9,_11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, vis2,optLiteralValue,wholeRange)
                            let _,flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity),wholeRange) 
                   )
# 940 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 954 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            SynMemberSig.Interface (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 954 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 958 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            SynMemberSig.Inherit (_4,unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 958 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            let fld = _4 _1 false 
                            SynMemberSig.ValField(fld,rhs2 parseState 3 4) 
                   )
# 962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 967 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            SynMemberSig.ValField(_5 _1 true,rhs2 parseState 3 5) 
                   )
# 967 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            SynMemberSig.NestedType(_5,rhs2 parseState 3 5) 
                   )
# 971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 975 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let vis,doc,(ty,valSynInfo) = _2,grabXmlDoc(parseState,3),_5 
                            let m = unionRanges (rhs parseState 3) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags,m) 
                   )
# 975 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfn));
# 3985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 985 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           None, MemberKind.Member 
                   )
# 985 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 3995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 988 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 988 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 991 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 991 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4017 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 994 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            Some (rhs2 parseState 1 2), _2 
                   )
# 994 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 1001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1007 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired())
                           MemberKind.PropertyGetSet 
                   )
# 1007 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1014 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       _1 
                   )
# 1014 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberSpecFlags));
# 4070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1015 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1015 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberSpecFlags));
# 4080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           (false,AbstractMemberFlags) 
                   )
# 1016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberSpecFlags));
# 4090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1022 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExceptionSig(_1,_2,lhs parseState) 
                   )
# 1022 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exconSpfn));
# 4102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1028 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 1028 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_classSpfn));
# 4114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1031 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 1031 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_classSpfn));
# 4124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1040 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 1040 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedImplFile));
# 4136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1043 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 1043 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedImplFile));
# 4148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1049 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([],rhs parseState 1) in 
                            ParsedImplFile([],[emptyImplFileFrag]) 
                   )
# 1049 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.ParsedImplFile));
# 4160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1056 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             ParsedImplFile([], [ (_1 (false,[],PreXmlDoc.Empty)) ]) 
                   )
# 1056 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceImpls));
# 4171 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1059 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false,[],PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls,m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_,_,_, decls, _,_,_) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_,_,_,_,_,_,_,m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd,_)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedImplFile(decls, _2) 
                   )
# 1059 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceImpls));
# 4196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _2 
                   )
# 1078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceImplList));
# 4208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1081 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 1081 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceImplList));
# 4219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1087 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
# 1087 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileNamespaceImpl));
# 4232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1093 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           let isRec2,path2,xml,vis = _3 
                           (fun (isRec, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(),m2))
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid, (isRec || isRec2), true, _4, xml,_1,vis,m))) 
                   )
# 1093 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileModuleImpl));
# 4253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1103 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1,m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path, isRec, false, _1, xml,[],m)) 
                   )
# 1103 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fileModuleImpl));
# 4268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1113 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 1113 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynModuleDecl list));
# 4281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1116 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            _2 
                   )
# 1116 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynModuleDecl list));
# 4295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1121 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            []  
                   )
# 1121 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynModuleDecl list));
# 4306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1124 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 1124 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynModuleDecl list));
# 4317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1130 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 1130 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1133 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 1133 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1140 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()),rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
# 1140 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()),rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1154 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()),rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1154 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1161 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1161 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1164 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
# 1164 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1170 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 @ _2 
                   )
# 1170 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefns));
# 4426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1173 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 @ _3 
                   )
# 1173 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefns));
# 4439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1176 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1176 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefns));
# 4450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefns));
# 4462 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1182 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 
                   )
# 1182 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefns));
# 4474 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1  
                   )
# 1188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnOrDirective));
# 4485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1191 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [ SynModuleDecl.HashDirective (_1,rhs2 parseState 1 1) ] 
                   )
# 1191 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefnOrDirective));
# 4496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1200 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             let (BindingSetPreAttrs(_,_,_,_,mWhole)) = _3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole)  
                   )
# 1200 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1207 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let hwlb,m = _3
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             mkDefnBindings (m,hwlb,_1,_2,m)  
                   )
# 1207 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1214 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole,_3,_1,_2,mWhole) 
                   )
# 1214 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1220 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let      (TypeDefn(ComponentInfo(cas   ,a,cs,b,c,d,d2,d3),e,f,g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas,a,cs,b,c,d,d2,d3),e,f,g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 1220 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1228 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let (SynExceptionDefn(SynExceptionDefnRepr(cas,a,b,c,d,d2),e,f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (SynExceptionDefn(SynExceptionDefnRepr(_1@cas,a,b,c,d,d2),e,f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
# 1228 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1236 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let attribs, (isRec, path, xml, vis) = _1,_3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                                 if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 match vis with
                                 | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                                 | _ -> ()
                                 [ SynModuleDecl.ModuleAbbrev(List.head path,eqn,(rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 let info = ComponentInfo(attribs,[],[],path,xml,false,vis,rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info, isRec, def, false,(rhs2 parseState 3 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
# 1236 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1255 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(),rhs parseState 1))
                             [] 
                   )
# 1255 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [SynModuleDecl.Open(_1, _1.Range)] 
                   )
# 1260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleDefn));
# 4632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1268 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2.Lid 
                   )
# 1268 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1271 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1.Lid  
                   )
# 1271 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1277 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Choice2Of2 _2  
                   )
# 1277 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1280 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
# 1280 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation , the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_,LongOrSingleIdent(false,LongIdentWithDots(path,_),None,_),_) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 1284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            Choice2Of2 _2 
                   )
# 1310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1315 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Choice2Of2 [] 
                   )
# 1315 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1318 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Choice2Of2 _1 
                   )
# 1318 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1321 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
# 1321 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namedModuleDefnBlock));
# 4761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1327 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 1327 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4773 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1330 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct())  
                            _2 
                   )
# 1330 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 1334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1339 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 1339 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynMemberDefns));
# 4810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1345 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1345 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_attributes));
# 4821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 1348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_attributes));
# 4831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1353 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 1353 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributes));
# 4842 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1356 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ _2 
                   )
# 1356 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributes));
# 4854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1362 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              _2 
                   )
# 1362 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeList));
# 4867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1365 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              [] 
                   )
# 1365 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeList));
# 4878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1368 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             _2 
                   )
# 1368 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeList));
# 4892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1372 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             [] 
                   )
# 1372 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeList));
# 4904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1379 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 1379 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeListElements));
# 4915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @ [_3] 
                   )
# 1382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeListElements));
# 4928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1389 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 1389 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attribute));
# 4942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1394 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 1394 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attribute));
# 4957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1399 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 1399 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attribute));
# 4973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1406 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some(ident("module",(rhs parseState 1))) 
                   )
# 1406 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeTarget));
# 4984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1409 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some(ident("type",(rhs parseState 1))) 
                   )
# 1409 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeTarget));
# 4995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1411 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       Some(_1) 
                   )
# 1411 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeTarget));
# 5006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1415 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError())
                             Some(ident("return",(rhs parseState 1))) 
                   )
# 1415 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attributeTarget));
# 5018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           (true,StaticMemberFlags) 
                   )
# 1420 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberFlags));
# 5028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1421 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           (false,NonVirtualMemberFlags) 
                   )
# 1421 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberFlags));
# 5038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1422 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           (false,OverrideMemberFlags) 
                   )
# 1422 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberFlags));
# 5048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1423 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          (false,OverrideMemberFlags) 
                   )
# 1423 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberFlags));
# 5058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1428 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let typars,lid,fixity,tpcs1,vis,xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1,typars,(tpcs1 @ tpcs2),lid,xmlDoc,fixity,vis,rangeOfLid lid)  
                   )
# 1428 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeNameInfo));
# 5073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1435 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 :: _3 
                   )
# 1435 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnList));
# 5085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1437 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 1437 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnList));
# 5095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1442 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            TypeDefn(_1,SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range),_1.Range),[],_1.Range) 
                   )
# 1442 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefn));
# 5106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr),members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefn));
# 5122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1452 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1,SynTypeDefnRepr.ObjectModel(TyconAugmentation,[],m),_2,m) 
                   )
# 1452 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefn));
# 5135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1456 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let vis,spats, az = _3,_5,_6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr,members) = _8 nameRange
                            let (ComponentInfo(_,_,_,lid,_,_,_,_)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis,_2,spats,az,rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k,cspec,m) -> SynTypeDefnRepr.ObjectModel (k,memberCtorPattern::cspec,m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            TypeDefn(_1,tcDefRepr,members,mWhole) 
                   )
# 1456 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefn));
# 5164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1482 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1482 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5181 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1486 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
# 1486 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5198 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1491 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1491 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1,m),augmentation) 
                   )
# 1500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhs));
# 5223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1505 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let needsCheck,(kind,decls),mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                SynTypeDefnRepr.ObjectModel (kind,decls,m),augmentation) 
                   )
# 1505 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhs));
# 5241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1516 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            let ty,arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([],mkSynId m "Invoke",inferredTyparDecls,ty,arity,false,false,PreXmlDoc.Empty,None,None,m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags MemberKind.Member,m) 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty,arity),[invoke],m),[]) 
                   )
# 1516 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconDefnRhs));
# 5258 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let needsCheck,decls,mopt = _1 
                            needsCheck,(TyconUnspecified, decls),mopt 
                   )
# 1528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassDefn));
# 5270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1532 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1532 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassDefn));
# 5283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1536 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false,(_1,_2),Some(m) 
                   )
# 1536 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassDefn));
# 5298 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1541 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // silent recovery 
                            false,(_1,[]),Some(rhs parseState 1) 
                   )
# 1541 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconClassDefn));
# 5310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1548 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false,_2,mopt 
                   )
# 1548 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1556 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mopt =
                                match _2 with
                                | _::_ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
# 1556 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5343 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1566 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                             _2 
                   )
# 1566 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBlock));
# 5356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1570 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 1570 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBlock));
# 5368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1573 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1573 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBlock));
# 5379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1579 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 1579 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMembers));
# 5390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 1583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMembers));
# 5401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1586 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 1586 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMembers));
# 5411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1592 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 @  _3 
                   )
# 1592 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMembersAtLeastOne));
# 5424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1598 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2  
                   )
# 1598 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1601 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2  
                   )
# 1601 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1604 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            _2  
                   )
# 1604 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSet));
# 5458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1610 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1]  
                   )
# 1610 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1612 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1;_3] 
                   )
# 1612 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1616 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1,_2,_3,_4,_6,mRhs) 
                   )
# 1616 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 5497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1624 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mRhs = _5.Range 
                             let mWhole = unionRanges (rhs2 parseState 3 4) mRhs 
                             let optReturnType = _3 
                             let bindingBuilder,mBindLhs = _2 
                             (fun vis memFlagsBuilder attrs -> 
                                  [ SynMemberDefn.Member (bindingBuilder (vis,_1,false,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,_5,mRhs,[],attrs,Some(memFlagsBuilder MemberKind.Member)),unionRanges mWhole mBindLhs) ]) 
                   )
# 1624 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberCore));
# 5516 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1633 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_,_,_,_,_,m2) -> m2) 
                            let propertyNameBindingBuilder,_ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline,optAttrs,(bindingBuilder,mBindLhs),optReturnType,expr,exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs = optAttrs |> List.map (fun (a:SynAttribute) -> { a with AppliesToGetterAndSetter=true })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed,optInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id],_),_,_,_,_,_) ->  id.idText
                                                        | SynPat.Named (_,nm,_,_,_) ->  nm.idText
                                                        | SynPat.Typed (p,_,_) ->  go p
                                                        | SynPat.Attrib (p,_,_) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then (
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              ) else if getset = "set" then (
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              ) else 
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it, 
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(),mBindLhs))
                                        | None -> ()
                                        end
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet,_ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis,isInline,isMutable,mBindLhs,NoSequencePointAtInvisibleBinding,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_,valSynInfo,_)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = 
                                                match valueArg with
                                                | [_] -> valueArg
                                                | _ -> SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet,SynValInfo ([],_ret),         false
                                            | MemberKind.PropertyGet,SynValInfo ([_],_ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet,SynValInfo (thisArg::indexOrUnitArgs::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([thisArg; indexOrUnitArgs],ret)
                                            | MemberKind.PropertyGet,SynValInfo (indexOrUnitArgs::rest,ret),          false ->
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument())
                                                SynValInfo ([indexOrUnitArgs],ret)
                                            | MemberKind.PropertySet,SynValInfo ([thisArg;valueArg],ret),                 true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (thisArg::indexArgs::valueArg::rest,ret), true  -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo ([valueArg],ret),                         false -> 
                                                SynValInfo ([adjustValueArg valueArg],ret)
                                            | MemberKind.PropertySet,SynValInfo (indexArgs::valueArg::rest,ret),          _     -> 
                                                if not rest.IsEmpty then reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg],ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo,None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding, 
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis,optInline,isMutable,mBindLhs,spBind,optReturnType,expr,exprm,[],attrs,Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_,_,_,_,_,doc2,_,bindingPatOuter,_,_,_,_)) = bindingOuter 
                                            
                                        
                                            let lidOuter,lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid,None,None, SynConstructorArgs.Pats [],lidVisOuter,m) ->  lid,lidVisOuter
                                                | SynPat.Named (_,id,_,visOuter,m) -> LongIdentWithDots([id],[]),visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner,lidVisOuter with 
                                                | None,None -> None
                                                | Some lidVisInner,None | None,Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(),mBindLhs))
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id],_),_,tyargs,SynConstructorArgs.Pats args,lidVisInner,m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (indexPats,_),indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(indexPats@[valuePat],unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(args,unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText,id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter,Some(id),tyargs, SynConstructorArgs.Pats args,mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Named (_,nm,_,lidVisInner,m) ->  SynPat.LongIdent (lidOuter,None,None, SynConstructorArgs.Pats [], mergeLidVisOuter lidVisInner,m)
                                                | SynPat.Typed (p,ty,m) ->  SynPat.Typed(go p,ty,m)
                                                | SynPat.Attrib (p,attribs,m) ->  SynPat.Attrib(go p,attribs,m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv,PreXmlDoc.Merge doc2 doc
                                        Some <| SynMemberDefn.Member (Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind),mWhole)))
                            
                   )
# 1633 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberCore));
# 5678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1810 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   
                   )
# 1810 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'abstractMemberFlags));
# 5688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          
                   )
# 1811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'abstractMemberFlags));
# 5698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            [mkClassMemberLocalBindings(false,None,_1,_2,_3)] 
                   )
# 1817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            [mkClassMemberLocalBindings(true,Some (rhs parseState 3),_1,_2,_4)] 
                   )
# 1821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                            let _,flags = _3
                            _4 _2 flags _1 
                   )
# 1825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1830 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(),rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(),rhs parseState 3))
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 3 4
                                 | Some(mems) -> (rhs2 parseState 3 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
# 1830 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1839 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,arity = _8
                            let isInline,doc,id,explicitValTyparDecls = _4,grabXmlDoc(parseState,3),_5,_6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity,getSet with SynValInfo([],_),MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(),wholeRange))
                            let valSpfn = ValSpfn(_1,id,explicitValTyparDecls,ty,arity, isInline,false,doc, None,None,wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn,AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
# 1839 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1853 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(),rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(),rhs parseState 1))
                             [ _3 ] 
                   )
# 1853 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1858 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             _3 None _1 false 
                   )
# 1858 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1862 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             _4 (Some (rhs parseState 3)) _1 true  
                   )
# 1862 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1866 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             let isStatic, flags = _3
                             _4 _1 isStatic flags 
                   )
# 1866 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1871 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let m = unionRanges (rhs2 parseState 3 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4],SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"],[]),None,Some noInferredTypars, SynConstructorArgs.Pats [_4],vis,rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false)
                             [ SynMemberDefn.Member(Binding (None,NormalBinding,false,false,_1,grabXmlDoc(parseState,3),valSynData, declPat,None,expr,m,NoSequencePointAtInvisibleBinding),m) ] 
                   )
# 1871 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1881 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(),rhs parseState 2))
                             [ SynMemberDefn.NestedType(_5,None,rhs2 parseState 3 5) ] 
                   )
# 1881 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnMember));
# 5894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1888 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState,4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun mLeft attribs isStatic -> 
                                 let mValDecl = match mLeft with None -> mValDecl | Some m -> unionRanges m mValDecl
                                 let fld = Field(attribs,isStatic,Some _4,_6,_2,doc,_3,mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
# 1888 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'valDefnDecl));
# 5914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let doc = grabXmlDoc(parseState,5)
                             let mValDecl = unionRanges (rhs parseState 1) _7.Range
                             let mGetSetOpt, getSet = _8
                             if _2 then errorR(Error(FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet(),rhs parseState 3))
                             (fun attribs isStatic flags -> 
                                 [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, mValDecl) ]) 
                   )
# 1900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'autoPropsDefnDecl));
# 5935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1910 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        None 
                   )
# 1910 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_typ));
# 5945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      Some _2 
                   )
# 1911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_typ));
# 5956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1915 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              let (LongIdentWithDots(lid,dotms)) = _3 in (None,LongIdentWithDots(ident(MangledGlobalName,rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 1915 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1916 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  (None,_1) 
                   )
# 1916 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         (Some(_1), _2) 
                   )
# 1917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatternLongIdent));
# 5990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1921 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       None 
                   )
# 1921 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_access));
# 6000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1922 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  Some(_1) 
                   )
# 1922 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_access));
# 6011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    SynAccess.Private 
                   )
# 1926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'access));
# 6021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1927 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    SynAccess.Public 
                   )
# 1927 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'access));
# 6031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    SynAccess.Internal 
                   )
# 1928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'access));
# 6041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       Some(_1) 
                   )
# 1932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declVisibility));
# 6052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       None 
                   )
# 1933 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declVisibility));
# 6062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                  Some(_2) 
                   )
# 1937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6074 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1938 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                  None 
                   )
# 1938 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1942 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                       _2 
                   )
# 1942 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_classDefn));
# 6096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                       [] 
                   )
# 1943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_classDefn));
# 6106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2,_3,mDecl) 
                   )
# 1949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'inheritsDefn));
# 6119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1953 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2,_4,_5,mDecl) 
                   )
# 1953 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'inheritsDefn));
# 6134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1957 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None,mDecl) 
                   )
# 1957 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'inheritsDefn));
# 6147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  Some(_1) 
                   )
# 1962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optAsSpec));
# 6158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1963 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  None 
                   )
# 1963 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optAsSpec));
# 6168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1966 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    _2 
                   )
# 1966 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'asSpec));
# 6179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1970 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    Some(_1) 
                   )
# 1970 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optBaseSpec));
# 6190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  None 
                   )
# 1971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optBaseSpec));
# 6200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1976 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)) 
                             ident("base",rhs parseState 2) 
                   )
# 1976 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'baseSpec));
# 6213 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1981 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(),rhs2 parseState 1 2)) 
                             ident("base",rhs parseState 2) 
                   )
# 1981 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'baseSpec));
# 6224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1988 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 1988 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationBlock));
# 6236 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1991 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers())
                             _2 
                   )
# 1991 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationBlock));
# 6249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1995 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 1995 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationBlock));
# 6260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 @  _3 
                   )
# 2001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMembers));
# 6273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2004 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2004 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMembers));
# 6285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2010 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _3 None OverrideMemberFlags _1 
                   )
# 2010 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMember));
# 6299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2013 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _3 _1 false OverrideMemberFlags 
                   )
# 2013 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMember));
# 6313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 2016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMember));
# 6325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2019 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 2019 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objectImplementationMember));
# 6338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2023 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    
                   )
# 2023 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberOrOverride));
# 6348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2024 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      
                   )
# 2024 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'memberOrOverride));
# 6358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2032 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ThereWereSignificantParseErrorsSoDoNotTypecheckThisNode, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
# 2032 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2037 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1))
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(),rhs parseState 2))
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 2037 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2043 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1))
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(),rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_,_,_,_,_,m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(),m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2, 
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
# 2043 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2061 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1))
                            SynTypeDefnSimpleRepr.Record (_2,_3,lhs parseState) 
                   )
# 2061 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2066 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(),rhs parseState 1))
                            libraryOnlyError (lhs parseState)
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(),rhs parseState 2))
                            _4 
                   )
# 2066 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypeDefnSimpleRepr));
# 6448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2075 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 2075 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceFieldDeclList));
# 6460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) 
                            _2 
                   )
# 2078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceFieldDeclList));
# 6473 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2082 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 2082 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceFieldDeclList));
# 6484 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2086 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            libraryOnlyError (lhs parseState)
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (ParseAssemblyCodeType _2 (rhs parseState 2),lhsm) 
                   )
# 2086 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'inlineAssemblyTyconRepr));
# 6497 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2091 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     TyconClass 
                   )
# 2091 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2092 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     TyconInterface 
                   )
# 2092 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2093 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     TyconStruct 
                   )
# 2093 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6527 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2096 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 2096 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interfaceMember));
# 6537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2097 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                
                   )
# 2097 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'interfaceMember));
# 6547 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2101 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [], _2.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2101 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2104 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2, _3.Lid,false,[],_1,grabXmlDoc(parseState,2) 
                   )
# 2104 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2107 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let tps,tpcs = _3 
                             tps, _2.Lid,true,tpcs,_1,grabXmlDoc(parseState,2) 
                   )
# 2107 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2111 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 [ TyparDecl([],_1) ] 
                   )
# 2111 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'prefixTyparDecls));
# 6597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2112 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                        List.rev _2 
                   )
# 2112 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'prefixTyparDecls));
# 6609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2115 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                         _3 :: _1 
                   )
# 2115 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typarDeclList));
# 6621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2116 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     [_1] 
                   )
# 2116 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typarDeclList));
# 6632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2120 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             TyparDecl(_1,_2) 
                   )
# 2120 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typarDecl));
# 6644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2126 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5))
                             List.rev _3, _4 
                   )
# 2126 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'postfixTyparDecls));
# 6660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2133 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (List.rev _1,true) 
                   )
# 2133 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2135 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (List.rev _1,false) 
                   )
# 2135 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2137 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             ([],false) 
                   )
# 2137 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2141 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(),rhs2 parseState 2 5))
                             let tps,flex = _3 
                             SynValTyparDecls(tps,flex,_4) 
                   )
# 2141 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'explicitValTyparDecls));
# 6709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6720 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2149 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynValTyparDecls([],true,[]) 
                   )
# 2149 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2153 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some _1 
                   )
# 2153 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6741 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2155 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             None 
                   )
# 2155 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 2161 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_typeConstraints));
# 6761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2163 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            List.rev _2 
                   )
# 2163 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_typeConstraints));
# 6772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2168 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                              _3 :: _1 
                   )
# 2168 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraints));
# 6784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          [_1] 
                   )
# 2169 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraints));
# 6795 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2175 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2,_4,lhs parseState) 
                   )
# 2175 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2178 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             WhereTyparSubtypeOfType(_1,_3,lhs parseState) 
                   )
# 2178 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2181 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             WhereTyparIsValueType(_1,lhs parseState) 
                   )
# 2181 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3))  
                             WhereTyparIsReferenceType(_1,lhs parseState) 
                   )
# 2184 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             WhereTyparSupportsNull(_1,lhs parseState) 
                   )
# 2188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2191 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let tp = _1
                             WhereTyparSupportsMember([ SynType.Var(tp, tp.Range) ],_4,lhs parseState) 
                   )
# 2191 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2195 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             WhereTyparSupportsMember(List.rev(_2),_6,lhs parseState) 
                   )
# 2195 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6882 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2198 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
# 2198 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2201 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _3 with 
                             | "enum" -> let _ltm,_gtm,args,_commas,mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2201 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2206 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             match _3 with 
                             | "comparison" -> WhereTyparIsComparable(_1,lhs parseState)
                             | "equality" -> WhereTyparIsEquatable(_1,lhs parseState)
                             | "unmanaged" -> WhereTyparIsUnmanaged(_1,lhs parseState)
                             | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2206 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeConstraint));
# 6925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2213 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               _3::_1 
                   )
# 2213 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typarAlts));
# 6937 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2214 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  [_1] 
                   )
# 2214 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typarAlts));
# 6948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2221 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 _1 
                   )
# 2221 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2224 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 _2 
                   )
# 2224 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6973 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2227 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 2227 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : (Ast.SynEnumCase, Ast.SynUnionCase) Choice list));
# 6984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2230 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               grabXmlDoc(parseState,1) 
                   )
# 2230 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'barAndgrabXmlDoc));
# 6994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2233 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                  (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 2233 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecls));
# 7007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2234 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                             (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 2234 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecls));
# 7018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2239 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2))
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields [],xmlDoc,None,mDecl))) 
                           
                   )
# 2239 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecl));
# 7035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2245 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2))
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFields _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2245 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecl));
# 7053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2251 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(),rhs parseState 2))
                             libraryOnlyWarning(lhs parseState)
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3,UnionCaseFullType _5,xmlDoc,None,mDecl))) 
                           
                   )
# 2251 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecl));
# 7072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2258 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2))
                             let mDecl = rhs2 parseState 3 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3,_5,xmlDoc,mDecl))) 
                           
                   )
# 2258 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attrUnionCaseDecl));
# 7090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2266 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2266 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseName));
# 7101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2269 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              ident(opNameCons,rhs parseState 2) 
                   )
# 2269 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseName));
# 7112 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              ident(opNameNil,rhs2 parseState 2 3) 
                   )
# 2272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseName));
# 7123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2276 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Choice2Of2 (UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,rhs parseState 1)) 
                   )
# 2276 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2279 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3)) 
                   )
# 2279 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2282 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2282 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2286 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Choice2Of2 (UnionCase ( [],_1,UnionCaseFields _3,PreXmlDoc.Empty,None,rhs2 parseState 1 3)) 
                   )
# 2286 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'firstUnionCaseDecl));
# 7172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2289 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Choice1Of2 (EnumCase ([],_1,_3,PreXmlDoc.Empty,rhs2 parseState 1 3))  
                   )
# 2289 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'firstUnionCaseDecl));
# 7185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                           _1::_3 
                   )
# 2292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseReprElements));
# 7197 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2293 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                [_1] 
                   )
# 2293 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseReprElements));
# 7208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2296 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               mkNamedField(_1, _3) 
                   )
# 2296 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseReprElement));
# 7220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2297 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   mkAnonField _1 
                   )
# 2297 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseReprElement));
# 7231 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2301 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(),lhs parseState)) 
                            _1 
                   )
# 2301 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseRepr));
# 7243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2305 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 2305 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'unionCaseRepr));
# 7254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 
                   )
# 2310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdFieldDeclList));
# 7267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2313 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 2313 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdFieldDeclList));
# 7279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2318 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let fld = _2 _1 false 
                            let (Field(a,b,c,d,e,f,vis,g)) = fld 
                            if Option.isSome vis then errorR(Error(FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations(),rhs parseState 2))
                            Field(a,b,c,d,e,f,None,g)  
                   )
# 2318 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdFieldDecl));
# 7294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mRhs = rhs2 parseState 3 5 
                            let xmlDoc = grabXmlDoc(parseState,3)
                            (fun attrs stat -> Field(attrs, stat,Some _3,_5,_1,xmlDoc,_2,mRhs)) 
                   )
# 2326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'fieldDecl));
# 7310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExceptionDefn(_1,_2, (_1.Range,_2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
# 2334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExceptionDefn));
# 7322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2338 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     grabXmlDoc(parseState,1) 
                   )
# 2338 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exceptionAndGrabDoc));
# 7332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExceptionDefnRepr(_2,_4,_5,_1,_3,(match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
# 2343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExceptionDefnRepr));
# 7347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields [],PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exconIntro));
# 7358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2351 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             UnionCase ( [], _1,UnionCaseFields _3,PreXmlDoc.Empty,None,lhs parseState) 
                   )
# 2351 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exconIntro));
# 7370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2354 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       None 
                   )
# 2354 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exconRepr));
# 7380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2355 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       Some (_2.Lid) 
                   )
# 2355 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'exconRepr));
# 7391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     _2 
                   )
# 2358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 7402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2367 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd
                                     if not isRec && not (isNilOrSingleton binds) then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                     [],binds), 
                                 bindingSetRange) 
                   )
# 2367 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'defnBindings));
# 7433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2389 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false,false,_1,bindRange)  
                   )
# 2389 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'defnBindings));
# 7445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2396 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,mWhole)]), mWhole) 
                   )
# 2396 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'doBinding));
# 7460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2406 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd,isRec,isUse,
                               (fun attrs vis ->
                                 let binds = localBindingsBuilder attrs vis mLetKwd
                                 if not isRec && not (isNilOrSingleton binds) then
                                     reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                 [],binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 2406 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hardwhiteLetBindings));
# 7493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2432 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoSequencePointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd,false,false,(fun attrs vis -> attrs,[mkSynDoBinding (vis,true,_2,bindingSetRange)]),bindingSetRange), _2 
                   )
# 2432 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hardwhiteDoBinding));
# 7510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        _1 
                   )
# 2442 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBindings));
# 7521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2443 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     _1 
                   )
# 2443 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBindings));
# 7532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2444 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                let b,m = _1 in b 
                   )
# 2444 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBindings));
# 7543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               fst _1 
                   )
# 2445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'classDefnBindings));
# 7554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2451 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (fun _ m -> ()) 
                   )
# 2451 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2453 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (fun kwd m -> reportParseErrorAt m (match kwd with 
                                                                | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                                                | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                                                | "use" -> FSComp.SR.parsUnmatchedUse() 
                                                                | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()))  
                   )
# 2453 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2462 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let rty,vis,nm,args  = _2,_3,_4,_7 
                             let xmlDoc = grabXmlDoc(parseState,1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App(ExprAtomicFlag.NonAtomic,
                                                       false, 
                                                       SynExpr.Ident(ident("failwith",rhs parseState 6)),
                                                       SynExpr.Const(SynConst.String("extern was not given a DllImport attribute",rhs parseState 8),rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm],[]), None, Some noInferredTypars, SynConstructorArgs.Pats [SynPat.Tuple(args,argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoSequencePointAtInvisibleBinding, Some rty ,rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
# 2462 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cPrototype));
# 7612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            List.rev _1 
                   )
# 2484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cArgs));
# 7623 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2487 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 2487 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cArgs));
# 7634 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2489 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 2489 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cArgs));
# 7644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2495 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _3 :: _1 
                   )
# 2495 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cMoreArgs));
# 7656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2498 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_3; _1] 
                   )
# 2498 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cMoreArgs));
# 7668 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2504 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m,_2,m) |> addAttribs _1 
                   )
# 2504 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cArg));
# 7680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2507 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m,_3,false,None,m),_2,m) |> addAttribs _1 
                   )
# 2507 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cArg));
# 7693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2512 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1),None,[],[],None,false,m) 
                   )
# 2512 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cType));
# 7705 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2516 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2516 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cType));
# 7718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2520 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2520 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cType));
# 7730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref",m)],[])),None,[_1],[],None,true,m) 
                   )
# 2524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cType));
# 7742 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint",m)],[])),None,[],[],None,true,m) 
                   )
# 2528 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cType));
# 7753 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2535 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynReturnInfo((_2,SynArgInfo(_1,false,None)),rhs parseState 2) 
                   )
# 2535 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cRetType));
# 7765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2538 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit",m)],[])),None,[],[],None,false,m),SynArgInfo(_1,false,None)),m) 
                   )
# 2538 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'cRetType));
# 7777 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2544 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange,attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
# 2544 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'localBindings));
# 7799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2559 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange,attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false,localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 2559 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moreLocalBindings));
# 7814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2565 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 2565 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moreLocalBindings));
# 7824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2571 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let attrs2 = _1
                             let localBindingRange,localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange,attrLocalBindingBuilder) 
                   )
# 2571 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attr_localBinding));
# 7839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2577 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             None 
                   )
# 2577 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'attr_localBinding));
# 7849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let (expr:SynExpr),opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoSequencePointAtLetBinding else SequencePointAtBinding(mWhole)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,expr,mRhs,opts,attrs,None))
                             localBindingRange,localBindingBuilder 
                   )
# 2583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'localBinding));
# 7875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2597 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding1",zeroWidthAtEnd),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2597 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'localBinding));
# 7899 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2610 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder,mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = SequencePointAtBinding(unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis,_1,_2,mBindLhs,spBind,optReturnType,arbExpr("localBinding2",mRhs),mRhs,[],attrs,None))  
                             mWhole,localBindingBuilder 
                   )
# 2610 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'localBinding));
# 7923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 2625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2628 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile())
                             let a,b = _2
                             (exprFromParseError a, b) 
                   )
# 2628 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2633 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2633 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 7960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2636 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                _1, List.rev _2 
                   )
# 2636 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 7972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2639 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                      _2 :: _1 
                   )
# 2639 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_staticOptimizations));
# 7984 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           [] 
                   )
# 2640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_staticOptimizations));
# 7994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2643 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                      (_2,_4) 
                   )
# 2643 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticOptimization));
# 8006 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2646 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                        _3 :: _1 
                   )
# 2646 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticOptimizationConditions));
# 8018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2647 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                       [_1 ] 
                   )
# 2647 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticOptimizationConditions));
# 8029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2650 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           WhenTyparTyconEqualsTycon(_1,_3,lhs parseState) 
                   )
# 2650 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticOptimizationCondition));
# 8041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2651 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        WhenTyparIsStruct(_1,lhs parseState) 
                   )
# 2651 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticOptimizationCondition));
# 8052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2654 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState))
                                SynConst.SByte (fst _1) 
                   )
# 2654 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2656 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 SynConst.Byte _1 
                   )
# 2656 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2657 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState))
                                 SynConst.Int16 (fst _1) 
                   )
# 2657 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8087 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2659 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.UInt16 _1 
                   )
# 2659 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2660 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynConst.Int32 (fst _1) 
                   )
# 2660 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2662 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.UInt32 _1 
                   )
# 2662 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8121 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2663 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState))
                                 SynConst.Int64 (fst _1) 
                   )
# 2663 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8133 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2665 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.UInt64 _1 
                   )
# 2665 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2666 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     SynConst.IntPtr _1 
                   )
# 2666 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2667 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      SynConst.UIntPtr _1 
                   )
# 2667 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2668 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.Single _1 
                   )
# 2668 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2669 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.Double _1 
                   )
# 2669 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                SynConst.Char _1 
                   )
# 2670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2671 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   SynConst.Decimal _1 
                   )
# 2671 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2672 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  SynConst.UserNum _1 
                   )
# 2672 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2673 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 SynConst.String (_1,lhs parseState) 
                   )
# 2673 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2674 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     SynConst.Bytes (_1,lhs parseState) 
                   )
# 2674 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rawConstant));
# 8243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2678 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
# 2678 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rationalConstant));
# 8259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2684 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
# 2684 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rationalConstant));
# 8275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2689 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
# 2689 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rationalConstant));
# 8287 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2692 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                       SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
# 2692 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rationalConstant));
# 8299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2696 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
# 2696 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _2 
                   )
# 2700 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2703 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                          _1 
                   )
# 2703 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicRationalConstant));
# 8334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2706 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
# 2706 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicRationalConstant));
# 8345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2709 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       _1 
                   )
# 2709 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constant));
# 8356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                            SynConst.Measure(_1, _3) 
                   )
# 2710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constant));
# 8368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2714 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState,1)
                              mkSynBinding (xmlDoc,_1), rhs parseState 1 
                   )
# 2714 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'bindingPattern));
# 8380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynSimplePat.Id (_1,None,false,false,false,rhs parseState 1) 
                   )
# 2720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePattern));
# 8391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2722 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynSimplePat.Id (_2,None,false,false,true,rhs parseState 2) 
                   )
# 2722 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePattern));
# 8402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Typed(_1,_3,lhsm) 
                   )
# 2724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePattern));
# 8415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2727 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let lhsm = lhs parseState 
                             SynSimplePat.Attrib(_2,_1,lhsm) 
                   )
# 2727 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePattern));
# 8428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_1] 
                   )
# 2732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatternCommaList));
# 8439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 :: _3 
                   )
# 2734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatternCommaList));
# 8451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2738 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 2738 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatterns));
# 8463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2740 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 2740 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatterns));
# 8474 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             [] 
                   )
# 2742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatterns));
# 8487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2745 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (* silent recovery *) [] 
                   )
# 2745 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatterns));
# 8498 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2747 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             [] 
                   )
# 2747 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'simplePatterns));
# 8510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2755 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2755 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [SynPat.Tuple ([_1;_3],rhs2 parseState 1 3)],None,lhs parseState) 
                   )
# 2757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2759 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Tuple(List.rev _1, lhs parseState) 
                   )
# 2759 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2761 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 2761 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2763 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2763 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynPat));
# 8579 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2767 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 
                   )
# 2767 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tuplePatternElements));
# 8591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2769 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2769 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tuplePatternElements));
# 8603 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2773 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 
                   )
# 2773 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'conjPatternElements));
# 8615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2775 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2775 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'conjPatternElements));
# 8627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2778 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 [_1], lhs parseState 
                   )
# 2778 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namePatPairs));
# 8639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2779 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                          let (rs, _) = _3 in (_1::rs), lhs parseState 
                   )
# 2779 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namePatPairs));
# 8652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2782 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                      (_1, _3) 
                   )
# 2782 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'namePatPair));
# 8664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2786 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,Some _2, SynConstructorArgs.Pats [],vis,lhs parseState) 
                   )
# 2786 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2788 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _3,vis,lhs parseState) 
                   )
# 2788 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8689 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2790 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2790 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2792 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let vis,lid = _1 in SynPat.LongIdent (lid,None,_2, _4,vis,lhs parseState) 
                   )
# 2792 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2794 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.IsInst(_2,lhs parseState) 
                   )
# 2794 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2796 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2796 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'constrPattern));
# 8737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                      SynConstructorArgs.NamePatPairs _2 
                   )
# 2799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8749 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2800 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          SynConstructorArgs.Pats _1 
                   )
# 2800 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2804 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 :: _2 
                   )
# 2804 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatterns));
# 8772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2806 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
# 2806 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatterns));
# 8785 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2809 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
# 2809 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatterns));
# 8798 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         [_1] 
                   )
# 2811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPatterns));
# 8809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.QuoteExpr(_1,lhs parseState) 
                   )
# 2816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                             SynPat.DeprecatedCharRange (_1,_3,rhs2 parseState 1 3) 
                   )
# 2817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 2819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.ArrayOrList(false,_2,lhs parseState) 
                   )
# 2821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2823 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.ArrayOrList(true,_2, lhs parseState) 
                   )
# 2823 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 2825 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2827 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.OptionalVal(_2,lhs parseState) 
                   )
# 2827 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let vis,lidwd = _1 
                             if not (isNilOrSingleton lidwd.Lid) || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
# 2829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8901 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2834 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Const (_1,_1.Range (lhs parseState)) 
                   )
# 2834 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2836 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Const(SynConst.Bool false,lhs parseState) 
                   )
# 2836 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2838 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Const(SynConst.Bool true,lhs parseState) 
                   )
# 2838 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8932 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2840 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 2840 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m,m) 
                   )
# 2842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2845 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 2845 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8968 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2848 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 2848 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2850 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                              SynPat.Wild (lhs parseState)
                   )
# 2850 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 8991 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2853 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.StructTuple(List.rev _3,lhs parseState) 
                   )
# 2853 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 9003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                             SynPat.StructTuple(List.rev _3,lhs parseState) 
                   )
# 2855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 9016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2858 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 2858 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 9027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 2860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicPattern));
# 9039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2867 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun m -> _1) 
                   )
# 2867 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPatternBody));
# 9050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit,m)) 
                   )
# 2869 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPatternBody));
# 9060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2898 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Named (_1,_3,false,None,rhs2 parseState 1 3) 
                   )
# 2898 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9072 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Or(_1,_3,rhs2 parseState 1 3) 
                   )
# 2900 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2902 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Tuple(List.rev _1,lhs parseState) 
                   )
# 2902 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2904 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.Ands(List.rev _1,rhs2 parseState 1 3) 
                   )
# 2904 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9106 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2906 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1,_3,lhsm) 
                   )
# 2906 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2909 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2,_1,lhsm) 
                   )
# 2909 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2912 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons,[]), None, None, SynConstructorArgs.Pats [ SynPat.Tuple ([_1;_3],rhs2 parseState 1 3) ],None,lhs parseState) 
                   )
# 2912 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2913 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         _1 
                   )
# 2913 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenPattern));
# 9155 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 
                   )
# 2917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleParenPatternElements));
# 9167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2919 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2919 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleParenPatternElements));
# 9179 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 
                   )
# 2923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'conjParenPatternElements));
# 9191 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2925 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2925 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'conjParenPatternElements));
# 9203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                    let rs,m = _1 in SynPat.Record (rs,m) 
                   )
# 2928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recordPatternElements));
# 9214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_1],lhs parseState 
                   )
# 2932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recordPatternElementsAux));
# 9226 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2934 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let r = _1 in let (rs,dropMark) = _3 in (r :: rs),lhs parseState 
                   )
# 2934 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recordPatternElementsAux));
# 9239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                    (List.frontAndBack _1.Lid,_3) 
                   )
# 2937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recordPatternElement));
# 9251 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2941 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 2941 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'listPatternElements));
# 9261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_1] 
                   )
# 2943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'listPatternElements));
# 9273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2945 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 :: _3 
                   )
# 2945 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'listPatternElements));
# 9286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 2950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9298 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2952 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                             exprFromParseError _2 
                   )
# 2952 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2955 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2955 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2960 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 2960 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2962 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2967 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                         _1 
                   )
# 2967 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedSeqExprBlockR));
# 9356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2968 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        _1 
                   )
# 2968 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedSeqExprBlockR));
# 9367 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                               SynExpr.Typed (_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 2971 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedSeqExpr));
# 9379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2972 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   _1 
                   )
# 2972 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typedSeqExpr));
# 9390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2975 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                            checkEndOfFileError _2; _1 
                   )
# 2975 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2979 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,true,_1,_3,unionRanges _1.Range _3.Range) 
                   )
# 2979 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2981 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2981 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2983 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 2983 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2985 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_3,unionRanges _1.Range _3.Range ) 
                   )
# 2985 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2987 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Sequential(SequencePointsAtSeq,false,_1,_4,unionRanges _1.Range _4.Range) 
                   )
# 2987 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2989 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let hwlb,m = _1
                            let mLetKwd,isUse = match hwlb with (BindingSetPreAttrs(m,_,isUse,_,_))  -> m,isUse
                            let usedKeyword = if isUse then "use" else "let"
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedExpressionAfterLet(usedKeyword,usedKeyword))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m,hwlb,arbExpr("seqExpr",fauxRange)) 
                   )
# 2989 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seqExpr));
# 9479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  debugPrint("recovering via error"); true 
                   )
# 3001 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recover));
# 9489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3002 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                debugPrint("recovering via EOF"); false 
                   )
# 3002 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recover));
# 9500 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3007 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range,_1,_3) 
                   )
# 3007 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3010 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2,_1,arbExpr("declExpr1",(rhs parseState 3))) 
                   )
# 3010 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _2.Range,hwlb,_2) 
                   )
# 3016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3020 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let hwlb,m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m,hwlb,arbExpr("declExpr2",(rhs parseState 2))) 
                   )
# 3020 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3025 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let hwlb,m = _1
                            mkLocalBindings (unionRanges m _3.Range ,hwlb,_3) 
                   )
# 3025 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3029 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let hwlb,m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m,_,_,_,_))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3),hwlb,arbExpr("declExpr3",(rhs parseState 3))) 
                   )
# 3029 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9575 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3034 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let e = snd _1
                            SynExpr.Do(e,e.Range) 
                   )
# 3034 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9587 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3038 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3038 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3041 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3041 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3044 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith,(clauses,mLast) = _3 
                             let spBind = SequencePointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match(spBind, _2,clauses,false,unionRanges mMatch mLast) 
                   )
# 3044 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3050 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 3050 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3055 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = SequencePointAtTry(mTry) 
                             let mWith,(clauses,mLast) = _3 
                             let spWith = SequencePointAtWith(mWith) 
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith(_2, mTryToWith, clauses,mWithToLast, mTryToLast,spTry,spWith) 
                   )
# 3055 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3065 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry())
                             exprFromParseError _2 
                   )
# 3065 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3071 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = SequencePointAtTry(mTry) 
                             let spFinally = SequencePointAtFinally(rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally(_2, _4,mTryToLast,spTry,spFinally) 
                   )
# 3071 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 3078 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3082 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()) 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 3082 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3090 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = (rhs parseState 1)
                             let mEnd = m.EndRange
                             let spIfToThen = SequencePointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse(arbExpr("ifGuard1",mEnd),arbExpr("thenBody1",mEnd),None,spIfToThen,true,m,m)) 
                   )
# 3090 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3099 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3099 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3102 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3102 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3105 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3105 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9767 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3108 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Lazy(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3108 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3111 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Assert(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3111 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3114 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3114 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9799 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3117 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While(spWhile,_2,_4,mWhileAll) 
                   )
# 3117 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9816 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3123 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While(spWhile,_2,_4,mWhileAll)) 
                   )
# 3123 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3130 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While(spWhile,_2,arbExpr("whileBody1",mWhileBodyArb),mWhileAll) 
                   )
# 3130 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9852 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3138 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,_2,arbExpr("whileBody2",mWhileBodyArb),mWhileAll))  
                   )
# 3138 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3146 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             arbExpr("whileLoop1",rhs parseState 1)  
                   )
# 3146 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3150 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = SequencePointAtWhileLoop mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While(spWhile,arbExpr("whileGuard1",mWhileHeader),arbExpr("whileBody3",mWhileBodyArb),mWhileAll))  
                   )
# 3150 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3158 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3158 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9913 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3163 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let spBind = SequencePointAtForLoop(rhs2 parseState 1 3)
                             let (a,b,_) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,_4,mForLoopAll) 
                   )
# 3163 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2a",mForLoopBodyArb),mForLoopAll) 
                   )
# 3170 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,_) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody2",mForLoopBodyArb),mForLoopAll) 
                   )
# 3179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let (a,b,ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,a,b,arbExpr("forLoopBody1",mForLoopBodyArb),mForLoopAll) 
                   )
# 3188 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 9987 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3197 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll) 
                   )
# 3197 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3204 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,_4,mForLoopAll)) 
                   )
# 3204 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3213 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll) 
                   )
# 3213 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3222 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3222 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3231 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let (a,b,c,d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For(spBind,a,b,c,d,arbExpr("declExpr11",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3231 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3241 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = SequencePointAtForLoop(mForLoopHeader)
                             SynExpr.For(spBind,mkSynId mForLoopHeader "_loopVar",arbExpr("startLoopRange1",mForLoopHeader),true,arbExpr("endLoopRange1",rhs parseState 3),_4,mForLoopAll) 
                   )
# 3241 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12",(rhs parseState 1)) 
                   )
# 3260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3264 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll) 
                   )
# 3264 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = SequencePointAtForLoop mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach(spBind,SeqExprOnly false,true,_2,arbExpr("forLoopCollection",mForLoopHeader),arbExpr("forLoopBody3",mForLoopBodyArb),mForLoopAll)) 
                   )
# 3272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10144 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3281 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExpr.YieldOrReturn((_1,not _1),_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3281 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExpr.YieldOrReturnFrom((_1,not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3287 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let spBind = SequencePointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3287 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1)  // report unterminated error 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _7.Range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4,_7,m) 
                   )
# 3292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3298 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = SequencePointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind,(_1 = "use"),true,_2,_4, SynExpr.ImplicitZero m, mAll) 
                   )
# 3298 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3305 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let spBind = NoSequencePointAtDoBinding
                            SynExpr.LetOrUseBang(spBind,false,true,SynPat.Const(SynConst.Unit,_2.Range),_2,_5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 3305 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3309 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExpr.DoBang(_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3309 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3312 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let spBind = SequencePointAtForLoop(rhs2 parseState 1 2)
                            let (a,b,_) = _2 in SynExpr.ForEach(spBind,SeqExprOnly true,true,a,b,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3312 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10263 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3316 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExpr.Fixed(_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3316 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10274 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3319 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(),lhs parseState))
                            SynExpr.YieldOrReturn((true,true),_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3319 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3324 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                             SynExpr.TypeTest(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3324 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10298 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3325 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                             SynExpr.Upcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3325 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                             SynExpr.Downcast(_1,_3, unionRanges _1.Range _3.Range) 
                   )
# 3326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3329 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 3329 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3330 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                         mkSynAssign _1 _3 
                   )
# 3330 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3332 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                        let exprs,commas = _1 in SynExpr.Tuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 3332 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3333 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    SynExpr.JoinIn(_1,rhs parseState 2,_3,unionRanges _1.Range _3.Range) 
                   )
# 3333 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 3334 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3335 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3335 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10394 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3336 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 3336 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3337 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 3337 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3338 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 3338 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3339 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3339 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10443 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3340 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 3340 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10455 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3341 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3341 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3342 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 3342 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 3343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10493 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3344 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                   if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<"))  
                                                                   exprFromParseError (mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3344 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3346 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 3346 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10520 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3347 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3347 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3349 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;_3],[rhs parseState 2],unionRanges _1.Range _3.Range),unionRanges _1.Range _3.Range) 
                   )
# 3349 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3350 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3350 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10571 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3351 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 3351 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10583 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3352 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 3352 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3353 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3353 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3354 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                    mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3354 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3356 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3356 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3360 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3360 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3362 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3362 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3364 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3364 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3366 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3366 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3368 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3368 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3370 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3370 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10719 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3372 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3372 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3374 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3374 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3376 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3376 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3378 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3378 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3380 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3380 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3384 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")) 
                                                                                 SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons,SynExpr.Tuple ([_1;(arbExpr("declExprInfix",(rhs parseState 3).StartRange))],[rhs parseState 2],unionRanges _1.Range (rhs parseState 3).StartRange),unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
# 3384 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3386 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3386 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3388 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3388 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3390 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3390 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3392 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3392 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3394 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                                 reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                                                                                 exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix",(rhs parseState 3).StartRange))) 
                   )
# 3394 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10871 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3397 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                  _1 
                   )
# 3397 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 10882 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3401 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let con = SynConst.String (_1,rhs parseState 1)
                             let arg2 = SynExpr.Const (con,con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 3401 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'dynamicArg));
# 10895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3405 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 3405 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'dynamicArg));
# 10907 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3409 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3409 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withClauses));
# 10918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3411 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3411 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withClauses));
# 10929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3413 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith())
                             rhs parseState 1, _2 
                   )
# 3413 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withClauses));
# 10942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3418 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3418 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withPatternClauses));
# 10953 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3420 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              _2 
                   )
# 3420 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withPatternClauses));
# 10964 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3422 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3422 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withPatternClauses));
# 10976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3426 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              // silent recovery 
                              let mLast = rhs parseState 1
                              [], mLast 
                   )
# 3426 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'withPatternClauses));
# 10988 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3433 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 3433 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternAndGuard));
# 11000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3437 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3437 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternClauses));
# 11014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3441 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let pat,guard,patm = _1 
                            let clauses,mLast = _4 
                            (Clause(pat,guard,_2,patm,SequencePointAtTarget) :: clauses), mLast 
                   )
# 3441 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternClauses));
# 11029 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast  
                   )
# 3445 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternClauses));
# 11044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3450 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat,guard,_2,patm,SequencePointAtTarget)], mLast 
                   )
# 3450 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternClauses));
# 11059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3455 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let pat,guard,patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat,guard,SynExpr.Const(SynConst.Unit,mLast.EndRange),patm,SequencePointAtTarget)], mLast 
                   )
# 3455 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternClauses));
# 11073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3462 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            Some _2 
                   )
# 3462 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternGuard));
# 11084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3464 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            None 
                   )
# 3464 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'patternGuard));
# 11094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3468 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 3468 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3472 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let exprThen,mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = SequencePointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse(exprGuard,exprThen,_2,spIfToThen,false,mIfToThen,mIfToEndOfLastBranch)) 
                   )
# 3472 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprCases));
# 11123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3482 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2, rhs parseState 1 
                   )
# 3482 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprThen));
# 11134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3,rhs parseState 1 
                   )
# 3484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprThen));
# 11146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3486 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen())
                             exprFromParseError _3,rhs parseState 1 
                   )
# 3486 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprThen));
# 11159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3491 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             None 
                   )
# 3491 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11169 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some _2 
                   )
# 3493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11180 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3495 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some _3 
                   )
# 3495 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11192 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3497 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse())
                             Some (exprFromParseError _3) 
                   )
# 3497 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 3500 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3503 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some (exprFromParseError _2) 
                   )
# 3503 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ifExprElifs));
# 11230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3507 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let exprs,commas = _1 in (_3 :: exprs),((rhs parseState 2)::commas) 
                   )
# 3507 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleExpr));
# 11242 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3509 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs,commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1",zeroWidthAtNextToken)) :: exprs), (rhs parseState 2)::commas 
                   )
# 3509 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleExpr));
# 11257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3514 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2",zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
# 3514 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleExpr));
# 11271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3518 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 3518 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleExpr));
# 11283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3522 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 3522 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11307 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3527 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if _1 = "&" then 
                                 SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             elif _1 = "&&" then 
                                 SynExpr.AddressOf(false,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range)
                             else
                                 mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3527 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3535 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3535 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3538 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.AddressOf(true,_2,rhs parseState 1,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3538 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3540 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.AddressOf(false,_2,rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3540 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3542 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.New(false,_2,_4,unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3542 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3544 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.New(false,_2,arbExpr("minusExpr",(rhs parseState 4)),unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 3544 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3546 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             arbExpr("minusExpr2",(rhs parseState 1)) 
                   )
# 3546 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3548 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.InferredUpcast(_2,unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3548 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11406 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3550 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.InferredDowncast(_2,unionRanges (rhs parseState 1) _2.Range)
                   )
# 3550 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3556 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1,_2,unionRanges _1.Range _2.Range)  
                   )
# 3556 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3558 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg,_ = _1 
                             arg 
                   )
# 3558 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11452 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3563 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 3563 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg,hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             arg 
                   )
# 3568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3575 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3575 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3580 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1,_ = _1 
                             let arg2,_ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1,arg2,unionRanges arg1.Range arg2.Range),true  
                   )
# 3580 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11508 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3585 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1,_ = _1 
                             let mLessThan,mGreaterThan,_,args,commas,mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp(arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 3585 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11523 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3591 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg2,hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2,hpa2 
                   )
# 3591 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3596 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1,hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2),hpa1 
                   )
# 3596 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11550 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1 = SynExpr.Ident(ident("base",rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2),false 
                   )
# 3599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3602 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.LongIdent (true,LongIdentWithDots([_2],[]),None,rhs parseState 2),false 
                   )
# 3602 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3604 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let arg1,hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 3604 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11586 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3607 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName,rhs parseState 1)), false 
                   )
# 3607 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3609 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Ident (_1),false 
                   )
# 3609 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3611 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 (lhs parseState) false,false 
                   )
# 3611 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3613 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 3613 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3616 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList(false,[ ], lhs parseState),false  
                   )
# 3616 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3619 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList(false,[ ], rhs parseState 1)),false  
                   )
# 3619 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3623 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let exprs,commas = _3 in SynExpr.StructTuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
# 3623 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedBracket()); 
                             let exprs,commas = _3 in SynExpr.StructTuple(List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
# 3625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11680 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3628 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1,false 
                   )
# 3628 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr * bool));
# 11691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3632 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 3632 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3635 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 3635 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot(e,fixedLhsm)) 
                   )
# 3640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3646 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState)
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e,mkSynCaseName lhsm opNameCons,(fst _5),lhsm)) 
                   )
# 3646 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3651 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState) 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 3651 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11759 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3656 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e _2) 
                   )
# 3656 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3659 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2)) 
                   )
# 3659 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3663 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
# 3663 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3666 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
# 3666 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1",mArg))) 
                   )
# 3670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3674 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2",mArg)))) 
                   )
# 3674 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomicExprQualification));
# 11831 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3679 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                            _1::_3 
                   )
# 3679 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRangeSeqExpr));
# 11843 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3680 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    [_1] 
                   )
# 3680 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRangeSeqExpr));
# 11854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3684 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 3) (Some _3)) 
                   )
# 3684 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRange));
# 11866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3686 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) (Some _1), mkSynOptionalExpr (rhs parseState 2) None) 
                   )
# 3686 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRange));
# 11877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3688 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 2) (Some _2)) 
                   )
# 3688 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRange));
# 11888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3690 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynIndexerArg.Two(mkSynOptionalExpr (rhs parseState 1) None, mkSynOptionalExpr (rhs parseState 1) None) 
                   )
# 3690 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRange));
# 11898 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3692 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynIndexerArg.One(_1) 
                   )
# 3692 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'optRange));
# 11909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3697 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Const (_1,_1.Range (lhs parseState)) 
                   )
# 3697 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3699 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3699 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3701 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3701 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3703 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Null(lhs parseState) 
                   )
# 3703 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3705 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Const(SynConst.Bool false,lhs parseState) 
                   )
# 3705 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3707 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Const(SynConst.Bool true,lhs parseState) 
                   )
# 3707 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3709 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3709 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3711 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3711 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 11994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3713 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3713 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynExpr));
# 12005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3717 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Paren(_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 3717 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'beginEndExpr));
# 12016 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 3720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'beginEndExpr));
# 12028 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3723 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr",(lhs parseState))  
                   )
# 3723 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'beginEndExpr));
# 12038 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3726 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 3726 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'beginEndExpr));
# 12048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3730 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
# 3730 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'quoteExpr));
# 12062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, _2, false, mExpr))  
                   )
# 3734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'quoteExpr));
# 12077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3739 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (* silent recovery *) SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr",(rhs parseState 2)), false, lhs parseState)  
                   )
# 3739 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'quoteExpr));
# 12089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote(mkSynIdGet (lhs parseState) (CompileOpName (fst _1)),snd _1, arbExpr("quoteExpr2",(rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
# 3742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'quoteExpr));
# 12102 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3747 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              _2 (lhs parseState) true 
                   )
# 3747 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayExpr));
# 12113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3750 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 3750 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayExpr));
# 12126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3754 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList(true,[ ], lhs parseState) 
                   )
# 3754 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayExpr));
# 12136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar())  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList(true,[ ], rhs parseState 1)) 
                   )
# 3757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayExpr));
# 12149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3763 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynExpr.Const(SynConst.Unit,(rhs2 parseState 1 2)) 
                   )
# 3763 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3766 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren(_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 3766 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3770 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 3).Start
                             SynExpr.Paren(exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 3770 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3775 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             // silent recovery
                             SynExpr.Paren(arbExpr("parenExpr1",(rhs parseState 1).EndRange),(rhs parseState 1),Some(rhs parseState 3),(rhs2 parseState 1 3)) 
                   )
# 3775 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3779 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 3779 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3784 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 3784 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3789 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 3789 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3794 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2obecs", lhsm) 
                   )
# 3794 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             arbExpr("parenExpr2",(lhs parseState))  
                   )
# 3799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExpr));
# 12259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun m -> SynExpr.TraitCall(_1,_4,_6,m)) 
                   )
# 3811 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExprBody));
# 12273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3813 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (fun _m -> _1) 
                   )
# 3813 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExprBody));
# 12284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3815 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 3815 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'parenExprBody));
# 12295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_1] 
                   )
# 3819 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3822 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             List.rev _2 
                   )
# 3822 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12318 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3826 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _3 :: _1
                   )
# 3826 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12330 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_1] 
                   )
# 3829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12341 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3833 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let m,r = _2 in r (rhs2 parseState 1 3) 
                   )
# 3833 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExpr));
# 12353 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3836 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            let m,r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 3836 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExpr));
# 12368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr",rhs2 parseState 1 3)  
                   )
# 3842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExpr));
# 12380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3846 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record(None,None,[],rhs parseState 1) 
                   )
# 3846 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExpr));
# 12393 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3851 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record(None,None,[],m) 
                   )
# 3851 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExpr));
# 12405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3856 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (lhs parseState), (fun m -> let a,b,c = _1 in SynExpr.Record(a,b,c,m)) 
                   )
# 3856 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExprBody));
# 12416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3859 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 3859 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExprBody));
# 12427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3862 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m,r = _1 in (m, r false) 
                   )
# 3862 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'braceExprBody));
# 12438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3866 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m,r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr(isArray, r true m, lhsm)) 
                   )
# 3866 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'listExprElements));
# 12449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList(isArray,[ ], lhsm)) 
                   )
# 3868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'listExprElements));
# 12459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3872 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr(isArrayOrList,ref(isArrayOrList),_1,lhsm)) 
                   )
# 3872 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'monadicExprInitial));
# 12470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3875 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 3875 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'monadicExprInitial));
# 12481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3879 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3879 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rangeSequenceExpr));
# 12499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3887 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (unionRanges _1.Range _5.Range),(fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 3887 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rangeSequenceExpr));
# 12512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3890 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range),(fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App(a,b,c,d,_) -> SynExpr.App(a,b,c,d,wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 3890 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rangeSequenceExpr));
# 12532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3903 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynExpr.YieldOrReturn((true,false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3903 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrowThenExprR));
# 12543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3908 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (_1, _3, true) 
                   )
# 3908 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopBinder));
# 12555 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m,r = _3 in (_1, r false m, true) 
                   )
# 3911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopBinder));
# 12567 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3914 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder",(rhs parseState 2)), false) 
                   )
# 3914 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopBinder));
# 12580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3918 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2",(rhs parseState 1).EndRange), false) 
                   )
# 3918 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopBinder));
# 12593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             idOfPat (rhs parseState 1) _1,_3,_4,_5 
                   )
# 3923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopRange));
# 12607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolEqualsInsteadOfIn()) 
                   )
# 3926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopRange));
# 12619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3930 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             libraryOnlyWarning (lhs parseState)
                             let s,sm = _2,rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (ParseAssemblyCodeInstructions s sm,_3,List.rev _4,_5,m)) 
                   )
# 3930 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'inlineAssemblyExpr));
# 12635 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_curriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3936 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 :: _1 
                   )
# 3936 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_curriedArgExprs));
# 12647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3939 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 3939 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_curriedArgExprs));
# 12657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             None 
                   )
# 3943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12667 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3946 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             Some(_1) 
                   )
# 3946 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_atomicExprAfterType));
# 12678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 3949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                           [_3] 
                   )
# 3950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 12701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3954 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 3954 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3957 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_2] 
                   )
# 3957 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3960 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [] 
                   )
# 3960 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inlineAssemblyReturnTypes));
# 12733 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3964 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2,arg,rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 3964 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3973 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_,_) as f),None,m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 3973 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3986 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, None, [ f, None, None  ]) 
                   )
# 3986 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3993 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, None, [f, None, None]) 
                   )
# 3993 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4002 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, None, l) 
                   )
# 4002 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4011 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 4011 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (None,Some (_1, (rhs parseState 2, None)), []) 
                   )
# 4016 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4019 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (None,Some (_1, (rhs parseState 2, None)), l) 
                   )
# 4019 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExpr));
# 12864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4024 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     Some _1 
                   )
# 4024 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_seps_recd));
# 12875 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4025 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           None 
                   )
# 4025 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_seps_recd));
# 12885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4028 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     (rhs parseState 1), None 
                   )
# 4028 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps_recd));
# 12895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4029 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      let m = (rhs parseState 1) in (m, Some m.End) 
                   )
# 4029 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps_recd));
# 12905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4030 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
# 4030 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps_recd));
# 12915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4031 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
# 4031 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps_recd));
# 12925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4037 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                mkRecdField _1 
                   )
# 4037 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'pathOrUnderscore));
# 12936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4039 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 4039 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'pathOrUnderscore));
# 12948 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4045 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (_3, Some _2) :: _1 
                   )
# 4045 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExprBindings));
# 12961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4046 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 4046 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdExprBindings));
# 12971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4050 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             (_1, Some _3) 
                   )
# 4050 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdBinding));
# 12983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4053 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4053 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdBinding));
# 12995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4057 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4057 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdBinding));
# 13008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4061 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4061 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdBinding));
# 13020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4065 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                             (_1, None) 
                   )
# 4065 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'recdBinding));
# 13033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4076 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,_2,_4, mNewExpr, m)) 
                   )
# 4076 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExpr));
# 13049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4081 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a,b) = _1 in SynExpr.ObjExpr(a,b,[],_3, mNewExpr, m)) 
                   )
# 4081 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExpr));
# 13064 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4086 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a,b) = _2,None in SynExpr.ObjExpr(a,b,[],[], mNewExpr, m)) 
                   )
# 4086 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExpr));
# 13076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4092 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (_2, Some(_4,Some(_5))) 
                   )
# 4092 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBaseCall));
# 13090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4095 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (_2, Some(_4,None)) 
                   )
# 4095 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBaseCall));
# 13103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4098 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2,None 
                   )
# 4098 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBaseCall));
# 13114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4103 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           _1 
                   )
# 4103 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_objExprBindings));
# 13125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4104 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           [] 
                   )
# 4104 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_objExprBindings));
# 13135 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4108 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4108 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBindings));
# 13148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4113 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4113 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBindings));
# 13161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4118 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b,m) -> Some b
                                               | SynMemberDefn.AutoProperty(_,_,_,_,_,_,_,_,_,_,m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(),m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(),x.Range)); None)) 
                   )
# 4118 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprBindings));
# 13177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4125 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                                  _1 :: _2 
                   )
# 4125 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprInterfaces));
# 13189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4129 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [] 
                   )
# 4129 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_objExprInterfaces));
# 13199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4132 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _2 
                   )
# 4132 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_objExprInterfaces));
# 13211 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4135 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (* silent recovery *) _2 
                   )
# 4135 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_objExprInterfaces));
# 13222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4139 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
# 4139 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'objExprInterface));
# 13237 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4142 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  true 
                   )
# 4142 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopDirection));
# 13247 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4143 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  false 
                   )
# 4143 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'forLoopDirection));
# 13257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4147 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4151 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1",(rhs parseState 4))) 
                   )
# 4151 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13282 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4155 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4155 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4159 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
# 4159 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4164 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2",(rhs parseState 4))) 
                   )
# 4164 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4168 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3",(rhs parseState 4)))) 
                   )
# 4168 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4172 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4",(rhs parseState 3)))) 
                   )
# 4172 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4175 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5",(rhs parseState 2)))) 
                   )
# 4175 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonLambdaExpr));
# 13356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4179 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonMatchingExpr));
# 13369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4184 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let clauses,mLast = _2
                             let mAll = unionRanges (rhs parseState 1) mLast
                             SynExpr.MatchLambda(false,(rhs parseState 1),clauses,NoSequencePointAtInvisibleBinding,mAll) 
                   )
# 4184 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'anonMatchingExpr));
# 13382 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4193 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4193 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeWithTypeConstraints));
# 13393 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4196 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3,lhs parseState) 
                   )
# 4196 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeWithTypeConstraints));
# 13405 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4200 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4200 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13416 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4203 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty,List.rev _3,lhs parseState), arity 
                   )
# 4203 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4209 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            None 
                   )
# 4209 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13440 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4212 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,arity = _2 
                            let arity = (match arity with SynValInfo([],rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty,arity),rhs parseState 2)) 
                   )
# 4212 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4218 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let dty,dmdata= _1 
                            let rty,(SynValInfo(dmdatas,rmdata)) = _3 
                            SynType.Fun(dty,rty,lhs parseState), (SynValInfo(dmdata::dmdatas, rmdata)) 
                   )
# 4218 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topType));
# 13467 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4223 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,rmdata = _1 in ty, (SynValInfo([],(match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 4223 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topType));
# 13478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4227 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,mdata = _1 in let tys,mdatas = List.unzip _3 in (SynType.Tuple(List.map (fun ty -> (false,ty)) (ty ::tys), lhs parseState)),(mdata :: mdatas) 
                   )
# 4227 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTupleType));
# 13490 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4230 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let ty,mdata = _1 in ty,[mdata] 
                   )
# 4230 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTupleType));
# 13501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4234 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 :: _3 
                   )
# 4234 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTupleTypeElements));
# 13513 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4237 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            [_1] 
                   )
# 4237 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topTupleTypeElements));
# 13524 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4241 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _4,SynArgInfo(_1,false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4241 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4246 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _5,SynArgInfo(_1,true,Some _3) 
                   )
# 4246 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4249 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (_2,SynArgInfo(_1,false,None)) 
                   )
# 4249 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4252 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id],_)) -> _3,SynArgInfo([],false,Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4252 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13578 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4257 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _4,SynArgInfo([],true,Some _2) 
                   )
# 4257 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13590 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1,SynArgInfo([],false,None) 
                   )
# 4260 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topAppType));
# 13601 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4266 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.Fun(_1,_3,lhs parseState) 
                   )
# 4266 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynType));
# 13613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4269 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4269 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynType));
# 13624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
# 4272 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynType));
# 13636 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4277 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynType.Tuple((false,_1) :: _3,lhs parseState) 
                   )
# 4277 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleType));
# 13648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4280 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)):: _2, lhs parseState) 
                   )
# 4280 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleType));
# 13661 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple((true,_1) :: _3, lhs parseState) 
                   )
# 4284 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleType));
# 13675 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4288 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 
                   )
# 4288 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleType));
# 13686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           (false,_1) :: _3 
                   )
# 4292 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4295 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true,_1) :: _3 
                   )
# 4295 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4299 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           [(false,_1)] 
                   )
# 4299 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 13723 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4303 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 :: _3 
                   )
# 4303 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleTypeElements));
# 13735 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4306 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           [_1] 
                   )
# 4306 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'tupleTypeElements));
# 13746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynType.LongIdent(_1) 
                   )
# 4310 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeCon));
# 13757 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4313 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
# 4313 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeCon));
# 13768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4317 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
# 4317 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeConPower));
# 13783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4322 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 
                   )
# 4322 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeConPower));
# 13794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4326 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13806 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4329 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4329 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4332 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 4332 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4335 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4335 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4340 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 4340 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4343 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4348 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appType));
# 13881 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4352 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             1 
                   )
# 4352 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayTypeSuffix));
# 13891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4355 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             2 
                   )
# 4355 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayTypeSuffix));
# 13901 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             3 
                   )
# 4358 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayTypeSuffix));
# 13911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4361 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             4 
                   )
# 4361 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'arrayTypeSuffix));
# 13921 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4365 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2)::(List.rev commas) 
                   )
# 4365 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypePrefixArguments));
# 13934 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4369 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4369 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgListElements));
# 13947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4373 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2)::commas 
                   )
# 4373 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgListElements));
# 13961 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4378 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [], [] 
                   )
# 4378 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgListElements));
# 13971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 
                   )
# 4382 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'powerType));
# 13982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4385 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
# 4385 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'powerType));
# 13997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4392 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_2,_1,lhs parseState) 
                   )
# 4392 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4396 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.Array(_3,_1,lhs parseState) 
                   )
# 4396 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4400 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let mWhole = unionRanges (rhs parseState 1) _2.Range  // note: use "rhs parseState 1" to deal with parens in "(int) list"
                             deprecatedWithError (FSComp.SR.parsNonAtomicType()) mWhole;
                             SynType.App(_2, None, [_1], [], None, true, mWhole) 
                   )
# 4400 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4405 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4405 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14052 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4410 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 4410 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14063 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4413 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              let tp,typ = _1,_3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp,typ,m)],m)  
                   )
# 4413 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14078 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4419 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4419 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'appTypeNonAtomicDeprecated));
# 14090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4425 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 
                   )
# 4425 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 14101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4428 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            deprecatedWithError (FSComp.SR.parsNonAtomicType()) (lhs parseState);
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
# 4428 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'powerTypeNonAtomicDeprecated));
# 14117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4438 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
# 4438 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4441 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4441 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4444 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 4444 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4447 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _2 
                   )
# 4447 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4450 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 4450 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4454 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynType.StructTuple((false,_3) :: _5,lhs parseState) 
                   )
# 4454 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4457 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.StructTuple((false,_3) :: _5,lhs parseState) 
                   )
# 4457 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14201 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4461 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4461 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14214 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4465 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4465 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14227 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4469 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4469 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4473 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 4473 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4476 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 4476 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4480 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let e,_ = _2
                             SynType.StaticConstantExpr(e, e.Range) 
                   )
# 4480 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14273 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false,lhs parseState) 
                   )
# 4484 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14283 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4487 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true,lhs parseState) 
                   )
# 4487 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4490 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 4490 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14304 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 4493 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4496 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 4496 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4499 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mLessThan,mGreaterThan,args,commas,mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
# 4499 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14342 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4503 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 4503 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'atomType));
# 14355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4509 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(),rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4509 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * Ast.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4515 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 4515 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * Ast.SynType list * range list * range));
# 14381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4520 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), lhs parseState 
                   )
# 4520 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3)::(List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4524 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4534 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4534 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14435 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4540 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 4540 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4543 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let nextToken = rhs parseState 3
                            if not _3 then reportParseErrorAt nextToken (FSComp.SR.parsMissingTypeArgs())
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4543 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14464 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4549 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 4549 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 4552 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : range * range option * bool     * Ast.SynType list * range list * range));
# 14494 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4562 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4562 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgActual));
# 14505 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4565 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 4565 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgActual));
# 14517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
# 4568 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgActual));
# 14531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4575 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4575 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4578 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
# 4578 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14554 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("",m)],[]))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
# 4583 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'dummyTypeArg));
# 14568 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4592 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 4592 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeArg));
# 14581 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4595 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 4595 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeArg));
# 14593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 4599 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeAtom));
# 14604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4602 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
# 4602 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeAtom));
# 14615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4605 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _2 
                   )
# 4605 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeAtom));
# 14627 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4609 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _1 
                   )
# 4609 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypePower));
# 14638 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4612 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
# 4612 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypePower));
# 14653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4617 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 4617 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypePower));
# 14665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4622 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           [_1] 
                   )
# 4622 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeSeq));
# 14676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           _1 :: _2 
                   )
# 4625 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeSeq));
# 14688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4629 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 4629 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeExpr));
# 14699 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4632 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 4632 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeExpr));
# 14711 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4635 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 4635 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeExpr));
# 14726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 4640 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'measureTypeExpr));
# 14739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4645 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id ,NoStaticReq,false) 
                   )
# 4645 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypar));
# 14751 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4649 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4649 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.SynTypar));
# 14762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4653 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            Typar(id,HeadTypeStaticReq,false) 
                   )
# 4653 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 14776 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4661 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            ident(_1,rhs parseState 1) 
                   )
# 4661 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.Ident));
# 14787 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4667 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName,rhs parseState 1)],[]) 
                   )
# 4667 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4670 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4673 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 4673 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14820 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4676 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid,dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 4676 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 14833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4683 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             ident(CompileOpName _2,rhs parseState 2) 
                   )
# 4683 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opName));
# 14845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4686 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****",rhs parseState 2) 
                   )
# 4686 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opName));
# 14856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4689 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             ident(CompileOpName "*",rhs parseState 1) 
                   )
# 4689 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opName));
# 14866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4693 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text,rhs2 parseState 2 3) 
                   )
# 4693 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opName));
# 14879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4698 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text,rhs2 parseState 2 5) 
                   )
# 4698 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opName));
# 14892 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4704 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (IsValidPrefixOperatorDefinitionName _1) then 
                                 reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                             _1 
                   )
# 4704 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4708 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               _1 
                   )
# 4708 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                            _1 
                   )
# 4710 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4712 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                            _1 
                   )
# 4712 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14938 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4714 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         _1 
                   )
# 4714 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4716 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        _1 
                   )
# 4716 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4718 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          _1 
                   )
# 4718 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 _1 
                   )
# 4720 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4722 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  "$" 
                   )
# 4722 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 14992 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              _1 
                   )
# 4724 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15003 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4726 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 "-" 
                   )
# 4726 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4728 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                "*" 
                   )
# 4728 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4730 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  "=" 
                   )
# 4730 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                              "or" 
                   )
# 4732 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15043 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                "<" 
                   )
# 4734 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4736 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   ">" 
                   )
# 4736 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4738 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 "?" 
                   )
# 4738 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4740 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               "&" 
                   )
# 4740 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15085 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   "&&" 
                   )
# 4742 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4744 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   "||" 
                   )
# 4744 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4746 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        ":=" 
                   )
# 4746 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15115 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4749 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                  deprecatedOperator (lhs parseState); 
                             _1 
                   )
# 4749 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      _1 
                   )
# 4753 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15139 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4755 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   ".." 
                   )
# 4755 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15149 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                           ".. .." 
                   )
# 4757 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15159 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4760 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                             fst _1 
                   )
# 4760 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'operatorName));
# 15172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4766 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                             if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                             _1 
                   )
# 4766 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'activePatternCaseName));
# 15185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4773 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             [_2] 
                   )
# 4773 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'activePatternCaseNames));
# 15196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4776 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             _3 :: _1 
                   )
# 4776 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'activePatternCaseNames));
# 15208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4781 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4781 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'identOrOp));
# 15219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4784 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            _1 
                   )
# 4784 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'identOrOp));
# 15230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4790 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4790 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 15241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4793 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            LongIdentWithDots([_1],[]) 
                   )
# 4793 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 15252 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4796 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            let (LongIdentWithDots(lid,dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 4796 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 15264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : Ast.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1],[rhs parseState 2]) 
                   )
# 4799 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : Ast.LongIdentWithDots));
# 15275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4804 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                      _1 
                   )
# 4804 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'nameop));
# 15286 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4807 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 4807 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topSeparator));
# 15296 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4808 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               
                   )
# 4808 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topSeparator));
# 15306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4809 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 4809 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topSeparator));
# 15316 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4812 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                            
                   )
# 4812 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topSeparators));
# 15327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4813 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                      
                   )
# 4813 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'topSeparators));
# 15339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                          
                   )
# 4816 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_topSeparators));
# 15351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                          
                   )
# 4817 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_topSeparators));
# 15361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 4821 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps));
# 15371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4822 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 4822 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps));
# 15381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4823 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               
                   )
# 4823 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps));
# 15391 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4824 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                               
                   )
# 4824 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'seps));
# 15401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             
                   )
# 4829 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'declEnd));
# 15411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4831 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               
                   )
# 4831 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'declEnd));
# 15421 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4833 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             
                   )
# 4833 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'declEnd));
# 15431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4838 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            
                   )
# 4838 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declEnd));
# 15441 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4840 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                             
                   )
# 4840 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declEnd));
# 15451 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            
                   )
# 4842 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declEnd));
# 15461 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4844 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                            
                   )
# 4844 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_declEnd));
# 15471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4847 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4847 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_ODECLEND));
# 15481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4848 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4848 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_ODECLEND));
# 15491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4851 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 4851 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'deprecated_opt_equals));
# 15501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4852 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        
                   )
# 4852 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'deprecated_opt_equals));
# 15511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4855 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4856 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4856 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4859 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4859 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_seps));
# 15542 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4860 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_seps));
# 15552 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4863 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       true 
                   )
# 4863 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_rec));
# 15562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4864 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       false 
                   )
# 4864 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_rec));
# 15572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4867 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4867 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_bar));
# 15582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       
                   )
# 4868 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_bar));
# 15592 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4871 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       true 
                   )
# 4871 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inline));
# 15602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4872 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       false 
                   )
# 4872 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_inline));
# 15612 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4875 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       true 
                   )
# 4875 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_mutable));
# 15622 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4876 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                       false 
                   )
# 4876 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_mutable));
# 15632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4880 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               
                   )
# 4880 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'doToken));
# 15642 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4881 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               
                   )
# 4881 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'doToken));
# 15652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4884 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                
                   )
# 4884 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'doneDeclEnd));
# 15662 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4885 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                    
                   )
# 4885 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'doneDeclEnd));
# 15672 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4888 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 4888 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'structOrBegin));
# 15682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4889 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 
                   )
# 4889 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'structOrBegin));
# 15692 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4892 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4892 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'sigOrBegin));
# 15702 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4893 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 
                   )
# 4893 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'sigOrBegin));
# 15712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4896 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 4896 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'colonOrEquals));
# 15722 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4897 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  
                   )
# 4897 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'colonOrEquals));
# 15732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4901 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  _1 
                   )
# 4901 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'stringOrKeywordString));
# 15743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4902 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          _1 
                   )
# 4902 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'stringOrKeywordString));
# 15754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4905 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                     
                   )
# 4905 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4906 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                     
                   )
# 4906 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4907 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         
                   )
# 4907 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 15784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4910 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 
                   )
# 4910 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                         
                   )
# 4911 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 15804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4915 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                        
                   )
# 4915 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeKeyword));
# 15815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4916 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                        
                   )
# 4916 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeKeyword));
# 15825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                
                   )
# 4917 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'typeKeyword));
# 15835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4921 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                            
                   )
# 4921 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleKeyword));
# 15846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4922 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          
                   )
# 4922 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleKeyword));
# 15856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  
                   )
# 4923 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'moduleKeyword));
# 15866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                     
                   )
# 4926 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rbrace));
# 15877 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4927 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          
                   )
# 4927 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rbrace));
# 15887 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  
                   )
# 4928 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rbrace));
# 15897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4931 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                     
                   )
# 4931 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rparen));
# 15908 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                          
                   )
# 4932 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rparen));
# 15918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4933 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                  
                   )
# 4933 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'rparen));
# 15928 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4936 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                           
                   )
# 4936 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'oblockend));
# 15939 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                             
                   )
# 4937 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'oblockend));
# 15949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4938 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                     
                   )
# 4938 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'oblockend));
# 15959 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4941 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                            false 
                   )
# 4941 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15969 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4942 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              false 
                   )
# 4942 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15979 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              false 
                   )
# 4943 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4944 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 false 
                   )
# 4944 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 15999 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4945 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   _1 
                   )
# 4945 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4948 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                            false 
                   )
# 4948 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              false 
                   )
# 4949 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16030 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              false 
                   )
# 4950 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16040 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4951 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                              false 
                   )
# 4951 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16050 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4952 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                                 false 
                   )
# 4952 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4953 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                                   _1 
                   )
# 4953 "f:\Code\FSharp.Compiler.Service\fcs\FSharp.Compiler.Service.netstandard\..\..\src\fsharp\pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 16072 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 196;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : Ast.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : Ast.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : Ast.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSeqExprEOF lexer lexbuf : Ast.SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : Ast.SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
